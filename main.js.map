{"version":3,"file":"main.js","mappings":"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","sources":["webpack://@flowda-projects/flowda-api/./src/app/app.controller.ts","webpack://@flowda-projects/flowda-api/./src/app/app.module.ts","webpack://@flowda-projects/flowda-api/./src/app/audit.controller.ts","webpack://@flowda-projects/flowda-api/./src/app/data.controller.ts","webpack://@flowda-projects/flowda-api/./src/app/dynamic-table-data.controller.ts","webpack://@flowda-projects/flowda-api/./src/app/dynamic-table-def.controller.ts","webpack://@flowda-projects/flowda-api/./src/app/menu.controller.ts","webpack://@flowda-projects/flowda-api/./src/app/table-filter.controller.ts","webpack://@flowda-projects/flowda-api/./src/app/task.controller.ts","webpack://@flowda-projects/flowda-api/./src/loadModule.ts","webpack://@flowda-projects/flowda-api/./src/services/services.module.ts","webpack://@flowda-projects/flowda-api/./src/setup.ts","webpack://@flowda-projects/flowda-api/./src/user/user.controller.ts","webpack://@flowda-projects/flowda-api/./src/user/userJwt.strategy.ts","webpack://@flowda-projects/flowda-api/./src/user/userJwtAuth.guard.ts","webpack://@flowda-projects/flowda-api/./src/user/userLocal.strategy.ts","webpack://@flowda-projects/flowda-api/./src/user/userLocalAuth.guard.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/flowdaServiceTrpcServer.module.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/index.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/trpc/data.router.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/trpc/schema.router.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/trpc/sdk-v4/customer-auth-v4.router.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/trpc/sdk-v4/order-v4.router.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/trpc/sdk-v4/product-v4.router.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/trpc/trpc.context.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/trpc/trpc.router.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/trpc/trpc.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services-trpc-server/src/trpc/user.router.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/axios.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/flowdaServiceModule.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/index.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/lib/flowda-env.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/lib/schema.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/dynamic-table-data.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/dynamic-table-def.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/menu.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/sdk/orderV4.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/sdk/productV4.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/task.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/user.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/weixin-fuwuhao-login.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/weixin-login.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-services/src/services/weixin-pay.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-node/src/filters/appExceptionFilter.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-node/src/flowdaSharedNode.module.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-node/src/index.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-node/src/services/audit.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-node/src/services/table-filter.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-node/src/trpc/trpc-utils.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-types/src/index.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-types/src/symbols.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-types/src/types.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-types/src/zod-utils.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared-types/src/zods.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/flowdaShared.module.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/index.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/services/data/data.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/services/schema/dynamicTableSchemaTransformer.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/services/schema/meta.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/services/schema/prismaSchema.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/services/schema/prismaUtils.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/services/schema/schema.service.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/services/schema/schemaTransformer.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/utils/ag-grid-utils.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/utils/bindService.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/utils/browser-log-utils.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/utils/custom-error.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/utils/dayjs-utils.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/utils/getServices.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/utils/matchPath.ts","webpack://@flowda-projects/flowda-api/../../libs/flowda-shared/src/utils/schema-utils.ts","webpack://@flowda-projects/flowda-api/../../libs/prisma-flowda/src/index.ts","webpack://@flowda-projects/flowda-api/../../libs/prisma-flowda/src/zod/index.ts","webpack://@flowda-projects/flowda-api/external commonjs \"@anatine/zod-openapi\"","webpack://@flowda-projects/flowda-api/external commonjs \"@nestjs/common\"","webpack://@flowda-projects/flowda-api/external commonjs \"@nestjs/core\"","webpack://@flowda-projects/flowda-api/external commonjs \"@nestjs/passport\"","webpack://@flowda-projects/flowda-api/external commonjs \"@nestjs/schedule\"","webpack://@flowda-projects/flowda-api/external commonjs \"@paralleldrive/cuid2\"","webpack://@flowda-projects/flowda-api/external commonjs \"@prisma/client-flowda\"","webpack://@flowda-projects/flowda-api/external commonjs \"@trpc/server\"","webpack://@flowda-projects/flowda-api/external commonjs \"@trpc/server/adapters/express\"","webpack://@flowda-projects/flowda-api/external commonjs \"axios\"","webpack://@flowda-projects/flowda-api/external commonjs \"bcrypt\"","webpack://@flowda-projects/flowda-api/external commonjs \"consola\"","webpack://@flowda-projects/flowda-api/external commonjs \"dayjs\"","webpack://@flowda-projects/flowda-api/external commonjs \"dayjs/plugin/advancedFormat\"","webpack://@flowda-projects/flowda-api/external commonjs \"dayjs/plugin/timezone\"","webpack://@flowda-projects/flowda-api/external commonjs \"dayjs/plugin/utc\"","webpack://@flowda-projects/flowda-api/external commonjs \"express\"","webpack://@flowda-projects/flowda-api/external commonjs \"http-proxy-middleware\"","webpack://@flowda-projects/flowda-api/external commonjs \"inversify\"","webpack://@flowda-projects/flowda-api/external commonjs \"jsonwebtoken\"","webpack://@flowda-projects/flowda-api/external commonjs \"lodash\"","webpack://@flowda-projects/flowda-api/external commonjs \"nestjs-zod\"","webpack://@flowda-projects/flowda-api/external commonjs \"passport-jwt\"","webpack://@flowda-projects/flowda-api/external commonjs \"passport-local\"","webpack://@flowda-projects/flowda-api/external commonjs \"pluralize\"","webpack://@flowda-projects/flowda-api/external commonjs \"radash\"","webpack://@flowda-projects/flowda-api/external commonjs \"tencentcloud-sdk-nodejs\"","webpack://@flowda-projects/flowda-api/external commonjs \"tslib\"","webpack://@flowda-projects/flowda-api/external commonjs \"wechat-oauth\"","webpack://@flowda-projects/flowda-api/external commonjs \"wechatpay-node-v3\"","webpack://@flowda-projects/flowda-api/external commonjs \"znv\"","webpack://@flowda-projects/flowda-api/external commonjs \"zod\"","webpack://@flowda-projects/flowda-api/webpack/bootstrap","webpack://@flowda-projects/flowda-api/./src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common'\n\n@Controller('/apps')\nexport class AppController {\n  constructor() {}\n\n  @Get('/__hi')\n  hi() {\n    return { hi: 'flowda-api' }\n  }\n}\n","import { Module } from '@nestjs/common'\nimport { APP_FILTER, APP_PIPE } from '@nestjs/core'\n\nimport { AppController } from './app.controller'\nimport { ServicesModule } from '../services/services.module'\nimport { AppExceptionFilter } from '@flowda-projects/flowda-shared-node'\nimport { TaskController } from './task.controller'\nimport { UserController } from '../user/user.controller'\nimport { UserLocalStrategy } from '../user/userLocal.strategy'\nimport { UserJwtStrategy } from '../user/userJwt.strategy'\nimport { DataController } from './data.controller'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TableFilterController } from './table-filter.controller'\nimport { AuditController } from './audit.controller'\nimport { ZodValidationPipe } from 'nestjs-zod'\nimport { DynamicTableDefController } from './dynamic-table-def.controller'\nimport { DynamicTableDataController } from './dynamic-table-data.controller'\nimport { MenuController } from './menu.controller'\n\nexport const appModuleControllers = [\n  AppController,\n  DataController,\n  TaskController,\n  UserController,\n  TableFilterController,\n  AuditController,\n  DynamicTableDefController,\n  DynamicTableDataController,\n  MenuController,\n]\nexport const appModuleProviders = [\n  {\n    provide: APP_FILTER,\n    useClass: AppExceptionFilter,\n  },\n  {\n    provide: APP_PIPE,\n    useClass: ZodValidationPipe,\n  },\n  UserLocalStrategy,\n  UserJwtStrategy,\n]\n\n@Module({\n  imports: [ServicesModule, ScheduleModule.forRoot()],\n  controllers: appModuleControllers,\n  providers: appModuleProviders,\n})\nexport class AppModule {}\n","import { Body, Controller, Post } from '@nestjs/common'\nimport { AuditService, QueryAuditSchemaDto } from '@flowda-projects/flowda-shared-node'\n\n@Controller('/audit')\nexport class AuditController {\n  constructor(private readonly audit: AuditService) {}\n\n  @Post('/query')\n  queryTableFilter(@Body() dto: QueryAuditSchemaDto) {\n    return this.audit.queryAudit(dto)\n  }\n}\n","import { Body, Controller, Delete, Get, HttpCode, Post, Put, Req, UseGuards } from '@nestjs/common'\nimport * as express from 'express'\nimport { DataService } from '@flowda-projects/flowda-shared'\nimport { UserJwtAuthGuard } from '../user/userJwtAuth.guard'\n\n@Controller('data/*')\n@UseGuards(UserJwtAuthGuard)\nexport class DataController {\n  constructor(private service: DataService) {}\n\n  @Get('')\n  async get(@Req() req: express.Request) {\n    return this.service.get(req.user, req.params[0], req.query)\n  }\n\n  @Put('')\n  async put(@Req() req: express.Request, @Body() values: any) {\n    return this.service.put(req.user, req.params[0], values)\n  }\n\n  @Post('')\n  async post(@Req() req: express.Request, @Body() values: any) {\n    return this.service.post(req.user, req.params[0], values)\n  }\n\n  @Delete('')\n  @HttpCode(200)\n  async remove(@Req() req: express.Request) {\n    return this.service.remove(req.user, req.params[0])\n  }\n}\n","import { Body, Controller, Delete, Get, HttpCode, Post, Put, Req } from '@nestjs/common'\nimport { DynamicTableDataService } from '@flowda-projects/flowda-services'\nimport * as express from 'express'\n\n@Controller('/dynamic-table-data/*')\nexport class DynamicTableDataController {\n  constructor(private readonly service: DynamicTableDataService) {}\n\n  @Get('')\n  async get(@Req() req: express.Request) {\n    return this.service.get(req.user, req.params[0], req.query)\n  }\n\n  @Post('')\n  post(@Req() req: express.Request, @Body() values: any) {\n    return this.service.post(req.user, req.params[0], values)\n  }\n\n  @Put('')\n  async put(@Req() req: express.Request, @Body() values: any) {\n    return this.service.put(req.user, req.params[0], values)\n  }\n\n  @Delete('')\n  @HttpCode(200)\n  remove(@Req() req: express.Request) {\n    return this.service.remove(req.user, req.params[0])\n  }\n}\n","import { Controller, Get } from '@nestjs/common'\nimport { DynamicTableDefService } from '@flowda-projects/flowda-services'\n\n@Controller('/dynamic-table-def')\nexport class DynamicTableDefController {\n  constructor(private readonly defService: DynamicTableDefService) {}\n\n  @Get('/getSchema')\n  getSchema() {\n    return this.defService.getSchema()\n  }\n\n  @Get('/getRaw')\n  getRaw() {\n    return this.defService.getRaw()\n  }\n}\n","import { Controller, Get, Request, UseGuards } from '@nestjs/common'\nimport { MenuService } from '@flowda-projects/flowda-services'\nimport { UserJwtAuthGuard } from '../user/userJwtAuth.guard'\n\n@Controller('/menu')\n@UseGuards(UserJwtAuthGuard)\nexport class MenuController {\n  constructor(private readonly menu: MenuService) {}\n\n  @Get('getMenu')\n  get(@Request() req) {\n    return this.menu.get(req.user)\n  }\n}\n","import { Body, Controller, Post } from '@nestjs/common'\nimport {\n  QueryTableFilterSchemaDto,\n  RemoveTableFilterSchemaDto,\n  SaveTableFilterDto,\n  TableFilterService,\n} from '@flowda-projects/flowda-shared-node'\n\n@Controller('/table-filter')\nexport class TableFilterController {\n  constructor(private readonly tableFilter: TableFilterService) {}\n\n  @Post('/save')\n  saveTableFilter(@Body() dto: SaveTableFilterDto) {\n    return this.tableFilter.save(dto)\n  }\n\n  @Post('/query')\n  queryTableFilter(@Body() dto: QueryTableFilterSchemaDto) {\n    return this.tableFilter.query(dto)\n  }\n\n  @Post('/remove')\n  removeTableFilter(@Body() dto: RemoveTableFilterSchemaDto) {\n    return this.tableFilter.remove(dto)\n  }\n}\n","import { Body, Controller, Get, Param, Post } from '@nestjs/common'\nimport { GetTaskFormSchemaDto, TaskService } from '@flowda-projects/flowda-services'\n\n@Controller('/tasks')\nexport class TaskController {\n  constructor(private readonly taskService: TaskService) {}\n\n  @Post('/getTaskForm')\n  getTaskForm(@Body() dto: GetTaskFormSchemaDto) {\n    return this.taskService.getTaskForm(dto)\n  }\n\n  @Get('/:taskId')\n  getTask(@Param('taskId') taskId: string) {\n    return this.taskService.getTask(taskId)\n  }\n\n  @Post('/:taskId/completeResource')\n  completeResource(@Param('taskId') taskId: string, @Body() body: any) {\n    return this.taskService.completeResource(taskId, body)\n  }\n}\n","import { interfaces } from 'inversify'\nimport { flowdaServiceModule, SmsClientSymbol } from '@flowda-projects/flowda-services'\nimport { PrismaClient } from '@prisma/client-flowda'\nimport { flowdaSharedModule, PrismaClientSymbol } from '@flowda-projects/flowda-shared'\nimport { flowdaSharedNodeModule } from '@flowda-projects/flowda-shared-node'\nimport { flowdaServiceTrpcServerModule } from '@flowda-projects/flowda-services-trpc-server'\nimport * as tencentcloud from 'tencentcloud-sdk-nodejs'\nimport type { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20210111/sms_client'\n\nconst smsClient = tencentcloud.sms.v20210111.Client\n\nconst prisma = new PrismaClient({\n  log: [\n    // 'query',\n    'info',\n    'warn',\n    'error',\n  ],\n})\n\nconsole.log('---------- ENV --------------')\nconsole.log('---------- ENV --------------')\n\nexport function loadModule(container: interfaces.Container) {\n  container.bind<Client>(SmsClientSymbol).toConstantValue(\n    new smsClient({\n      credential: {\n        secretId: process.env.SMS_SECRET_ID,\n        secretKey: process.env.SMS_SECRET_KEY,\n      },\n      region: 'ap-nanjing',\n    }),\n  )\n  container.bind<PrismaClient>(PrismaClientSymbol).toConstantValue(prisma)\n  container.load(flowdaSharedModule)\n  container.load(flowdaSharedNodeModule)\n  container.load(flowdaServiceTrpcServerModule)\n  container.load(flowdaServiceModule)\n}\n","import { Global, Module } from '@nestjs/common'\nimport { Container } from 'inversify'\nimport { getServices } from '@flowda-projects/flowda-shared'\nimport { loadModule } from '../loadModule'\n\nexport const servicesContainer = new Container()\nloadModule(servicesContainer)\n\nconst services = getServices(servicesContainer)\n\n@Global()\n@Module({\n  providers: services,\n  exports: services,\n})\nexport class ServicesModule {\n  constructor() {}\n}\n","import { INestApplication } from '@nestjs/common'\nimport { TrpcRouter } from '@flowda-projects/flowda-services-trpc-server'\nimport { FLOWDA_ENV, UserService } from '@flowda-projects/flowda-services'\nimport { ExtractJwt } from 'passport-jwt'\nimport { createProxyMiddleware } from 'http-proxy-middleware'\n\nexport const globalPrefix = 'flowda-api'\n\nexport function setupNestApp(app: INestApplication) {\n  app.enableCors()\n  app.setGlobalPrefix(globalPrefix)\n  const trpc = app.get(TrpcRouter)\n  trpc.applyMiddleware(app, globalPrefix)\n\n  const user = app.get(UserService)\n\n  app.use((req, res, next) => {\n    if (req.originalUrl.includes('favicon.ico')) {\n      res.status(204).end()\n    } else if (req.url.indexOf(`/${globalPrefix}/camunda/engine-rest/`) > -1) {\n      const extract = ExtractJwt.fromAuthHeaderAsBearerToken()\n      const bearerToken = extract(req)\n      if (bearerToken) {\n        try {\n          const authed = user.verifyAccessToken(bearerToken)\n          if (authed) {\n            next()\n          } else {\n            res.status(401).json({\n              message: '[PROXY] Unauthorized',\n            })\n          }\n        } catch (e) {\n          res.status(401).json({\n            message: '[PROXY] Unauthorized',\n          })\n        }\n      } else {\n        res.status(401).json({\n          message: '[PROXY] Unauthorized',\n        })\n      }\n    } else {\n      next()\n    }\n  })\n\n  // Proxy endpoints\n  app.use(\n    `/${globalPrefix}/camunda/engine-rest`,\n    createProxyMiddleware({\n      target: FLOWDA_ENV.C7_REST_URL,\n      changeOrigin: true,\n      pathRewrite: {\n        [`^/${globalPrefix}/camunda/engine-rest`]: '',\n      },\n    }),\n  )\n}\n","import { Body, Controller, Get, HttpCode, Logger, Post, Request, UseGuards, UsePipes } from '@nestjs/common'\nimport { UserLocalAuthGuard } from './userLocalAuth.guard'\nimport { RegisterDto, resetPasswordSchemaDto, UserService } from '@flowda-projects/flowda-services'\nimport { ZodValidationPipe } from 'nestjs-zod'\nimport { UserJwtAuthGuard } from './userJwtAuth.guard'\n\n@Controller('user')\nexport class UserController {\n  private readonly logger = new Logger(UserController.name)\n\n  constructor(private service: UserService) {}\n\n  @Post('register')\n  @UsePipes(ZodValidationPipe)\n  register(@Body() dto: RegisterDto) {\n    return this.service.register(dto)\n  }\n\n  @UseGuards(UserJwtAuthGuard)\n  @Post('resetPassword')\n  resetPassword(@Request() req, @Body() dto: resetPasswordSchemaDto) {\n    return this.service.resetPassword(req.user, dto)\n  }\n\n  @UseGuards(UserLocalAuthGuard)\n  @Post('login')\n  @HttpCode(200)\n  login(@Request() req) {\n    return req.user\n  }\n\n  @UseGuards(UserJwtAuthGuard)\n  @Get('getUserInfo')\n  getUserInfo(@Request() req) {\n    return this.service.getUserInfo(req.user.uid)\n  }\n\n  @UseGuards(UserJwtAuthGuard)\n  @Post('logout')\n  logout(@Request() req) {\n    // 客户端清空 token\n    // 服务端清空 refresh token\n    // 暂时不做 blacklist access_token 失效时间 10min\n    return req.user\n  }\n}\n","import { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { Injectable, Logger } from '@nestjs/common'\nimport { FLOWDA_ENV } from '@flowda-projects/flowda-services'\n\n@Injectable()\nexport class UserJwtStrategy extends PassportStrategy(Strategy, 'userJwt') {\n  private logger = new Logger(UserJwtStrategy.name)\n\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: FLOWDA_ENV.ACCESS_TOKEN_SECRET,\n    })\n  }\n\n  async validate(payload: any) {\n    // this.logger.debug!(`[UserJwtStrategy] payload ${JSON.stringify(payload, null, 2)}`)\n    return payload\n  }\n}\n","import { AuthGuard } from '@nestjs/passport'\nimport { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class UserJwtAuthGuard extends AuthGuard('userJwt') {}\n","import { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { Injectable, Logger } from '@nestjs/common'\nimport { UserService } from '@flowda-projects/flowda-services'\n\n@Injectable()\nexport class UserLocalStrategy extends PassportStrategy(Strategy, 'userLocal') {\n  private readonly logger = new Logger(UserLocalStrategy.name)\n\n  constructor(private user: UserService) {\n    super({\n      usernameField: 'username',\n      passwordField: 'password',\n    })\n  }\n\n  async validate(username: string, password: string) {\n    const ret = await this.user.validate({ username, password })\n    return ret.user\n  }\n}\n","import { AuthGuard } from '@nestjs/passport'\nimport { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class UserLocalAuthGuard extends AuthGuard('userLocal') {}\n","import { ContainerModule } from 'inversify'\nimport { bindService, ServiceSymbol } from '@flowda-projects/flowda-shared'\nimport { TrpcService } from './trpc/trpc.service'\nimport { TrpcRouter } from './trpc/trpc.router'\nimport { SchemaRouter } from './trpc/schema.router'\nimport { UserRouter } from './trpc/user.router'\nimport { ContextFactory } from './trpc/trpc.context'\nimport { DataRouter } from './trpc/data.router'\nimport { CustomerAuthV4Router } from './trpc/sdk-v4/customer-auth-v4.router'\nimport { OrderV4Router } from './trpc/sdk-v4/order-v4.router'\nimport { ProductV4Router } from './trpc/sdk-v4/product-v4.router'\n\nexport const flowdaServiceTrpcServerModule = new ContainerModule(bind => {\n  bind(TrpcService).toSelf().inSingletonScope()\n  bind(ContextFactory).toSelf().inSingletonScope()\n  bind(SchemaRouter).toSelf().inSingletonScope()\n  bind(UserRouter).toSelf().inSingletonScope()\n  bind(DataRouter).toSelf().inSingletonScope()\n\n  bind(CustomerAuthV4Router).toSelf().inSingletonScope()\n  bind(OrderV4Router).toSelf().inSingletonScope()\n  bind(ProductV4Router).toSelf().inSingletonScope()\n\n  bindService(bind, ServiceSymbol, TrpcRouter)\n})\n","import { extendZodWithOpenApi } from '@anatine/zod-openapi'\nimport { z } from 'zod'\n\nextendZodWithOpenApi(z)\nexport * from './flowdaServiceTrpcServer.module'\n\nexport * from './trpc/trpc.router'\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from './trpc.service'\nimport type { LoggerService } from '@nestjs/common'\nimport { z } from 'zod'\nimport type { DataService } from '@flowda-projects/flowda-shared'\nimport { DataServiceSymbol } from '@flowda-projects/flowda-shared'\n\n@injectable()\nexport class DataRouter {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(DataServiceSymbol) private dataService: DataService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(DataRouter.name)\n  }\n\n  router = this.trpc.router({\n    get: this.trpc.procedure\n      .input(\n        z.object({\n          user: z.any(),\n          path: z.string(),\n          query: z.any(),\n        }),\n      )\n      .query(async ({ input, ctx }) => {\n        return this.dataService.get(input.user, input.path, input.query)\n      }),\n\n    put: this.trpc.procedure\n      .input(\n        z.object({\n          user: z.any(),\n          path: z.string(),\n          values: z.any(),\n        }),\n      )\n      .mutation(async ({ input, ctx }) => {\n        return this.dataService.put(input.user, input.path, input.values)\n      }),\n  })\n}\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from './trpc.service'\nimport type { LoggerService } from '@nestjs/common'\nimport { z } from 'zod'\nimport type { SchemaService } from '@flowda-projects/flowda-shared'\nimport { SchemaServiceSymbol } from '@flowda-projects/flowda-shared'\n// todo: 改成 interface 去掉对 flowda-services 的依赖\nimport type { DynamicTableDefService } from '@flowda-projects/flowda-services'\nimport { DynamicTableDefServiceSymbol } from '@flowda-projects/flowda-shared-types'\n\n@injectable()\nexport class SchemaRouter {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(SchemaServiceSymbol) private schemaService: SchemaService,\n    @inject(DynamicTableDefServiceSymbol) private dynamicTableDef: DynamicTableDefService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(SchemaRouter.name)\n  }\n\n  schemaRouter = this.trpc.router({\n    getSchema: this.trpc.procedure.input(z.object({})).query(async ({ input }) => {\n      // todo: 验证 & 权限控制放在哪里？\n      // 之前 nestjs 可以放在 guard 上，但是用了 trpc 就不适合了，估计要放在 inversify，但是要能传递 context(inner)\n      const zodSchema = this.schemaService.getSchema()\n      // const dynamicSchema = await this.dynamicTableDef.getSchema()\n      // const ret = Object.assign({}, zodSchema, dynamicSchema)\n      // return ret\n      return zodSchema\n    }),\n\n    getSchemaCache: this.trpc.procedure.input(z.object({})).query(async ({ input }) => {\n      const ret = await this.schemaService.getSchemaCache()\n      return ret\n    }),\n  })\n}\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from '../trpc.service'\nimport { type LoggerService } from '@nestjs/common'\nimport {\n  amountUpdateSchema,\n  customerPreSignupSchema,\n  customerSignupSchema,\n  generateRecoveryCodeSchema,\n  resetPasswordWithRecoveryCodeSchema,\n} from '@flowda-projects/flowda-shared-types'\nimport { UserService } from '@flowda-projects/flowda-services'\nimport { z } from 'zod'\n\n@injectable()\nexport class CustomerAuthV4Router {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(UserService) private userService: UserService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(CustomerAuthV4Router.name)\n  }\n\n  router = this.trpc.router({\n    preSignup: this.trpc.tenantProtectedProcedure.input(customerPreSignupSchema).mutation(async ({ input, ctx }) => {\n      return this.userService.preSignup(Object.assign({ tid: ctx.tenant.id }, input))\n    }),\n    verifyAndSignup: this.trpc.tenantProtectedProcedure.input(customerSignupSchema).mutation(async ({ input, ctx }) => {\n      return this.userService.verifyAndSignup(Object.assign({ tid: ctx.tenant.id }, input), ctx)\n    }),\n    validateUserReturnTokens: this.trpc.tenantProtectedProcedure\n      .input(\n        z.object({\n          email: z.string(),\n          password: z.string(),\n        }),\n      )\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.validateByEmail({\n          tenantId: ctx.tenant.id,\n          email: input.email,\n          password: input.password,\n        })\n      }),\n    wxValidateUser: this.trpc.tenantProtectedProcedure\n      .input(\n        z.object({\n          code: z.string(),\n        }),\n      )\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.wxValidateUser(\n          {\n            tid: ctx.tenant.id,\n            code: input.code,\n          },\n          ctx,\n        )\n      }),\n    refreshToken: this.trpc.tenantProtectedProcedure\n      .input(\n        z.object({\n          rt: z.string(),\n        }),\n      )\n      .mutation(async ({ input }) => {\n        return this.userService.refreshToken(input)\n      }),\n    getUser: this.trpc.userProtectedProcedure.input(z.object({})).query(async ({ input, ctx }) => {\n      return ctx.user\n    }),\n    logoutApi: this.trpc.userProtectedProcedure.input(z.object({})).mutation(async ({ input, ctx }) => {\n      return this.userService.logout({\n        uid: ctx.user.id,\n        tid: ctx.user.tenantId,\n      })\n    }),\n    generateRecoveryCode: this.trpc.tenantProtectedProcedure\n      .input(generateRecoveryCodeSchema)\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.generateRecoveryCode({\n          ...{\n            tid: ctx.tenant.id,\n          },\n          ...input,\n        })\n      }),\n    resetPassword: this.trpc.tenantProtectedProcedure\n      .input(resetPasswordWithRecoveryCodeSchema)\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.resetPasswordWithRecoveryCode({\n          ...{\n            tid: ctx.tenant.id,\n          },\n          ...input,\n        })\n      }),\n    fwhLogin: this.trpc.tenantProtectedProcedure\n      .input(\n        z.object({\n          code: z.string(),\n        }),\n      )\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.fwhLogin({\n          tid: ctx.tenant.id,\n          code: input.code,\n        })\n      }),\n    amountUpdate: this.trpc.userProtectedProcedure.input(amountUpdateSchema).mutation(async ({ input, ctx }) => {\n      return this.userService.amountUpdate({\n        ...{\n          uid: ctx.user.id,\n          tid: ctx.user.tenantId,\n        },\n        ...input,\n      })\n    }),\n  })\n}\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from '../trpc.service'\nimport { type LoggerService } from '@nestjs/common'\nimport { createOrderSchema, createQuickOrderSchema, OrderV4Service } from '@flowda-projects/flowda-services'\nimport { z } from 'zod'\n\n@injectable()\nexport class OrderV4Router {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(OrderV4Service) private orderV4: OrderV4Service,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(OrderV4Router.name)\n  }\n\n  router = this.trpc.router({\n    query: this.trpc.userProtectedProcedure\n      .input(\n        z.object({\n          orderId: z.number(),\n        }),\n      )\n      .query(async ({ input }) => {\n        return this.orderV4.query(input.orderId)\n      }),\n    queryPay: this.trpc.userProtectedProcedure\n      .input(\n        z.object({\n          orderId: z.number(),\n        }),\n      )\n      .mutation(async ({ input, ctx }) => {\n        return this.orderV4.queryPay(ctx.user.tenantId, ctx.user.id, input.orderId)\n      }),\n    createNative: this.trpc.userProtectedProcedure.input(createOrderSchema).mutation(async ({ input, ctx }) => {\n      return this.orderV4.createNative({\n        ...{\n          tid: ctx.user.tenantId,\n          uid: ctx.user.id,\n        },\n        ...input,\n      })\n    }),\n    createJSAPI: this.trpc.userProtectedProcedure.input(createOrderSchema).mutation(async ({ input, ctx }) => {\n      return this.orderV4.createJSAPI({\n        ...{\n          tid: ctx.user.tenantId,\n          uid: ctx.user.id,\n        },\n        ...input,\n      })\n    }),\n    createQuick: this.trpc.tenantProtectedProcedure.input(createQuickOrderSchema).mutation(async ({ input, ctx }) => {\n      return this.orderV4.createQuick({\n        ...{\n          tid: ctx.tenant.id,\n        },\n        ...input,\n      })\n    }),\n    queryPayQuick: this.trpc.tenantProtectedProcedure\n      .input(\n        z.object({\n          orderId: z.number(),\n          anonymousCustomerToken: z.string(),\n        }),\n      )\n      .mutation(async ({ input, ctx }) => {\n        return this.orderV4.queryPayQuick(ctx.tenant.id, input.anonymousCustomerToken, input.orderId)\n      }),\n  })\n}\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from '../trpc.service'\nimport { type LoggerService } from '@nestjs/common'\nimport { PrismaClientSymbol, productCreateManyItemSchema } from '@flowda-projects/flowda-shared-types'\nimport { ProductV4Service } from '@flowda-projects/flowda-services'\nimport { z } from 'zod'\nimport * as db from '@prisma/client-flowda'\n\n@injectable()\nexport class ProductV4Router {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(ProductV4Service) private productV4: ProductV4Service,\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(ProductV4Router.name)\n  }\n\n  router = this.trpc.router({\n    createManyProducts: this.trpc.tenantProtectedProcedure\n      .input(z.array(productCreateManyItemSchema))\n      .mutation(async ({ input, ctx }) => {\n        return this.productV4.createManyProducts(ctx.tenant.id, input)\n      }),\n\n    findAll: this.trpc.tenantProtectedProcedure.input(z.object({})).query(async ({ input, ctx }) => {\n      return this.prisma.product.findMany({\n        where: {\n          tenantId: ctx.tenant.id,\n        },\n      })\n    }),\n  })\n}\n","/// <reference types=\"@types/express-serve-static-core\" />\n\nimport * as trpcExpress from '@trpc/server/adapters/express'\nimport { inject, injectable } from 'inversify'\nimport { LoggerService } from '@nestjs/common'\nimport {\n  ctxTenantSchema,\n  ctxTenantSchemaDto,\n  ctxUserSchema,\n  ctxUserSchemaDto,\n  UserService,\n} from '@flowda-projects/flowda-services'\nimport { createContext } from '@flowda-projects/flowda-shared-node'\n\n@injectable()\nexport class ContextFactory {\n  private readonly logger\n\n  constructor(\n    @inject(UserService) private userService: UserService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(ContextFactory.name)\n  }\n\n  createContext = async (opts: trpcExpress.CreateExpressContextOptions) => {\n    let tenant: ctxTenantSchemaDto | undefined\n    let user: ctxUserSchemaDto | undefined\n\n    const ctx = createContext(opts)\n    const tenantAt =\n      typeof opts.req.headers['tenant-authorization'] === 'string'\n        ? opts.req.headers['tenant-authorization'].split(' ')[1]\n        : null\n    if (tenantAt) {\n      const { tid } = this.userService.verifyTenantAccessToken(tenantAt)\n      const tenantRet = await this.userService.getTenantInfo(tid)\n      tenant = ctxTenantSchema.parse(tenantRet)\n    }\n\n    const at =\n      typeof ctx.req.headers['authorization'] === 'string' ? ctx.req.headers['authorization'].split(' ')[1] : null\n    if (at) {\n      const { uid } = this.userService.verifyAccessToken(at)\n      const userRet = await this.userService.getUserInfo(uid, ctx)\n      user = ctxUserSchema.parse(userRet)\n    }\n\n    return {\n      ...ctx,\n      ...{ user, tenant },\n    }\n  }\n}\n\nexport type Context = Awaited<ReturnType<typeof ContextFactory.prototype.createContext>>\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from './trpc.service'\nimport type { INestApplication, LoggerService } from '@nestjs/common'\nimport * as trpcExpress from '@trpc/server/adapters/express'\nimport { SchemaRouter } from './schema.router'\nimport { UserRouter } from './user.router'\nimport { ContextFactory } from './trpc.context'\nimport { DataRouter } from './data.router'\nimport { CustomerAuthV4Router } from './sdk-v4/customer-auth-v4.router'\nimport { ProductV4Router } from './sdk-v4/product-v4.router'\nimport { OrderV4Router } from './sdk-v4/order-v4.router'\n\n// import { createOpenApiExpressMiddleware } from 'trpc-openapi'\n\n@injectable()\nexport class TrpcRouter {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(SchemaRouter) private schemaRouter: SchemaRouter,\n    @inject(UserRouter) private userRouter: UserRouter,\n    @inject(DataRouter) private dataRouter: DataRouter,\n    @inject(CustomerAuthV4Router) private customerAuthV4Router: CustomerAuthV4Router,\n    @inject(ProductV4Router) private productV4Router: ProductV4Router,\n    @inject(OrderV4Router) private orderV4Router: OrderV4Router,\n    @inject(ContextFactory) private contextFactory: ContextFactory,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(TrpcRouter.name)\n  }\n\n  appRouter = this.trpc.router({\n    schema: this.schemaRouter.schemaRouter,\n    user: this.userRouter.userRouter,\n    data: this.dataRouter.router,\n\n    customerAuthV4: this.customerAuthV4Router.router,\n    productV4: this.productV4Router.router,\n    orderV4: this.orderV4Router.router,\n  })\n\n  applyMiddleware(app: INestApplication, globalPrefix: string) {\n    this.logger.log(`applyMiddleware ${globalPrefix}/trpc`)\n    // app.use(`/${globalPrefix}/trpc-api`, createOpenApiExpressMiddleware({ router: this.appRouter }))\n    app.use(\n      `/${globalPrefix}/trpc`,\n      trpcExpress.createExpressMiddleware({\n        router: this.appRouter,\n        createContext: this.contextFactory.createContext,\n      }),\n    )\n  }\n}\n\nexport type AppRouter = TrpcRouter[`appRouter`]\n","import { initTRPC, TRPCError } from '@trpc/server'\nimport { inject, injectable } from 'inversify'\n\nimport { LoggerService } from '@nestjs/common'\nimport { errorFormatter, transformer } from '@flowda-projects/flowda-shared-node'\nimport { PrismaClientSymbol, UserService } from '@flowda-projects/flowda-services'\nimport * as db from '@prisma/client-flowda'\nimport { Context } from './trpc.context'\n\n// import { OpenApiMeta } from 'trpc-openapi'\n\n@injectable()\nexport class TrpcService {\n  private readonly logger\n\n  constructor(\n    @inject(UserService) private userService: UserService,\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(TrpcService.name)\n  }\n\n  trpc = initTRPC\n    .context<Context>()\n    // .meta<OpenApiMeta>()\n    .create({\n      transformer: transformer,\n      errorFormatter: opts =>\n        errorFormatter(opts, {\n          log: async input => {\n            try {\n              await this.prisma.requestErrorLog.create({\n                data: {\n                  requestId: input.requestId,\n                  tenantId: input.tenantId,\n                  userId: input.userId,\n                  log: input.log,\n                },\n              })\n            } catch (e: any) {\n              console.warn(`requestErrorLog.create error`, e.message)\n            }\n          },\n        }),\n    })\n\n  procedure = this.trpc.procedure\n\n  tenantProtectedProcedure = this.trpc.procedure.use(async opts => {\n    const ctx = opts.ctx\n    if (!ctx.tenant) {\n      throw new TRPCError({ code: 'UNAUTHORIZED' })\n    }\n    return opts.next({\n      ctx: {\n        ...ctx,\n        tenant: ctx.tenant,\n      },\n    })\n  })\n\n  userProtectedProcedure = this.trpc.procedure.use(async opts => {\n    const ctx = opts.ctx\n    if (!ctx.user) {\n      throw new TRPCError({ code: 'UNAUTHORIZED' })\n    }\n    return opts.next({\n      ctx: {\n        ...ctx,\n        user: ctx.user,\n      },\n    })\n  })\n\n  router = this.trpc.router\n  mergeRouters = this.trpc.mergeRouters\n}\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from './trpc.service'\nimport { ConflictException, type LoggerService } from '@nestjs/common'\nimport { z } from 'zod'\nimport {\n  _resetTenantPasswordSchema,\n  accountExistsSchema,\n  amountUpdateSchema,\n  appCreateV4Schema,\n  createQuickOrderSchema,\n  customerPreSignupSchema,\n  customerSignupSchema,\n  EPlan,\n  findByUnionIdAndTenantIdSchema,\n  fwhLoginSchema,\n  generateRecoveryCodeSchema,\n  getTenantByNameSchema,\n  PrismaClientSymbol,\n  refreshTokenSchema,\n  registerByUnionIdSchema,\n  resetPasswordWithRecoveryCodeSchema,\n  sendSmsVerifyCodeSchema,\n  tenantJwtPayloadSchema,\n  updateFreeProfileSchema,\n  updatePaidProfileSchema,\n  userJwtPayloadSchema,\n  validateByEmailSchema,\n  validateSchema,\n  validateTenantSchema,\n  verifyMobileSchema,\n  wxValidateUserSchema,\n} from '@flowda-projects/flowda-shared-types'\nimport * as db from '@prisma/client-flowda'\nimport * as _ from 'radash'\nimport { userSelect, UserService } from '@flowda-projects/flowda-services'\nimport dayjs from 'dayjs'\n\n@injectable()\nexport class UserRouter {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(UserService) private userService: UserService,\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(UserRouter.name)\n  }\n\n  userRouter = this.trpc.router({\n    getTenant: this.trpc.procedure.input(z.object({ tid: z.number() })).query(async ({ input }) => {\n      return this.userService.getTenantInfo(input.tid)\n    }),\n\n    sendSmsVerifyCode: this.trpc.procedure.input(sendSmsVerifyCodeSchema).mutation(async opts => {\n      return this.userService.sendSmsVerifyCode(opts.input, opts.ctx)\n    }),\n\n    verifyMobile: this.trpc.procedure.input(verifyMobileSchema).mutation(async ({ input, ctx }) => {\n      return this.userService.verifyMobile(input, ctx)\n    }),\n\n    accountExists: this.trpc.procedure.input(accountExistsSchema).query(async ({ input }) => {\n      return this.userService.accountExists(input)\n    }),\n\n    findByUnionIdAndTenantId: this.trpc.procedure.input(findByUnionIdAndTenantIdSchema).query(async ({ input }) => {\n      return this.userService.findByUnionIdAndTenantId(input)\n    }),\n\n    findByNameAndTenantId: this.trpc.procedure\n      .input(\n        z.object({\n          username: z.string(),\n          tid: z.number(),\n        }),\n      )\n      .query(async ({ input }) => {\n        const ret = await this.prisma.user.findFirst({\n          where: {\n            username: input.username,\n            tenantId: input.tid,\n          },\n        })\n        return ret\n      }),\n\n    findOrThrowByNameAndTenantId: this.trpc.procedure\n      .input(\n        z.object({\n          username: z.string(),\n          tid: z.number(),\n        }),\n      )\n      .query(async ({ input }) => {\n        const ret = await this.prisma.user.findFirstOrThrow({\n          where: {\n            username: input.username,\n            tenantId: input.tid,\n          },\n        })\n        return ret\n      }),\n\n    registerByUnionId: this.trpc.procedure.input(registerByUnionIdSchema).mutation(opts => {\n      return this.userService.registerByUnionId(opts.input, opts.ctx)\n    }),\n\n    getTenantByName: this.trpc.procedure.input(getTenantByNameSchema).query(async ({ input }) => {\n      return this.userService.getTenantByName(input)\n    }),\n\n    validateTenant: this.trpc.procedure.input(validateTenantSchema).mutation(async opts => {\n      return this.userService.validateTenant(opts.input, opts.ctx)\n    }),\n\n    refreshTenantToken: this.trpc.procedure\n      .input(\n        z.object({\n          rt: z.string(),\n        }),\n      )\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.refreshTenantToken(input.rt, ctx)\n      }),\n\n    validate: this.trpc.procedure.input(validateSchema).mutation(async ({ input }) => {\n      return this.userService.validate(input)\n    }),\n\n    validateByEmail: this.trpc.procedure.input(validateByEmailSchema).query(async ({ input, ctx }) => {\n      return this.userService.validateByEmail(input, ctx)\n    }),\n\n    findMany: this.trpc.procedure\n      .input(\n        z.object({\n          userIds: z.array(z.number()),\n        }),\n      )\n      .query(async ({ input }) => {\n        return this.prisma.user.findMany({\n          where: {\n            id: {\n              in: input.userIds,\n            },\n          },\n          select: userSelect,\n        })\n      }),\n\n    updateUserInfo: this.trpc.procedure\n      .input(\n        z.object({\n          userId: z.number(),\n          email: z.string().optional(),\n          username: z.string().optional(),\n          image: z.string().optional(),\n        }),\n      )\n      .mutation(async ({ input }) => {\n        const { username, email, image } = input\n        return this.prisma.user.update({\n          where: {\n            id: input.userId,\n          },\n          data: {\n            ...(username && { username }),\n            ...(email && { email }),\n            ...(image && { image }),\n          },\n        })\n      }),\n\n    findUnique: this.trpc.procedure\n      .input(\n        z.object({\n          email: z.string().optional(),\n          id: z.number().optional(),\n        }),\n      )\n      .query(async ({ input }) => {\n        const userRet = await this.prisma.user.findUniqueOrThrow({\n          where: input,\n          select: userSelect,\n        })\n        return _.omit(userRet, ['hashedRefreshToken', 'hashedPassword'])\n      }),\n\n    verifyAccessToken: this.trpc.procedure\n      .input(\n        z.object({\n          jwt: z.string(),\n        }),\n      )\n      .query(async ({ input }) => {\n        return this.userService.verifyAccessToken(input.jwt)\n      }),\n\n    createTenant: this.trpc.procedure.input(appCreateV4Schema).mutation(async ({ input, ctx }) => {\n      return this.userService.createTenant(input, ctx)\n    }),\n\n    preSignup: this.trpc.procedure\n      .input(customerPreSignupSchema.merge(tenantJwtPayloadSchema))\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.preSignup(input, ctx)\n      }),\n\n    verifyAndSignup: this.trpc.procedure\n      .input(customerSignupSchema.merge(tenantJwtPayloadSchema))\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.verifyAndSignup(input, ctx)\n      }),\n\n    wxValidateUser: this.trpc.procedure\n      .input(wxValidateUserSchema.merge(tenantJwtPayloadSchema))\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.wxValidateUser(input, ctx)\n      }),\n\n    refreshToken: this.trpc.procedure.input(refreshTokenSchema).mutation(async ({ input, ctx }) => {\n      return this.userService.refreshToken(input, ctx)\n    }),\n\n    logout: this.trpc.procedure.input(userJwtPayloadSchema).mutation(async ({ input }) => {\n      return this.prisma.user.update({\n        where: {\n          id: input.uid,\n        },\n        data: {\n          hashedRefreshToken: null,\n        },\n      })\n    }),\n\n    generateRecoveryCode: this.trpc.procedure\n      .input(generateRecoveryCodeSchema.merge(tenantJwtPayloadSchema))\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.generateRecoveryCode(input, ctx)\n      }),\n\n    resetPasswordWithRecoveryCode: this.trpc.procedure\n      .input(resetPasswordWithRecoveryCodeSchema.merge(tenantJwtPayloadSchema))\n      .mutation(async ({ input, ctx }) => {\n        return this.userService.resetPasswordWithRecoveryCode(input, ctx)\n      }),\n\n    updatePaidProfile: this.trpc.procedure\n      .input(updatePaidProfileSchema.merge(userJwtPayloadSchema))\n      .mutation(async ({ input }) => {\n        return this.prisma.user.update({\n          where: {\n            id: input.uid,\n          },\n          select: userSelect,\n          data: {\n            orderProfile: {\n              upsert: {\n                update: {\n                  productType: input.product.productType,\n                  plan: input.product.plan,\n                  amount: {\n                    increment: input.product.amount || 0,\n                  },\n                },\n                create: {\n                  tenantId: input.tid,\n                  productType: input.product.productType,\n                  plan: input.product.plan,\n                  amount: input.product.amount,\n                  expireAt:\n                    input.product.validityPeriod != null\n                      ? dayjs().add(input.product.validityPeriod, 'day').toDate()\n                      : null,\n                },\n              },\n            },\n          },\n        })\n      }),\n\n    updateFreeProfile: this.trpc.procedure\n      .input(updateFreeProfileSchema.merge(userJwtPayloadSchema))\n      .mutation(async ({ input }) => {\n        // 订阅免费计划，不应该将已有计划清空（如果有的话）\n        const orderProfileRet = await this.prisma.orderProfile.findUnique({\n          where: {\n            userId: input.uid,\n          },\n        })\n        if (orderProfileRet && orderProfileRet.plan === EPlan.VIP) {\n          throw new ConflictException(`User has a paid plan`, {\n            description: `profileId:${orderProfileRet.id}`,\n          })\n        }\n\n        return this.prisma.user.update({\n          where: {\n            id: input.uid,\n          },\n          select: userSelect,\n          data: {\n            orderProfile: {\n              upsert: {\n                update: {\n                  productType: input.product.productType,\n                  plan: input.product.plan,\n                  amount: {\n                    increment: input.product.amount || 0,\n                  },\n                },\n                create: {\n                  tenantId: input.tid,\n                  productType: input.product.productType,\n                  plan: input.product.plan,\n                  amount: input.product.amount,\n                  expireAt:\n                    input.product.validityPeriod != null\n                      ? dayjs().add(input.product.validityPeriod, 'day').toDate()\n                      : null,\n                },\n              },\n            },\n          },\n        })\n      }),\n\n    fwhLogin: this.trpc.procedure.input(fwhLoginSchema.merge(tenantJwtPayloadSchema)).mutation(async ({ input }) => {\n      return this.userService.fwhLogin(input)\n    }),\n\n    amountUpdate: this.trpc.procedure\n      .input(amountUpdateSchema.merge(userJwtPayloadSchema))\n      .mutation(async ({ input }) => {\n        return this.userService.amountUpdate(input)\n      }),\n\n    createQuick: this.trpc.procedure\n      .input(createQuickOrderSchema.merge(tenantJwtPayloadSchema))\n      .mutation(async ({ input }) => {\n        return this.userService.createQuick(input)\n      }),\n\n    updateAnonymousToPayOpenId: this.trpc.procedure\n      .input(\n        z.object({\n          tid: z.number(),\n          id: z.number(),\n          openid: z.string(),\n        }),\n      )\n      .mutation(async ({ input }) => {\n        return this.prisma.user.update({\n          select: userSelect,\n          where: {\n            id: input.id,\n          },\n          data: {\n            username: input.openid,\n            weixinProfile: {\n              connectOrCreate: {\n                where: {\n                  loginOpenid: input.openid,\n                },\n                create: {\n                  unionOrOpenid: input.openid,\n                  loginOpenid: input.openid,\n                },\n              },\n            },\n          },\n        })\n      }),\n    _resetTenantPassword: this.trpc.procedure.input(_resetTenantPasswordSchema).mutation(async ({ input }) => {\n      return this.userService._resetTenantPassword(input)\n    }),\n  })\n}\n","import axios from 'axios'\nimport { debug } from '@flowda-projects/flowda-shared'\n\nexport const axiosApiInstance = axios.create()\n\naxiosApiInstance.interceptors.request.use(\n  async config => {\n    console.log(\n      ...[\n        ...debug(`http-client`),\n        config.method,\n        config.url,\n        config.data != null ? 'body' : '',\n        config.data != null ? config.data : '',\n      ],\n    )\n    return config\n  },\n  error => {\n    Promise.reject(error)\n  },\n)\n","import { ContainerModule, interfaces } from 'inversify'\nimport {\n  APISymbol,\n  bindService,\n  bindServiceSymbol,\n  CustomZodSchemaSymbol,\n  PrismaZodSchemaSymbol,\n  ServiceSymbol,\n  WechatOAuthSymbol,\n} from '@flowda-projects/flowda-shared'\nimport { zt } from '@flowda-projects/prisma-flowda'\nimport * as schema from './lib/schema'\nimport { TaskService } from './services/task.service'\nimport { UserService } from './services/user.service'\nimport type { AxiosInstance } from 'axios'\nimport { axiosApiInstance } from './axios'\nimport { DynamicTableDefService } from './services/dynamic-table-def.service'\nimport { DynamicTableDataService } from './services/dynamic-table-data.service'\nimport {\n  DynamicTableDataServiceSymbol,\n  DynamicTableDefServiceSymbol,\n  MenuServiceSymbol,\n  WechatpayNodeV3Symbol,\n} from '@flowda-projects/flowda-shared-types'\nimport { MenuService } from './services/menu.service'\nimport WechatOAuth from 'wechat-oauth'\nimport { FLOWDA_ENV } from './lib/flowda-env'\nimport { WeixinLoginService } from './services/weixin-login.service'\nimport { WeixinFuwuhaoLoginService } from './services/weixin-fuwuhao-login.service'\nimport WechatpayNodeV3 from 'wechatpay-node-v3'\nimport { OrderV4Service } from './services/sdk/orderV4.service'\nimport { ProductV4Service } from './services/sdk/productV4.service'\nimport { WeixinPayService } from './services/weixin-pay.service'\n\nexport const flowdaServiceModule = new ContainerModule((bind: interfaces.Bind) => {\n  bind(PrismaZodSchemaSymbol).toConstantValue(zt)\n  bind(CustomZodSchemaSymbol).toConstantValue(schema)\n  bind<AxiosInstance>(APISymbol).toConstantValue(axiosApiInstance)\n\n  bind<WechatOAuth>(WechatOAuthSymbol).toConstantValue(\n    new WechatOAuth(FLOWDA_ENV.freecharger_pc_appid, FLOWDA_ENV.freecharger_pc_appSecret),\n  )\n  bind<WechatpayNodeV3>(WechatpayNodeV3Symbol).toConstantValue(\n    new WechatpayNodeV3({\n      appid: FLOWDA_ENV.appid,\n      mchid: FLOWDA_ENV.mchid,\n      publicKey: Buffer.from(FLOWDA_ENV['apiclient_cert.pem'], 'utf-8'),\n      privateKey: Buffer.from(FLOWDA_ENV['apiclient_key.pem'], 'utf-8'),\n    }),\n  )\n\n  bindService(bind, ServiceSymbol, TaskService)\n  bindService(bind, ServiceSymbol, UserService)\n  bindServiceSymbol(bind, ServiceSymbol, DynamicTableDefServiceSymbol, DynamicTableDefService)\n  bindServiceSymbol(bind, ServiceSymbol, DynamicTableDataServiceSymbol, DynamicTableDataService)\n  bindServiceSymbol(bind, ServiceSymbol, MenuServiceSymbol, MenuService)\n\n  bind(WeixinLoginService).toSelf().inSingletonScope()\n  bind(WeixinFuwuhaoLoginService).toSelf().inSingletonScope()\n  bind(WeixinPayService).toSelf().inSingletonScope()\n  bind(OrderV4Service).toSelf().inSingletonScope()\n  bind(ProductV4Service).toSelf().inSingletonScope()\n})\n","import { extendZodWithOpenApi } from '@anatine/zod-openapi'\nimport { z } from 'zod'\n\nextendZodWithOpenApi(z)\nexport * from './flowdaServiceModule'\n\nexport * from './lib/schema'\nexport * from './lib/flowda-env'\n\nexport * from './services/task.service'\nexport * from './services/user.service'\nexport * from './services/dynamic-table-def.service'\nexport * from './services/dynamic-table-data.service'\nexport * from './services/menu.service'\nexport * from './services/weixin-login.service'\nexport * from './services/weixin-fuwuhao-login.service'\nexport * from './services/weixin-pay.service'\nexport * from './services/sdk/orderV4.service'\nexport * from './services/sdk/productV4.service'\n\nexport * from '@flowda-projects/flowda-shared-types'\n","import { parseEnv } from 'znv'\nimport { z } from 'zod'\n\nexport const FLOWDA_ENV = parseEnv(process.env, {\n  TEST_ENV: z.string().optional(),\n  DATABASE_URL: z.string().min(1),\n\n  // 租户\n  TENANT_REFRESH_TOKEN_SECRET: z.string().min(1),\n  TENANT_REFRESH_TOKEN_EXPIRE: z.number().default(7 * 24 * 60 * 60), // 1 week\n  TENANT_ACCESS_TOKEN_SECRET: z.string().min(1),\n  TENANT_ACCESS_TOKEN_EXPIRE: z.number().default(24 * 60 * 60),\n\n  // 用户\n  REFRESH_TOKEN_SECRET: z.string().min(1),\n  REFRESH_TOKEN_EXPIRE: z.number().default(7 * 24 * 60 * 60), // 1 week\n  ACCESS_TOKEN_SECRET: z.string().min(1),\n  ACCESS_TOKEN_EXPIRE: z.number().default(24 * 60 * 60),\n\n  C7_REST_URL: z.string().min(1),\n\n  // 短信\n  SMS_SECRET_ID: z.string().min(1),\n  SMS_SECRET_KEY: z.string().min(1),\n\n  // 微信\n  freecharger_pc_appid: z.string().min(1),\n  freecharger_pc_appSecret: z.string().min(1),\n\n  // 微信服务号\n  freecharger_fuwuhao_appid: z.string().min(1),\n  freecharger_fuwuhao_secret: z.string().min(1),\n\n  // 微信支付\n  appid: z.string().min(1),\n  mchid: z.string().min(1),\n  'apiclient_cert.pem': z.string().min(1),\n  'apiclient_key.pem': z.string().min(1),\n})\n","import {\n  DynamicTableDataWithRelationsSchema,\n  DynamicTableDefColumnWithRelationsSchema,\n  DynamicTableDefWithRelationsSchema,\n  MenuWithRelationsSchema,\n  TaskFormRelationSchema,\n  TenantWithRelationsSchema,\n  UserSchema,\n} from '@flowda-projects/prisma-flowda'\nimport { meta } from '@flowda-projects/flowda-shared'\nimport { z } from 'zod'\n\nexport const UserResourceSchema = UserSchema.omit({\n  hashedPassword: true,\n  hashedRefreshToken: true,\n})\n  .extend({\n    // todo: 暂时先 optional, 否则 编辑 不填 password 无法通过\n    // 这个 extend password 是为了配合 createRequestUrl\n    password: z.string().optional().openapi({\n      title: '密码',\n      prisma: false,\n    }),\n    __meta: meta({\n      extends: 'UserSchema',\n    }),\n  })\n  .openapi({\n    custom: {\n      route_prefix: '/tenant_admin/tenant',\n    },\n  })\n\nexport const TenantResourceSchema = TenantWithRelationsSchema.extend({\n  __meta: meta({\n    extends: 'TenantSchema',\n  }),\n}).openapi({\n  custom: {\n    route_prefix: '/tenant_admin/tenant',\n  },\n})\n\nexport const MenuResourceSchema = MenuWithRelationsSchema.extend({\n  __meta: meta({\n    extends: 'MenuSchema',\n  }),\n}).openapi({\n  custom: {\n    route_prefix: '/tenant_admin/tenant',\n  },\n})\n\nexport const TaskFormRelationResourceSchema = TaskFormRelationSchema.extend({\n  __meta: meta({\n    extends: 'TaskFormRelationSchema',\n  }),\n}).openapi({\n  custom: {\n    route_prefix: '/workflows/manage',\n  },\n})\n\n// prisma:false camunda API\nexport const TaskResourceSchema = z\n  .object({\n    id: z.string().cuid().openapi({ title: '任务 Id' }),\n    name: z.string().openapi({ title: '任务标题' }),\n    assignee: z.string().openapi({ title: '处理人' }),\n    created: z.date().openapi({ title: '创建时间' }),\n    processDefinitionId: z.string().openapi({ title: '流程定义' }),\n    processInstanceId: z.string().openapi({ title: '流程实例' }),\n    taskDefinitionKey: z.string().openapi({ title: '任务定义' }),\n    variables: z.string().openapi({ title: '变量' }),\n  })\n  .extend({\n    __meta: meta({\n      prisma: false,\n    }),\n  })\n  .openapi({\n    primary_key: 'id',\n    display_name: '任务',\n    display_column: 'name',\n    display_primary_key: false,\n  })\n\nexport const ProcessDefinitionResourceSchema = z\n  .object({\n    id: z.string(),\n    key: z.string(),\n    name: z.string(),\n    version: z.number(),\n    resource: z.string(),\n    deploymentId: z.string().cuid(),\n    suspended: z.boolean(),\n    historyTimeToLive: z.number(),\n    startableInTasklist: z.boolean(),\n  })\n  .extend({\n    __meta: meta({\n      prisma: false,\n    }),\n  })\n  .openapi({\n    primary_key: 'id',\n    display_name: '已部署流程图',\n    display_column: 'name',\n    display_primary_key: 'true',\n  })\n\nexport const WorkflowUserResourceSchema = z\n  .object({\n    id: z.string(),\n    firstName: z.string(),\n    lastName: z.string(),\n    email: z.string(),\n  })\n  .extend({\n    __meta: meta({\n      prisma: false,\n    }),\n  })\n  .openapi({\n    primary_key: 'id',\n    display_name: '用户',\n    display_column: 'id',\n  })\n\nexport const DynamicTableDefResourceSchema = DynamicTableDefWithRelationsSchema.extend({\n  __meta: meta({\n    extends: 'DynamicTableDefSchema',\n  }),\n}).openapi({\n  custom: {\n    route_prefix: '/tenant_admin/dynamic_table',\n  },\n})\n\nexport const DynamicTableDefColumnResourceSchema = DynamicTableDefColumnWithRelationsSchema.extend({\n  __meta: meta({\n    extends: 'DynamicTableDefColumnSchema',\n  }),\n}).openapi({\n  custom: {\n    route_prefix: '/tenant_admin/dynamic_table',\n  },\n})\n\nexport const DynamicTableDataResourceSchema = DynamicTableDataWithRelationsSchema.extend({\n  __meta: meta({\n    extends: 'DynamicTableDataSchema',\n  }),\n}).openapi({\n  custom: {\n    route_prefix: '/tenant_admin/dynamic_table',\n  },\n})\n","import { inject, injectable } from 'inversify'\nimport { LoggerService } from '@nestjs/common'\nimport * as db from '@prisma/client-flowda'\nimport { matchPath, PrismaClientSymbol } from '@flowda-projects/flowda-shared'\n\n@injectable()\nexport class DynamicTableDataService {\n  private readonly logger: LoggerService\n\n  constructor(\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(DynamicTableDataService.name)\n  }\n\n  async get(reqUser: any, path: string, query: any) {\n    this.logger.debug!(\n      `get: ${path}, query: ${JSON.stringify(query, null, 2)}, reqUser: ${JSON.stringify(reqUser, null, 2)}`,\n    )\n    const parsedPath = matchPath(path)\n    if (parsedPath.length === 0) return Promise.resolve({})\n    const { resource, id, resourceSchema } = parsedPath[parsedPath.length - 1]\n    if (id == null) {\n      const where: db.Prisma.DynamicTableDataWhereInput = {\n        isDeleted: false,\n        tenantId: reqUser.tid,\n        dynamicTableDef: {\n          name: resource,\n          tenantId: reqUser.tid,\n          isDeleted: false,\n        },\n      }\n      const dbRet = await this.prisma.$transaction([\n        this.prisma.dynamicTableData.findMany({\n          where,\n        }),\n        this.prisma.dynamicTableData.count({\n          where: where,\n        }),\n      ])\n      const [data, count] = dbRet\n      const ret = data.map(item => {\n        return Object.assign(\n          {\n            id: item.id,\n          },\n          item.data,\n        )\n      })\n      return {\n        pagination: {\n          total: count,\n        },\n        data: ret,\n      }\n    } else {\n      const dbRet = await this.prisma.dynamicTableData.findUniqueOrThrow({\n        where: {\n          id: id as number,\n        },\n      })\n      return Object.assign(\n        {\n          id: dbRet.id,\n        },\n        dbRet.data,\n      )\n    }\n  }\n\n  async put(reqUser: any, path: string, values: any) {\n    this.logger.debug!(\n      `put: ${path}, values: ${JSON.stringify(values, null, 2)}, reqUser: ${JSON.stringify(reqUser, null, 2)}`,\n    )\n    const parsedPath = matchPath(path)\n    if (parsedPath.length === 0) return Promise.resolve({})\n    const { id } = parsedPath[parsedPath.length - 1]\n\n    const prevRet = await this.prisma.dynamicTableData.findUniqueOrThrow({\n      where: {\n        id: id as number,\n      },\n      select: {\n        id: true,\n        tenantId: true,\n        data: true,\n      },\n    })\n    const data2 = Object.assign(prevRet.data as any, values)\n    const ret = await this.prisma.dynamicTableData.update({\n      where: {\n        id: id as number,\n      },\n      data: {\n        data: data2,\n      },\n    })\n    return Object.assign(\n      {\n        id: ret.id,\n      },\n      ret.data,\n    )\n  }\n\n  async post(reqUser: any, path: string, values: any) {\n    this.logger.debug!(\n      `post: ${path}, values: ${JSON.stringify(values, null, 2)}, reqUser: ${JSON.stringify(reqUser, null, 2)}`,\n    )\n    const parsedPath = matchPath(path)\n    if (parsedPath.length === 0) return Promise.resolve({})\n    const { resource, id, resourceSchema } = parsedPath[parsedPath.length - 1]\n    const def = await this.prisma.dynamicTableDef.findFirst({\n      where: {\n        name: resource,\n        tenantId: reqUser.tid,\n      },\n    })\n    if (def == null) {\n      throw new Error(`cannot find table def of path: ${path}`)\n    }\n    const ret = await this.prisma.dynamicTableData.create({\n      data: {\n        dynamicTableDefId: def.id,\n        data: values,\n      },\n    })\n    return Object.assign(\n      {\n        id: ret.id,\n      },\n      ret.data,\n    )\n  }\n\n  async remove(reqUser: any, path: string) {\n    this.logger.debug!(`remove: ${path}, reqUser: ${JSON.stringify(reqUser, null, 2)}`)\n    const parsedPath = matchPath(path)\n    if (parsedPath.length === 0) return Promise.resolve({})\n    const { id } = parsedPath[parsedPath.length - 1]\n    const ret = await this.prisma.dynamicTableData.update({\n      where: {\n        id: id as number,\n      },\n      data: {\n        isDeleted: true,\n      },\n    })\n    return ret\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { LoggerService } from '@nestjs/common'\nimport * as db from '@prisma/client-flowda'\nimport {\n  DynamicTableSchemaTransformer,\n  DynamicTableSchemaTransformerSymbol,\n  PrismaClientSymbol,\n} from '@flowda-projects/flowda-shared'\n\n@injectable()\nexport class DynamicTableDefService {\n  private readonly logger: LoggerService\n\n  constructor(\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject(DynamicTableSchemaTransformerSymbol) private transformer: DynamicTableSchemaTransformer,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(DynamicTableDefService.name)\n  }\n\n  async getRaw() {\n    return this.prisma.dynamicTableDef.findMany({\n      where: {\n        isDeleted: false,\n      },\n      select: {\n        name: true,\n        extendedSchema: true,\n        dynamicTableDefColumns: {\n          where: {\n            isDeleted: false,\n          },\n          select: {\n            name: true,\n            type: true,\n            extendedSchema: true,\n          },\n        },\n      },\n    })\n  }\n\n  async getSchema() {\n    const dbRet = await this.prisma.dynamicTableDef.findMany({\n      where: {\n        isDeleted: false,\n      },\n      select: {\n        name: true,\n        extendedSchema: true,\n        dynamicTableDefColumns: {\n          where: {\n            isDeleted: false,\n          },\n          select: {\n            name: true,\n            type: true,\n            extendedSchema: true,\n          },\n        },\n      },\n    })\n    const schema = dbRet.reduce((acc, cur) => {\n      const s = this.transformer.transform(cur)\n      acc[s.schema_name] = s\n      return acc\n    }, {} as any)\n    return schema\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { LoggerService } from '@nestjs/common'\nimport { PrismaClientSymbol } from '@flowda-projects/flowda-shared'\nimport * as db from '@prisma/client-flowda'\n\nconst tenantMenu = [\n  {\n    id: 'tenant_admin',\n    name: '租户管理',\n    slug: 'tenant_admin',\n    children: [\n      {\n        name: '租户和用户',\n        slug: 'tenant',\n        key: 'tenant',\n        children: [\n          { id: 'tenants', name: '租户列表', slug: 'tenants' },\n          { id: 'menus', name: '菜单', slug: 'menus' },\n        ],\n      },\n      {\n        name: '动态表',\n        slug: 'dynamic_table',\n        id: 'dynamic_table',\n        children: [{ id: 'dynamic_table_defs', name: '动态表定义列表', slug: 'dynamic_table_defs' }],\n      },\n    ],\n  },\n]\n\n@injectable()\nexport class MenuService {\n  private readonly logger: LoggerService\n\n  constructor(\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(MenuService.name)\n  }\n\n  async get(reqUser: any) {\n    if (reqUser.tid == null) {\n      throw new Error('No tenant id')\n    }\n    const tenantRet = await this.prisma.tenant.findUnique({\n      where: {\n        id: reqUser.tid,\n      },\n    })\n    if (tenantRet == null) {\n      throw new Error('No tenant')\n    }\n\n    const menuRet = await this.prisma.menu.findUnique({\n      where: {\n        tenantId: reqUser.tid,\n      },\n    })\n\n    if (tenantRet.name === 'superadmin') {\n      if (menuRet && Array.isArray(menuRet.treeData)) {\n        return menuRet.treeData.concat(tenantMenu)\n      } else {\n        return tenantMenu\n      }\n    } else {\n      return menuRet?.treeData || []\n    }\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { ConflictException, ForbiddenException, InternalServerErrorException, type LoggerService } from '@nestjs/common'\nimport * as db from '@prisma/client-flowda'\nimport {\n  type createOrderUserJwtPayloadSchemaDto,\n  type createQuickOrderTenantJWTPayloadSchemaDto,\n  EPlan,\n  PrismaClientSymbol,\n  Serial_Max,\n  Serial_Min,\n  type transactionsNativeSchemaDto,\n} from '@flowda-projects/flowda-shared-types'\nimport { WeixinPayService } from '../weixin-pay.service'\nimport { userSelect, UserService } from '../user.service'\nimport dayjs from 'dayjs'\nimport * as _ from 'radash'\n\nexport const orderSelect = db.Prisma.validator<db.Prisma.OrderSelect>()({\n  id: true,\n  serial: true,\n  status: true,\n  userId: true,\n  tenantId: true,\n  user: {\n    select: _.omit(userSelect, ['hashedPassword', 'hashedRefreshToken']),\n  },\n  productSnapshots: {\n    select: {\n      id: true,\n      snapshotPrice: true,\n      productId: true,\n    },\n  },\n})\n\n@injectable()\nexport class OrderV4Service {\n  private readonly logger: LoggerService\n\n  constructor(\n    @inject(WeixinPayService) private wxPayService: WeixinPayService,\n    @inject(UserService) private user: UserService,\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(OrderV4Service.name)\n  }\n\n  async query(orderId: number) {\n    const ret = await this.prisma.order.findMany({\n      where: { id: orderId },\n      select: orderSelect,\n    })\n\n    return ret\n  }\n\n  async queryPay(tid: number, userId: number, orderId: number) {\n    this.logger.log(`querying order, uid:${userId}, orderId:${orderId}`)\n    const userRet = await this.prisma.user.findUniqueOrThrow({\n      where: {\n        id: userId,\n      },\n    })\n    const orderRet = await this.prisma.order.findFirstOrThrow({\n      select: orderSelect,\n      where: { id: orderId },\n    })\n    if (orderRet.userId !== userId) {\n      throw new ForbiddenException('订单关联的买家ID和登录信息不一致')\n    }\n    this.logger.log(`order found ${orderRet.id}, query request to wx`)\n    const payQueryRet = await this.wxPayService.query(orderId)\n    this.logger.log(`order query response from wx ${payQueryRet?.trade_state}`)\n    if (payQueryRet.status !== 200 || payQueryRet.trade_state !== 'SUCCESS') {\n      throw new InternalServerErrorException('微信支付查询失败')\n    }\n    this.logger.log(`order query success`)\n\n    // todo: 后续重构成 productSnapshot 和 order 1-1，暂时先取第一个\n    const productId = orderRet.productSnapshots[0].productId\n    const productRet = await this.prisma.product.findUniqueOrThrow({\n      where: {\n        id: productId,\n      },\n    })\n\n    const [userRet2, payRet] = await this.prisma.$transaction([\n      // 更新用户 orderProfile\n      this.prisma.user.update({\n        where: {\n          id: userId,\n        },\n        select: userSelect,\n        data: {\n          orderProfile: {\n            upsert: {\n              update: {\n                productType: productRet.productType,\n                plan: productRet.plan,\n                amount: {\n                  increment: productRet.amount || 0,\n                },\n              },\n              create: {\n                tenantId: userRet.tenantId,\n                productType: productRet.productType,\n                plan: productRet.plan,\n                amount: productRet.amount,\n                expireAt:\n                  productRet.validityPeriod != null ? dayjs().add(productRet.validityPeriod, 'day').toDate() : null,\n              },\n            },\n          },\n        },\n      }),\n      // 创建支付关联订单\n      this.prisma.pay.upsert({\n        where: {\n          orderId: orderId,\n        },\n        create: {\n          tenantId: userRet.tenantId,\n          userId: userRet.id,\n          status: db.PayStatus.PAIED,\n          orderId: orderId,\n          transactionId: payQueryRet.transaction_id,\n        },\n        update: {\n          status: db.PayStatus.PAIED,\n          transactionId: payQueryRet.transaction_id,\n        },\n      }),\n    ])\n\n    return {\n      order: orderRet,\n      payQueryRet,\n    }\n  }\n\n  async createNative(dto: createOrderUserJwtPayloadSchemaDto) {\n    return this.createInner(dto, this.wxPayService.transactionsNative)\n  }\n\n  async createJSAPI(dto: createOrderUserJwtPayloadSchemaDto) {\n    return this.createInner(dto, this.wxPayService.transactionsJSAPI)\n  }\n\n  /*\n  直接用 callback 比 template method 简化不少代码也方便测试\n   */\n  async createInner(\n    dto: createOrderUserJwtPayloadSchemaDto,\n    transactionCallback: (input: transactionsNativeSchemaDto) => any,\n  ) {\n    this.logger.log(`creating order:tid:${dto.tid},uid:${dto.uid},productId:${dto.productId}`)\n\n    const productRet = await this.prisma.product.findUniqueOrThrow({\n      where: {\n        id: dto.productId,\n      },\n    })\n\n    if (productRet.restricted /*如果限购*/) {\n      const purchased = await this.prisma.order.count({\n        where: {\n          tenantId: dto.tid,\n          userId: dto.uid,\n          productSnapshots: {\n            some: {\n              productId: dto.productId,\n            },\n          },\n        },\n      })\n      if (purchased > 0) {\n        throw new ForbiddenException(`Product is restricted`, {\n          description: `order history length: ${purchased}`,\n        })\n      }\n    }\n\n    const lastRet = await this.prisma.order.findFirst({\n      orderBy: [\n        {\n          createdAt: 'desc',\n        },\n      ],\n    })\n    let serial\n    if (lastRet == null || lastRet.serial >= Serial_Max) {\n      serial = Serial_Min\n    } else {\n      serial = lastRet.serial + 1\n    }\n\n    if (productRet.price.toNumber() === 0 /*免费产品*/) {\n      const orderProfileRet = await this.prisma.orderProfile.findUnique({\n        where: {\n          userId: dto.uid,\n        },\n      })\n      if (orderProfileRet && orderProfileRet.plan === EPlan.VIP) {\n        throw new ConflictException(`User has a paid plan`, {\n          description: `profileId:${orderProfileRet.id}`,\n        })\n      }\n\n      const [orderRet, userRet] = await this.prisma.$transaction([\n        this.prisma.order.create({\n          data: {\n            tenantId: dto.tid,\n            userId: dto.uid,\n            status: db.OrderStatus.FREE_DEAL,\n            serial: serial,\n            productSnapshots: {\n              create: {\n                snapshotPrice: productRet.price,\n                productId: productRet.id,\n                userId: dto.uid,\n                tenantId: dto.tid,\n              },\n            },\n          },\n          select: orderSelect,\n        }),\n        this.prisma.user.update({\n          where: {\n            id: dto.uid,\n          },\n          select: userSelect,\n          data: {\n            orderProfile: {\n              upsert: {\n                update: {\n                  productType: productRet.productType,\n                  plan: productRet.plan,\n                  amount: {\n                    increment: productRet.amount || 0,\n                  },\n                },\n                create: {\n                  tenantId: dto.tid,\n                  productType: productRet.productType,\n                  plan: productRet.plan,\n                  amount: productRet.amount,\n                  expireAt:\n                    productRet.validityPeriod != null ? dayjs().add(productRet.validityPeriod, 'day').toDate() : null,\n                },\n              },\n            },\n          },\n        }),\n      ])\n      this.logger.log(`order created: ${orderRet.id}`)\n      return {\n        order: orderRet,\n        wxRet: null,\n      }\n    }\n\n    // 付费产品\n    // 1. 创建订单\n    const orderRet = await this.prisma.order.create({\n      data: {\n        tenantId: dto.tid,\n        userId: dto.uid,\n        status: db.OrderStatus.INITIALIZED,\n        serial: serial,\n        productSnapshots: {\n          create: {\n            snapshotPrice: productRet.price,\n            productId: productRet.id,\n            tenantId: dto.tid,\n            userId: dto.uid,\n          },\n        },\n      },\n      select: orderSelect,\n    })\n\n    try {\n      // 2. 尝试发起微信支付 失败不影响订单\n      // todo 添加失败重试\n      const wxRet = await transactionCallback({\n        openid: dto.openid,\n        orderId: String(orderRet.id),\n        desc: productRet.name,\n        total: productRet.price.toNumber(),\n      })\n      const orderRet2 = await this.prisma.order.update({\n        where: {\n          id: orderRet.id,\n        },\n        data: {\n          status: db.OrderStatus.PAY_ASSOCIATED,\n        },\n        select: orderSelect,\n      })\n      return {\n        order: orderRet2,\n        wxRet: wxRet,\n      }\n    } catch (e) {\n      this.logger.error(e)\n      return {\n        order: orderRet,\n        wxRet: {\n          success: false,\n        },\n      }\n    }\n  }\n\n  async createQuick(dto: createQuickOrderTenantJWTPayloadSchemaDto) {\n    const userRet = await this.user.createQuick(dto)\n    return this.createNative({\n      tid: userRet.tenantId,\n      uid: userRet.id,\n      productId: dto.productId,\n    })\n  }\n\n  async queryPayQuick(tid: number, anonymousCustomerToken: string, orderId: number) {\n    const userRet = await await this.prisma.user.findFirstOrThrow({\n      where: {\n        username: anonymousCustomerToken,\n        tenantId: tid,\n      },\n    })\n    this.logger.debug!(`start queryPay`)\n    const ret = await this.queryPay(tid, userRet.id, orderId)\n    this.logger.debug!(`succeed queryPay`)\n    const openid = ret.payQueryRet.payer.openid\n\n    const updateUserRet = await this.prisma.user.update({\n      select: userSelect,\n      where: {\n        id: userRet.id,\n      },\n      data: {\n        username: openid,\n        weixinProfile: {\n          connectOrCreate: {\n            where: {\n              unionOrOpenid: openid,\n            },\n            create: {\n              unionOrOpenid: openid,\n              loginOpenid: openid,\n            },\n          },\n        },\n      },\n    })\n    return {\n      ...ret,\n      ...{\n        user: updateUserRet,\n      },\n    }\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { LoggerService } from '@nestjs/common'\nimport * as db from '@prisma/client-flowda'\nimport { PrismaClientSymbol, SdkProductCreateManyItemDto } from '@flowda-projects/flowda-shared-types'\n\n@injectable()\nexport class ProductV4Service {\n  private readonly logger: LoggerService\n\n  constructor(\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(ProductV4Service.name)\n  }\n\n  async createManyProducts(tid: number, list: SdkProductCreateManyItemDto[]): Promise<db.Product[]> {\n    const data = list.map(item => ({\n      ...item,\n      tenantId: tid,\n      productType: item.productType as db.ProductType,\n      restricted: item.restricted || 0,\n      amount: item.amount,\n      // 以下是为了处理 prisma null\n      plan: item.plan === undefined ? null : item.plan,\n      extendedDescriptionData: item.extendedDescriptionData,\n      fileSize: item.fileSize === undefined ? null : item.fileSize,\n      storeDuration: item.storeDuration === undefined ? null : item.storeDuration,\n      hasAds: item.hasAds === undefined ? null : item.hasAds,\n      tecSupport: item.tecSupport === undefined ? null : item.tecSupport,\n      validityPeriod: null,\n    }))\n    await this.prisma.product.createMany({ data })\n    return this.prisma.product.findMany({\n      where: {\n        tenantId: tid,\n      },\n    })\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { APISymbol, PrismaClientSymbol } from '@flowda-projects/flowda-shared'\nimport * as db from '@prisma/client-flowda'\nimport type { AxiosInstance } from 'axios'\nimport { lowerFirst } from 'lodash'\nimport { FLOWDA_ENV } from '../lib/flowda-env'\nimport { LoggerService } from '@nestjs/common'\nimport { z } from 'zod'\nimport { createZodDto } from 'nestjs-zod'\n\nconst StartSchema = z.object({\n  tenantId: z.string(),\n  processDefKey: z.string(),\n  businessKey: z.union([z.number(), z.string()]),\n})\n\nexport class StartSchemaDto extends createZodDto(StartSchema) {}\n\nconst GetTaskFormSchema = z.object({\n  taskId: z.string(),\n})\n\nexport class GetTaskFormSchemaDto extends createZodDto(GetTaskFormSchema) {}\n\n@injectable()\nexport class TaskService {\n  private readonly logger\n\n  constructor(\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject(APISymbol) private API: AxiosInstance,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(TaskService.name)\n  }\n\n  async start(dto: StartSchemaDto, reqUser: any) {\n    const res = await this.API.post(\n      FLOWDA_ENV.C7_REST_URL + `/process-definition/key/${dto.processDefKey}/tenant-id/${dto.tenantId}/start`,\n      {\n        variables: {\n          uid: {\n            value: reqUser.uid,\n            type: 'Integer',\n          },\n        },\n        businessKey: dto.businessKey,\n      },\n    )\n  }\n\n  async getTask(taskId: string) {\n    const res = await this.API.get(FLOWDA_ENV.C7_REST_URL + `/task/${taskId}`)\n    const res2 = await this.API.get(FLOWDA_ENV.C7_REST_URL + `/task/${taskId}/form-variables`)\n    res.data.variables = JSON.stringify(res2.data)\n    return res.data\n  }\n\n  async complete(taskId: string) {\n    try {\n      const ret2 = await this.API.post(\n        FLOWDA_ENV.C7_REST_URL + `/task/${taskId}/complete`,\n        {},\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        },\n      )\n    } catch (e) {\n      this.logger.error(e)\n    }\n\n    return {\n      taskId,\n    }\n  }\n\n  /**\n   * 1. 根据 taskId -> formKey\n   * 2. 前端根据 formKey -> form schema 并初始化对应的 view model\n   * 3. 前端写一点点代码，扩展 form schema 的 onInit 和 onComplete\n   */\n  async getTaskForm(dto: GetTaskFormSchemaDto) {\n    try {\n      const res = await this.API.get(FLOWDA_ENV.C7_REST_URL + `/task/${dto.taskId}`)\n      const taskDefinitionKey = res.data.taskDefinitionKey\n      const processInstanceId = res.data.processInstanceId\n      const res3 = await this.API.get(FLOWDA_ENV.C7_REST_URL + `/process-instance/${processInstanceId}`)\n      const res2 = await this.API.get(FLOWDA_ENV.C7_REST_URL + `/task/${dto.taskId}/form-variables`)\n      this.logger.debug!(`getTaskForm(${JSON.stringify(dto)}): ${JSON.stringify(res2.data, null, 2)}`)\n      const ret = await this.prisma.taskFormRelation.findUnique({\n        where: {\n          taskDefinitionKey,\n        },\n      })\n      return {\n        taskFormRelation: ret,\n        process: res3.data,\n        task: res.data,\n        variables: res2.data,\n      }\n    } catch (e: any) {\n      this.logger.error(`[getTaskForm] error ${e.message}`)\n      throw new Error(e)\n    }\n  }\n\n  async completeResource(taskId: string, body: any) {\n    const { resource, data } = body\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const ret1 = await this.prisma[lowerFirst(resource)].create({\n      data: data,\n    })\n    try {\n      const ret2 = await this.API.post(\n        FLOWDA_ENV.C7_REST_URL + `/task/${taskId}/complete`,\n        {},\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        },\n      )\n    } catch (e) {\n      this.logger.error(e)\n    }\n\n    return {\n      taskId,\n      resource,\n      data,\n      ret1,\n    }\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport type {\n  AccountExistsSchemaDto,\n  createQuickOrderTenantJWTPayloadSchemaDto,\n  FindByUnionIdAndTenantIdSchemaDto,\n  GetTenantByNameSchemaDto,\n  refreshTokenSchemaDto,\n  RegisterByUnionIdSchemaDto,\n  RegisterDto,\n  resetPasswordSchemaDto,\n  sendSmsVerifyCodeSchemaDto,\n  TCtx,\n  validateSchemaDto,\n  verifyMobileSchemaDto,\n} from '@flowda-projects/flowda-shared-types'\nimport {\n  _resetTenantPasswordSchemaDto,\n  amountUpdateUserJwtPayloadSchemaDto,\n  appCreateV4SchemaDto,\n  customerPreSignupTenantJwtPayloadSchemaDto,\n  customerSignupTenantJwtPayloadSchemaDto,\n  fwhLoginTenantJwtPayloadSchemaDto,\n  generateRecoveryCodeTenantJwtSchemaDto,\n  PrismaClientSymbol,\n  resetPasswordWithRecoveryCodeTenantJwtSchemaDto,\n  SmsClientSymbol,\n  userJwtPayloadSchemaDto,\n  validateByEmailSchemaDto,\n  validateTenantSchemaDto,\n  wxValidateUserTenantJwtPayloadSchemaDto,\n} from '@flowda-projects/flowda-shared-types'\nimport * as db from '@prisma/client-flowda'\nimport * as bcrypt from 'bcrypt'\nimport type { JwtPayload } from 'jsonwebtoken'\nimport * as jwt from 'jsonwebtoken'\nimport { FLOWDA_ENV } from '../lib/flowda-env'\nimport { ConflictException, ForbiddenException, LoggerService, UnauthorizedException } from '@nestjs/common'\nimport dayjs from 'dayjs'\nimport type { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20210111/sms_client'\nimport { WeixinLoginService } from './weixin-login.service'\nimport * as _ from 'radash'\nimport { WeixinFuwuhaoLoginService } from './weixin-fuwuhao-login.service'\nimport { diag } from '@flowda-projects/flowda-shared-node'\n\nexport const tenantSelect = db.Prisma.validator<db.Prisma.TenantSelect>()({\n  id: true,\n  name: true,\n  displayName: true,\n  hashedRefreshToken: true,\n  hashedPassword: true,\n})\n\n// https://www.prisma.io/docs/orm/prisma-client/type-safety/prisma-validator\n// 这个比 `userSelect: db.Prisma.UserSelect` 好，因为 UserSelect 所有 property 都是 `?` 会导致类型不一致\nexport const userSelect = db.Prisma.validator<db.Prisma.UserSelect>()({\n  id: true,\n  username: true,\n  email: true,\n  image: true,\n  hashedPassword: true,\n  hashedRefreshToken: true,\n  tenantId: true,\n  tenant: {\n    select: {\n      name: true,\n    },\n  },\n  orderProfile: {\n    select: {\n      productType: true,\n      plan: true,\n      amount: true,\n      expireAt: true,\n    },\n  },\n  weixinProfile: {\n    select: {\n      unionid: true,\n      loginOpenid: true,\n      headimgurl: true,\n      nickname: true,\n      sex: true,\n    },\n  },\n})\n\n@injectable()\nexport class UserService {\n  private readonly logger\n\n  constructor(\n    @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject(SmsClientSymbol) private smsClient: Client,\n    @inject(WeixinLoginService) private weixinLogin: WeixinLoginService,\n    @inject(WeixinFuwuhaoLoginService) private weixinFuwuhaoLogin: WeixinFuwuhaoLoginService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(UserService.name)\n  }\n\n  async register(dto: RegisterDto) {\n    const user = await this.prisma.user.findFirst({\n      where: {\n        username: dto.username,\n      },\n    })\n    if (user) {\n      throw new ConflictException(`User exists`)\n    }\n    const hashedPassword = await bcrypt.hash(dto.password, 10)\n    const aUser = await this.prisma.user.create({\n      data: {\n        username: dto.username,\n        hashedPassword: hashedPassword,\n        hashedRefreshToken: null,\n        tenantId: dto.tenantId,\n      },\n    })\n    return {\n      id: aUser.id,\n      username: aUser.username,\n    }\n  }\n\n  async resetPassword(reqUser: any, dto: resetPasswordSchemaDto) {\n    const tenantRet = await this.prisma.tenant.findUniqueOrThrow({\n      where: {\n        id: reqUser.tid,\n      },\n    })\n    if (tenantRet.name !== 'superadmin') {\n      throw new Error('Not allowed')\n    }\n\n    await this.prisma.user.findFirstOrThrow({\n      where: {\n        id: dto.userId,\n        tenantId: dto.tenantId,\n      },\n    })\n    const hashedPassword = await bcrypt.hash(dto.password, 10)\n    return this.prisma.user.update({\n      where: {\n        id: dto.userId,\n      },\n      data: {\n        hashedPassword,\n      },\n    })\n  }\n\n  async validateByEmail(input: validateByEmailSchemaDto, ctx?: TCtx) {\n    diag(ctx, '[validateByEmail]')\n    const { tenantId, email, password } = input\n    const userRet = await this.prisma.user.findFirstOrThrow({\n      where: {\n        email: email,\n        tenantId: tenantId,\n      },\n      select: {\n        id: true,\n        username: true,\n      },\n    })\n    diag(ctx, 'user.findFirstOrThrow', userRet)\n    return this.validate({ username: userRet.username, password }, ctx)\n  }\n\n  async validate(input: validateSchemaDto, ctx?: TCtx) {\n    diag(ctx, '[validate]')\n    const { username, password } = input\n    const userRet = await this.prisma.user.findFirst({\n      where: {\n        username: username,\n      },\n      select: userSelect,\n    })\n    diag(ctx, 'user.findFirst', userRet)\n    if (!userRet) {\n      // https://docs.nestjs.com/exception-filters#built-in-http-exceptions\n      throw new UnauthorizedException(`User does not exist`)\n    }\n\n    if (!userRet.hashedPassword) {\n      throw new UnauthorizedException(`Password is not initialized`)\n    }\n\n    const match = await bcrypt.compare(password, userRet.hashedPassword)\n    if (!match) {\n      throw new UnauthorizedException(`Username and password is not matched`)\n    }\n\n    const payload = { uid: userRet.id, tid: userRet.tenantId }\n    const rtRet = await generateUserRefreshToken(payload)\n    diag(ctx, 'generateUserRefreshToken', rtRet)\n\n    await this.prisma.user.update({\n      where: { id: userRet.id },\n      data: {\n        hashedRefreshToken: rtRet.hash,\n      },\n    })\n    diag(ctx, 'user.update', rtRet.hash)\n\n    const at = generateJwt(payload, {\n      secret: FLOWDA_ENV.ACCESS_TOKEN_SECRET,\n      expires: FLOWDA_ENV.ACCESS_TOKEN_EXPIRE,\n    })\n\n    this.logger.log(\n      `validate pass, tid:${userRet.tenantId}, u:${userRet.username}, e:${dayjs().add(\n        FLOWDA_ENV.ACCESS_TOKEN_EXPIRE,\n        's',\n      )}`,\n    )\n\n    return {\n      user: _.omit(userRet, ['hashedRefreshToken', 'hashedPassword']),\n      rt: rtRet.rt,\n      at,\n    }\n  }\n\n  async validateTenant(dto: validateTenantSchemaDto, ctx?: TCtx) {\n    const { name, password } = dto\n    const tenant = await this.prisma.tenant.findFirst({\n      where: {\n        name: name,\n      },\n      select: tenantSelect,\n    })\n    diag(ctx, '(e)tenant.findFirst', tenant)\n\n    if (tenant == null) {\n      throw new UnauthorizedException(`tenant does not exist`)\n    }\n\n    if (!tenant.hashedPassword) {\n      throw new UnauthorizedException(`tenant password is not initialized`)\n    }\n\n    const match = await bcrypt.compare(password, tenant.hashedPassword)\n    if (!match) {\n      throw new UnauthorizedException(`tenant name and password is not matched`)\n    }\n\n    const payload = { tid: tenant.id }\n    const rtRet = await generateTenantRefreshToken(payload)\n    diag(ctx, '(e) generateTenantRefreshToken', payload)\n    await this.prisma.tenant.update({\n      where: { id: tenant.id },\n      data: {\n        hashedRefreshToken: rtRet.hash,\n      },\n    })\n\n    const at = generateJwt(payload, {\n      secret: FLOWDA_ENV.TENANT_ACCESS_TOKEN_SECRET,\n      expires: FLOWDA_ENV.TENANT_ACCESS_TOKEN_EXPIRE,\n    })\n    this.logger.log(`validate pass, t: ${tenant.name}, e: ${dayjs().add(FLOWDA_ENV.TENANT_ACCESS_TOKEN_EXPIRE, 's')}`)\n\n    return {\n      tenant: _.omit(tenant, ['hashedPassword', 'hashedRefreshToken']),\n      rt: rtRet.rt,\n      at,\n    }\n  }\n\n  async refreshTenantToken(rt: string, ctx?: TCtx) {\n    diag(ctx, '[refreshTenantToken]')\n    const decodedToken = jwt.verify(rt, FLOWDA_ENV.TENANT_REFRESH_TOKEN_SECRET) as JwtPayload\n    const tid = decodedToken['tid']\n    diag(ctx, 'jwt.verify', decodedToken)\n    const tenant = await this.prisma.tenant.findUniqueOrThrow({\n      where: {\n        id: tid,\n      },\n      select: tenantSelect,\n    })\n    diag(ctx, 'tenant.findUniqueOrThrow', tenant)\n    if (tenant.hashedRefreshToken == null) {\n      throw new UnauthorizedException('tenant refresh token not exists')\n    }\n    const match = await bcrypt.compare(rt, tenant.hashedRefreshToken)\n    if (!match) {\n      throw new UnauthorizedException('tenant refresh token is invalid')\n    }\n    const at = generateJwt(\n      { tid },\n      {\n        secret: FLOWDA_ENV.TENANT_ACCESS_TOKEN_SECRET,\n        expires: FLOWDA_ENV.TENANT_ACCESS_TOKEN_EXPIRE,\n      },\n    )\n    return {\n      at,\n      tenant: _.omit(tenant, ['hashedRefreshToken', 'hashedPassword']),\n    }\n  }\n\n  verifyAccessToken(at: string) {\n    return jwt.verify(at, FLOWDA_ENV.ACCESS_TOKEN_SECRET) as JwtPayload\n  }\n\n  verifyTenantAccessToken(at: string) {\n    return jwt.verify(at, FLOWDA_ENV.TENANT_ACCESS_TOKEN_SECRET) as JwtPayload\n  }\n\n  async getUserInfo(uid: number, ctx?: TCtx) {\n    diag(ctx, '[getUserInfo]')\n    const ret = await this.prisma.user.findUniqueOrThrow({\n      where: {\n        id: uid,\n      },\n      select: userSelect,\n    })\n    diag(ctx, 'user found', ret)\n    return _.omit(ret, ['hashedRefreshToken', 'hashedPassword'])\n  }\n\n  async getTenantInfo(tid: number, ctx?: TCtx) {\n    const ret = await this.prisma.tenant.findUniqueOrThrow({\n      where: {\n        id: tid,\n      },\n      select: tenantSelect,\n    })\n    return _.omit(ret, ['hashedRefreshToken', 'hashedPassword'])\n  }\n\n  async sendSmsVerifyCode(input: sendSmsVerifyCodeSchemaDto, ctx?: TCtx) {\n    diag(ctx, ['sendSmsVerifyCode'])\n    const code = generateVerificationCode()\n    diag(ctx, 'generateVerificationCode', { code })\n    try {\n      const res = await this.smsClient.SendSms({\n        SmsSdkAppId: '1400886368',\n        PhoneNumberSet: ['+86' + input.mobile],\n        TemplateId: '2062585',\n        SignName: '上海只冲网络科技有限公司',\n        TemplateParamSet: [code],\n      })\n      diag(ctx, 'smsClient.SendSms', res)\n    } catch (e: any) {\n      throw new Error(e)\n    }\n    return this.prisma.sentSms.create({\n      data: {\n        mobile: input.mobile,\n        code: code,\n      },\n    })\n  }\n\n  async verifyMobile(dto: verifyMobileSchemaDto, ctx?: TCtx) {\n    diag(ctx, '[verifyMobile]')\n    const now = dayjs()\n    const tenMinutesAgo = now.subtract(10, 'minute')\n    await this.prisma.sentSms.findFirstOrThrow({\n      where: {\n        code: dto.code,\n        mobile: dto.mobile,\n        createdAt: {\n          gte: tenMinutesAgo.toDate(),\n          lte: now.toDate(),\n        },\n      },\n    })\n    diag(ctx, 'called sentSms.findFirstOrThrow')\n    await this.prisma.user.findFirstOrThrow({\n      where: {\n        id: dto.uid,\n        tenantId: dto.tid,\n      },\n    })\n    diag(ctx, 'called user.findFirstOrThrow')\n    const ret = await this.prisma.user.update({\n      where: {\n        id: dto.uid,\n      },\n      data: {\n        mobile: dto.mobile,\n      },\n      select: {\n        id: true,\n        tenantId: true,\n      },\n    })\n    diag(ctx, 'called user.update')\n    return ret\n  }\n\n  getTenantByName(dto: GetTenantByNameSchemaDto) {\n    return this.prisma.tenant.findFirstOrThrow({\n      where: {\n        name: dto.tenantName,\n      },\n    })\n  }\n\n  async accountExists(dto: AccountExistsSchemaDto) {\n    const ret = await this.prisma.user.findFirstOrThrow({\n      where: {\n        username: dto.username,\n        tenant: {\n          name: dto.tenantName,\n        },\n      },\n    })\n    return ret\n  }\n\n  async findByUnionIdAndTenantId(dto: FindByUnionIdAndTenantIdSchemaDto) {\n    const ret = await this.prisma.user.findFirst({\n      where: {\n        weixinProfile: {\n          unionid: dto.unionid,\n        },\n        tenantId: dto.tenantId,\n      },\n    })\n    return ret\n  }\n\n  async registerByUnionId(dto: RegisterByUnionIdSchemaDto, ctx?: TCtx) {\n    const user = await this.prisma.user.findFirst({\n      where: {\n        weixinProfile: {\n          unionid: dto.unionid,\n        },\n        tenantId: dto.tenantId,\n      },\n    })\n    diag(ctx, 'user.findFirst', user)\n    if (user) {\n      throw new Error(`User exits with unionid: ${dto.unionid}`)\n    }\n\n    const wxProfileRet = await this.prisma.weixinProfile.upsert({\n      where: {\n        unionOrOpenid: dto.unionid,\n      },\n      create: {\n        unionOrOpenid: dto.unionid,\n        unionid: dto.unionid,\n      },\n      update: {\n        unionOrOpenid: dto.unionid,\n        unionid: dto.unionid,\n      },\n    })\n    diag(ctx, 'weixinProfile.upsert', wxProfileRet)\n\n    const aUser = await this.prisma.user.create({\n      data: {\n        username: dto.unionid, // 后续可以判断如果 unionid === username 则可以改动一次用户名\n        hashedPassword: null,\n        hashedRefreshToken: null,\n        weixinProfileId: wxProfileRet.id,\n        tenantId: dto.tenantId,\n      },\n    })\n    return aUser\n  }\n\n  async wxValidateUser(dto: wxValidateUserTenantJwtPayloadSchemaDto, ctx?: TCtx) {\n    diag(ctx, '[wxValidateUser]', dto)\n\n    const { tid, code } = dto\n\n    diag(ctx, 'call weixinLogin.getAccessToken', code)\n    const wxRet = await this.weixinLogin.getAccessToken(code)\n    diag(ctx, 'called weixinLogin.getAccessToken', wxRet)\n\n    const wxUser = await this.weixinLogin.getUser(wxRet.data.openid, wxRet.data.access_token)\n    diag(ctx, 'called weixinLogin.getUser', wxUser)\n\n    const wxProfileRet = await this.prisma.weixinProfile.upsert({\n      where: {\n        unionOrOpenid: wxRet.data.unionid,\n      },\n      create: {\n        unionOrOpenid: wxRet.data.unionid,\n        unionid: wxRet.data.unionid,\n        headimgurl: wxUser.headimgurl,\n        nickname: wxUser.nickname,\n        sex: wxUser.sex,\n      },\n      update: {\n        unionOrOpenid: wxRet.data.unionid,\n        unionid: wxRet.data.unionid,\n        headimgurl: wxUser.headimgurl,\n        nickname: wxUser.nickname,\n        sex: wxUser.sex,\n      },\n    })\n    diag(ctx, 'called weixinProfile.upsert', wxProfileRet)\n\n    diag(ctx, 'call user.findFirst', {\n      unionid: wxRet.data.unionid,\n      tenantId: tid,\n    })\n    let userRet = await this.prisma.user.findFirst({\n      where: {\n        username: wxRet.data.unionid,\n        tenantId: tid,\n      },\n      select: userSelect,\n    })\n    diag(ctx, 'userRet', userRet)\n\n    if (!userRet /* 不存在*/) {\n      diag(ctx, 'wxProfileRet upsert', wxProfileRet)\n      userRet = await this.prisma.user.create({\n        data: {\n          username: wxRet.data.unionid, // 后续可以判断如果 unionid === username 则可以改动一次用户名\n          hashedPassword: null,\n          hashedRefreshToken: null,\n          tenantId: tid,\n          weixinProfileId: wxProfileRet.id,\n        },\n        select: userSelect,\n      })\n      diag(ctx, 'create userRet', userRet)\n    }\n\n    const payload = { uid: userRet.id, tid: userRet.tenantId }\n    const at = generateJwt(payload, {\n      secret: FLOWDA_ENV.ACCESS_TOKEN_SECRET,\n      expires: FLOWDA_ENV.ACCESS_TOKEN_EXPIRE,\n    })\n    const rtRet = await generateUserRefreshToken(payload)\n    await this.prisma.user.update({\n      where: { id: userRet.id },\n      data: {\n        weixinProfileId: wxProfileRet.id,\n        hashedRefreshToken: rtRet.hash,\n      },\n    })\n    diag(ctx, 'update rt')\n\n    return {\n      at: at,\n      rt: rtRet.rt,\n      user: _.omit(userRet, ['hashedRefreshToken', 'hashedPassword']),\n    }\n  }\n\n  async refreshToken(input: refreshTokenSchemaDto, ctx?: TCtx) {\n    diag(ctx, '[refreshToken]')\n    const { rt } = input\n    const decodedToken = jwt.verify(rt, FLOWDA_ENV.REFRESH_TOKEN_SECRET) as JwtPayload\n    diag(ctx, 'jwt.verify', decodedToken)\n    const userRet = await this.prisma.user.findUniqueOrThrow({\n      where: {\n        id: decodedToken['uid'],\n      },\n      select: userSelect,\n    })\n    diag(ctx, 'user.findUniqueOrThrow', userRet)\n    if (userRet.hashedRefreshToken == null) {\n      throw new UnauthorizedException(`user refresh token not exists`)\n    }\n    const match = await bcrypt.compare(rt, userRet.hashedRefreshToken)\n    if (!match) {\n      throw new UnauthorizedException('user refresh token is invalid')\n    }\n    const payload = { tid: userRet.tenantId, uid: userRet.id }\n    diag(ctx, 'generateJwt', payload)\n    const at = generateJwt(payload, {\n      secret: FLOWDA_ENV.ACCESS_TOKEN_SECRET,\n      expires: FLOWDA_ENV.ACCESS_TOKEN_EXPIRE,\n    })\n    return {\n      at,\n      user: _.omit(userRet, ['hashedRefreshToken', 'hashedPassword']),\n    }\n  }\n\n  async generateRecoveryCode(dto: generateRecoveryCodeTenantJwtSchemaDto, ctx?: TCtx) {\n    diag(ctx, '[generateRecoveryCode]')\n    const userRet = await this.prisma.user.findUniqueOrThrow({\n      where: {\n        email: dto.email,\n      },\n    })\n    diag(ctx, 'user.findUniqueOrThrow', userRet)\n    const recoveryToken = generateRecoveryToken(dto.email, {\n      secret: FLOWDA_ENV.ACCESS_TOKEN_SECRET,\n    })\n    // token 过长，关联一个 code 发到邮箱里\n    const recoveryCode = _.uid(6).toUpperCase()\n    diag(ctx, 'generateRecoveryToken', { recoveryToken, recoveryCode })\n    await this.prisma.user.update({\n      where: {\n        id: userRet.id,\n      },\n      data: {\n        recoveryToken,\n        recoveryCode,\n      },\n    })\n    // todo: 发邮件\n    return {\n      recoveryCode,\n    }\n  }\n\n  async resetPasswordWithRecoveryCode(dto: resetPasswordWithRecoveryCodeTenantJwtSchemaDto, ctx?: TCtx) {\n    diag(ctx, '[resetPasswordWithRecoveryCode]')\n    const userRet = await this.prisma.user.findFirstOrThrow({\n      where: {\n        tenantId: dto.tid,\n        recoveryCode: dto.recoveryCode,\n      },\n    })\n    diag(ctx, 'user.findFirstOrThrow', userRet)\n    if (userRet.recoveryToken == null) {\n      throw new ForbiddenException(`invalid recovery code`)\n    }\n    const decodeToken = verifyRecoveryToken(userRet.recoveryToken, { secret: FLOWDA_ENV.ACCESS_TOKEN_SECRET })\n    diag(ctx, 'decodeToken', decodeToken)\n    if (!decodeToken['verificationToken']) {\n      throw new ForbiddenException('invalid recovery token')\n    }\n    const hash = await bcrypt.hash(dto.password, 10)\n    const ret = await this.prisma.user.update({\n      where: {\n        id: userRet.id,\n      },\n      data: {\n        hashedPassword: hash,\n        hashedRefreshToken: null,\n        recoveryCode: null,\n        recoveryToken: null,\n      },\n      select: userSelect,\n    })\n    return _.omit(ret, ['hashedRefreshToken', 'hashedPassword'])\n  }\n\n  async fwhLogin(dto: fwhLoginTenantJwtPayloadSchemaDto) {\n    const ret = await this.weixinFuwuhaoLogin.getAccessTokenByCode(dto.code)\n    const name = ret.unionid || ret.openid // 如果 unionid 为空，则 fallback 到 openid\n    const wxUser = await this.weixinLogin.getUser(ret.openid, ret.access_token)\n    const wxProfileRet = await this.prisma.weixinProfile.upsert({\n      where: {\n        unionOrOpenid: ret.unionid || ret.openid,\n      },\n      create: {\n        unionOrOpenid: ret.unionid || ret.openid,\n        unionid: ret.unionid,\n        loginOpenid: ret.openid,\n        headimgurl: wxUser.headimgurl,\n        nickname: wxUser.nickname,\n        sex: wxUser.sex,\n      },\n      update: {\n        unionOrOpenid: ret.unionid || ret.openid,\n        unionid: ret.unionid,\n        loginOpenid: ret.openid,\n        headimgurl: wxUser.headimgurl,\n        nickname: wxUser.nickname,\n        sex: wxUser.sex,\n      },\n    })\n    let userRet = await this.prisma.user.findFirst({\n      where: {\n        username: name,\n        tenantId: dto.tid,\n      },\n      select: userSelect,\n    })\n\n    let rt: { token: string; iat: number; exp: number }\n    if (!userRet /* 不存在则创建 */) {\n      userRet = await this.prisma.user.create({\n        data: {\n          username: name,\n          tenantId: dto.tid,\n          // hashedRefreshToken: hash, // todo: 不存在无法创建 hash\n          weixinProfileId: wxProfileRet.id,\n        },\n        select: userSelect,\n      })\n      const rtRet = await generateUserRefreshToken({\n        uid: userRet.id,\n        tid: userRet.tenantId,\n      })\n      rt = rtRet.rt\n      await this.prisma.user.update({\n        where: {\n          id: userRet.id,\n        },\n        data: {\n          hashedRefreshToken: rtRet.hash,\n        },\n      })\n    } /* 否则可以更新下微信 profile */ else {\n      const rtRet = await generateUserRefreshToken({\n        uid: userRet.id,\n        tid: userRet.tenantId,\n      })\n      rt = rtRet.rt\n      userRet = await this.prisma.user.update({\n        where: {\n          id: userRet.id,\n        },\n        select: userSelect,\n        data: {\n          hashedRefreshToken: rtRet.hash,\n          weixinProfileId: wxProfileRet.id,\n        },\n      })\n    }\n\n    const payload = { uid: userRet.id, tid: userRet.tenantId }\n\n    const at = generateJwt(payload, {\n      secret: FLOWDA_ENV.ACCESS_TOKEN_SECRET,\n      expires: FLOWDA_ENV.ACCESS_TOKEN_EXPIRE,\n    })\n\n    return {\n      at,\n      rt,\n      user: _.omit(userRet, ['hashedRefreshToken', 'hashedPassword']),\n    }\n  }\n\n  async createTenant(input: appCreateV4SchemaDto, ctx?: TCtx) {\n    diag(ctx, '[createTenant]')\n    const randomAppId = _.uid(4).toUpperCase()\n    const randomAppToken = _.uid(24)\n    const hashedPassword = await bcrypt.hash(randomAppToken, 10)\n    diag(ctx, 'tenant.create params', { randomAppId, randomAppToken })\n    const ret = await this.prisma.tenant.create({\n      data: {\n        name: randomAppId,\n        displayName: input.displayName,\n        hashedPassword,\n      },\n      select: tenantSelect,\n    })\n    diag(ctx, 'tenant.create')\n    // appToken 虽然是密码，但是需要返回给前台\n    return Object.assign({ appToken: randomAppToken }, _.omit(ret, ['hashedRefreshToken', 'hashedPassword']))\n  }\n\n  // todo: 危险操作 增加二次验证\n  async _resetTenantPassword(input: _resetTenantPasswordSchemaDto) {\n    const randomAppToken = _.uid(24)\n    const hashedPassword = await bcrypt.hash(randomAppToken, 10)\n    const ret = await this.prisma.tenant.update({\n      where: {\n        id: input.id,\n      },\n      data: {\n        hashedPassword,\n      },\n      select: tenantSelect,\n    })\n    // appToken 虽然是密码，但是需要返回给前台\n    return Object.assign({ appToken: randomAppToken }, _.omit(ret, ['hashedRefreshToken', 'hashedPassword']))\n  }\n\n  async preSignup(input: customerPreSignupTenantJwtPayloadSchemaDto, ctx?: TCtx) {\n    diag(ctx, '[preSignup]')\n    const user = await this.prisma.user.findUnique({\n      where: { email: input.email },\n    })\n    if (user) {\n      // https://docs.nestjs.com/exception-filters#built-in-http-exceptions\n      throw new ConflictException('Email already exists', {\n        description: `userId:${user.id}`,\n      })\n    }\n    const randomCode = _.uid(6).toUpperCase()\n    diag(ctx, 'verifyCode', { randomCode })\n    await this.prisma.userPreSignup.create({\n      data: {\n        tenantId: input.tid,\n        email: input.email,\n        verifyCode: randomCode,\n      },\n    })\n    // todo: 发送邮件\n    return {\n      verifyCode: randomCode,\n    }\n  }\n\n  async verifyAndSignup(input: customerSignupTenantJwtPayloadSchemaDto, ctx?: TCtx) {\n    diag(ctx, '[verifyAndSignup]')\n    const ret = await this.prisma.userPreSignup.findFirstOrThrow({\n      where: {\n        tenantId: input.tid,\n        email: input.email,\n        verifyCode: input.verifyCode,\n        isDeleted: false,\n      },\n    })\n    diag(ctx, 'userPreSignup found', ret)\n    const hashedPassword = await bcrypt.hash(input.password, 10)\n\n    const [userRet] = await this.prisma.$transaction([\n      this.prisma.user.create({\n        data: {\n          username: input.email, // 后续可以判断如果 email === username 则可以改动一次用户名\n          email: input.email,\n          hashedPassword: hashedPassword,\n          hashedRefreshToken: null,\n          tenantId: input.tid,\n        },\n        select: userSelect,\n      }),\n      this.prisma.userPreSignup.update({\n        where: {\n          id: ret.id,\n        },\n        data: {\n          isDeleted: true,\n        },\n      }),\n    ])\n    diag(ctx, '$transaction complete', userRet)\n    return _.omit(userRet, ['hashedRefreshToken', 'hashedPassword'])\n  }\n\n  async amountUpdate(input: amountUpdateUserJwtPayloadSchemaDto) {\n    const profileRet = await this.prisma.orderProfile.findUniqueOrThrow({\n      where: {\n        userId: input.uid,\n      },\n    })\n    if (profileRet.expireAt && new Date(profileRet.expireAt).valueOf() < Date.now()) {\n      throw new ForbiddenException('Order profile is expired', {\n        description: `expired at ${profileRet.expireAt}`,\n      })\n    }\n    const count = input.count || 1\n    const action = input.action || 'decrement'\n    if (action === 'decrement' && (profileRet.amount == null || profileRet.amount < count)) {\n      throw new ForbiddenException('Action not allowed', {\n        description: `profile amount ${profileRet.amount} less than ${count}`,\n      })\n    }\n\n    const ret = await this.prisma.user.update({\n      where: {\n        id: profileRet.userId,\n      },\n      select: userSelect,\n      data: {\n        orderProfile: {\n          update: {\n            amount: {\n              decrement: count,\n            },\n          },\n        },\n      },\n    })\n    return _.omit(ret, ['hashedRefreshToken', 'hashedPassword'])\n  }\n\n  async createQuick(input: createQuickOrderTenantJWTPayloadSchemaDto) {\n    const userRet = await this.prisma.user.findFirst({\n      where: {\n        username: input.anonymousCustomerToken,\n        tenantId: input.tid,\n      },\n    })\n    if (userRet) {\n      throw new ConflictException('请确认支付快捷创建是已支付状态')\n    }\n    return this.prisma.user.create({\n      data: {\n        tenantId: input.tid,\n        username: input.anonymousCustomerToken,\n        anonymousCustomerToken: input.anonymousCustomerToken,\n      },\n      select: userSelect,\n    })\n  }\n\n  async logout(dto: userJwtPayloadSchemaDto) {\n    await this.prisma.user.update({\n      where: {\n        id: dto.uid,\n      },\n      data: {\n        hashedRefreshToken: null,\n      },\n    })\n    return {}\n  }\n}\n\nexport function generateVerificationCode() {\n  let verificationCode = ''\n  const digits = '0123456789'\n\n  while (verificationCode.length < 6) {\n    const randomDigit = digits[Math.floor(Math.random() * digits.length)]\n    if (!verificationCode.includes(randomDigit)) {\n      verificationCode += randomDigit\n    }\n  }\n\n  return verificationCode\n}\n\nexport function generateRecoveryToken(email: string, options: { secret: string }): string {\n  const recoveryToken = jwt.sign(\n    {\n      email: email,\n      verificationToken: true,\n      exp: Math.floor(Date.now() / 1000) + 30 * 60, // 30 分钟过期\n    },\n    options.secret,\n  )\n  return recoveryToken\n}\n\nfunction verifyRecoveryToken(at: string, options: { secret: string }): JwtPayload {\n  return jwt.verify(at, options.secret) as JwtPayload\n}\n\nfunction generateJwt(payload: any, options: { secret: string; expires: number }) {\n  const exp0 = Date.now() + options.expires * 1000\n  const token = jwt.sign(\n    {\n      ...payload,\n      ...{ exp0 },\n    },\n    options.secret,\n    {\n      expiresIn: `${options.expires}s`,\n    },\n  )\n  const decode = jwt.decode(token) as JwtPayload\n  return {\n    token: token,\n    iat: decode.iat as number,\n    exp: decode.exp as number,\n  }\n}\n\nasync function generateUserRefreshToken(payload: { uid: number; tid: number }) {\n  const rt = generateJwt(payload, {\n    secret: FLOWDA_ENV.REFRESH_TOKEN_SECRET,\n    expires: FLOWDA_ENV.REFRESH_TOKEN_EXPIRE,\n  })\n  const hash = await bcrypt.hash(rt.token, 10)\n  return {\n    rt,\n    hash,\n  }\n}\n\nasync function generateTenantRefreshToken(payload: { tid: number }) {\n  const rt = generateJwt(payload, {\n    secret: FLOWDA_ENV.TENANT_REFRESH_TOKEN_SECRET,\n    expires: FLOWDA_ENV.TENANT_REFRESH_TOKEN_EXPIRE,\n  })\n  const hash = await bcrypt.hash(rt.token, 10)\n  return {\n    rt,\n    hash,\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport axios from 'axios'\nimport { InternalServerErrorException, LoggerService } from '@nestjs/common'\nimport { FLOWDA_ENV } from '../lib/flowda-env'\nimport { WechatOAuthSymbol } from '@flowda-projects/flowda-shared-types'\nimport WechatOAuth from 'wechat-oauth'\n\n@injectable()\nexport class WeixinFuwuhaoLoginService {\n  protected readonly logger\n  constructor(\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(WeixinFuwuhaoLoginService.name)\n  }\n  async getAccessToken(): Promise<{ access_token: string; expires_in: number }> {\n    const appid = FLOWDA_ENV.freecharger_fuwuhao_appid\n    const secret = FLOWDA_ENV.freecharger_fuwuhao_secret\n    // https://github.com/axios/axios/issues/5082\n    const ret = await axios({\n      method: 'get',\n      url: `https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=${appid}&secret=${secret}`,\n    })\n    return ret.data\n  }\n\n  async getAccessTokenByCode(code: string) {\n    const appid = FLOWDA_ENV.freecharger_fuwuhao_appid\n    const secret = FLOWDA_ENV.freecharger_fuwuhao_secret\n    const res = await axios({\n      method: 'get',\n      url: `https://api.weixin.qq.com/sns/oauth2/access_token?appid=${appid}&secret=${secret}&code=${code}&grant_type=authorization_code`,\n    })\n    if (res.data.errcode) {\n      console.log('get access token error: ', JSON.stringify(res.data))\n      throw new InternalServerErrorException('服务号获取 access token 失败', {\n        description: res.data.errcode,\n      })\n    }\n    return res.data\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { TWxGetAccessTokenRes, TWxGetUser, WechatOAuthSymbol } from '@flowda-projects/flowda-shared-types'\nimport WechatOAuth from 'wechat-oauth'\nimport { LoggerService } from '@nestjs/common'\n\n@injectable()\nexport class WeixinLoginService {\n  protected readonly logger\n\n  constructor(\n    @inject(WechatOAuthSymbol) private wechatOAuth: WechatOAuth,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(WeixinLoginService.name)\n  }\n\n  getAuthorizeURLForWebsite(redirectUrl: string) {\n    const url = this.wechatOAuth.getAuthorizeURLForWebsite(redirectUrl)\n    return url\n  }\n\n  getAccessToken(code: string): Promise<{ data: TWxGetAccessTokenRes }> {\n    return new Promise((resolve, reject) => {\n      this.wechatOAuth.getAccessToken(code, function (err: any, result: any) {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(result)\n        }\n      })\n    })\n  }\n\n  getUser(openid: string, access_token: string): Promise<TWxGetUser> {\n    return new Promise((resolve, reject) => {\n      this.wechatOAuth._getUser(\n        {\n          openid,\n        },\n        access_token,\n        function (err: any, result: any) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve(result)\n          }\n        },\n      )\n    })\n  }\n}\n","import { transactionsNativeSchemaDto, TWxPayQuery, WechatpayNodeV3Symbol } from '@flowda-projects/flowda-shared-types'\nimport WechatpayNodeV3 from 'wechatpay-node-v3'\nimport { InternalServerErrorException, LoggerService } from '@nestjs/common'\nimport { inject, injectable } from 'inversify'\nimport { getTimeExpire } from '@flowda-projects/flowda-shared'\n\n@injectable()\nexport class WeixinPayService {\n  protected readonly logger: LoggerService\n\n  constructor(\n    @inject(WechatpayNodeV3Symbol) private wechatPayNodeV3: WechatpayNodeV3,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(WeixinPayService.name)\n    this.transactionsNative = this.transactionsNative.bind(this)\n    this.transactionsJSAPI = this.transactionsJSAPI.bind(this)\n  }\n\n  /*\n  {\n  \"status\": 200,\n  \"appId\": \"xx\",\n  \"timeStamp\": \"1682132086\",\n  \"nonceStr\": \"xx\",\n  \"package\": \"prepay_id=xx\",\n  \"signType\": \"RSA\",\n  \"paySign\": \"xx\"\n}\n   */\n  async transactionsJSAPI(input: transactionsNativeSchemaDto): Promise<{\n    prepay_id: string\n  }> {\n    const timeExpire = getTimeExpire(5)\n    const params = {\n      description: input.desc, ///商品描述\n      out_trade_no: String(input.orderId), ///户系统内部订单号，只能是数字、大小写字母_-*且在同一个商户号下唯一\n      time_expire:\n        timeExpire /*订单失效时间，遵循rfc3339标准格式，格式为yyyy-MM-DDTHH:mm:ss+TIMEZONE，yyyy-MM-DD表示年月日，T出现在字符串中，表示time元素的开头，HH:mm:ss表示时分秒，TIMEZONE表示时区（+08:00表示东八区时间，领先UTC8小时，即北京时间）。例如：2015-05-20T13:29:35+08:00表示，北京时间2015年5月20日 13点29分35秒。 */,\n      attach: '附加数据', ///附加数据，在查询API和支付通知中原样返回，可作为自定义参数使用，实际情况下只有支付完成状态才会返回该字段。\n      notify_url: 'https://www.weixin.qq.com/wxpay/pay.php', // todo /* 异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。 公网域名必须为https，如果是走专线接入，使用专线NAT IP或者私有回调域名可使用http */\n      support_fapiao: false, ///传入true时，支付成功消息和支付详情页将出现开票入口。需要在微信支付商户平台或微信公众平台开通电子发票功能，传此字段才可生效。\n      amount: {\n        total: input.total * 100, ///订单总金额，单位为“分”\n        currency: 'CNY', /// CNY：人民币，境内商户号仅支持人民币。\n      },\n      payer: {\n        openid: input.openid!, ///用户在直连商户appid下的唯一标识，不可混用\n      },\n      settle_info: {\n        profit_sharing: false, ///是否指定分账\n      },\n    }\n    const wxRet = await this.wechatPayNodeV3.transactions_jsapi(params)\n    this.logger.log(`wechat transactions_jsapi resp ${JSON.stringify(wxRet)}`)\n    if (wxRet['status'] !== 200) {\n      throw new InternalServerErrorException('发起微信支付 (jsapi) 失败')\n    }\n    return wxRet as { prepay_id: string }\n  }\n\n  /*\n  {\"status\":200,\"code_url\":\"weixin://wxpay/bizpayurl?pr=pUnqLjbzz\"}\n   */\n  async transactionsNative(input: transactionsNativeSchemaDto): Promise<{\n    status: number\n    code_url: string\n  }> {\n    const timeExpire = getTimeExpire(5)\n    const params = {\n      description: input.desc, ///商品描述\n      out_trade_no: String(input.orderId), ///户系统内部订单号，只能是数字、大小写字母_-*且在同一个商户号下唯一\n      // '2022-11-11T23:59:59+08:00'\n      time_expire: timeExpire,\n      /*订单失效时间，遵循rfc3339标准格式，格式为yyyy-MM-DDTHH:mm:ss+TIMEZONE，yyyy-MM-DD表示年月日，T出现在字符串中，表示time元素的开头，HH:mm:ss表示时分秒，TIMEZONE表示时区（+08:00表示东八区时间，领先UTC8小时，即北京时间）。例如：2015-05-20T13:29:35+08:00表示，北京时间2015年5月20日 13点29分35秒。 */\n      attach: '附加数据', ///附加数据，在查询API和支付通知中原样返回，可作为自定义参数使用，实际情况下只有支付完成状态才会返回该字段。\n      notify_url: 'https://www.weixin.qq.com/wxpay/pay.php', // todo /* 异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。 公网域名必须为https，如果是走专线接入，使用专线NAT IP或者私有回调域名可使用http */\n      support_fapiao: false, ///传入true时，支付成功消息和支付详情页将出现开票入口。需要在微信支付商户平台或微信公众平台开通电子发票功能，传此字段才可生效。\n      amount: {\n        total: input.total * 100, ///订单总金额，单位为“分”\n        currency: 'CNY', /// CNY：人民币，境内商户号仅支持人民币。\n      },\n      settle_info: {\n        profit_sharing: false, ///是否指定分账\n      },\n    }\n    this.logger.log(`wechat start to transactions_native ${JSON.stringify(params)}`)\n    const wxRet = (await this.wechatPayNodeV3.transactions_native(params)) as { status: number; code_url: string }\n    this.logger.log(`wechat transactions_native resp ${JSON.stringify(wxRet)}`)\n    if (wxRet.status !== 200) {\n      throw new InternalServerErrorException('发起微信支付 (native) 失败')\n    }\n    return wxRet\n  }\n\n  /*\n  {\n    \"status\": 200,\n    \"amount\": {\n        \"currency\": \"CNY\",\n        \"payer_currency\": \"CNY\",\n        \"payer_total\": 1,\n        \"total\": 1\n    },\n    \"appid\": \"wx6ecc94d7d5133fde\",\n    \"attach\": \"附加数据\",\n    \"bank_type\": \"OTHERS\",\n    \"mchid\": \"1634638724\",\n    \"out_trade_no\": \"claz2v5la0000tzp2ivnp5gpm\",\n    \"payer\": {\n        \"openid\": \"oQBzz5GM-9aCngjG3eNpqJIlzJj4\"\n    },\n    \"promotion_detail\": [],\n    \"success_time\": \"2022-11-27T16:07:27+08:00\",\n    \"trade_state\": \"SUCCESS\",\n    \"trade_state_desc\": \"支付成功\",\n    \"trade_type\": \"NATIVE\",\n    \"transaction_id\": \"4200001645202211278892941061\"\n}\n   */\n  async query(outTradeNo: number) {\n    this.logger.log(`wx pay query with tradeNo ${outTradeNo}`)\n    const ret = await this.wechatPayNodeV3.query({ out_trade_no: String(outTradeNo) })\n    this.logger.log(`wx pay query resp: ${JSON.stringify(ret)}`)\n    return ret as TWxPayQuery\n  }\n}\n","import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common'\nimport { CustomError } from '@flowda-projects/flowda-shared'\n\n@Catch()\nexport class AppExceptionFilter implements ExceptionFilter {\n  private readonly logger = new Logger(AppExceptionFilter.name)\n\n  constructor() {}\n\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp()\n    const response = ctx.getResponse()\n    if (exception instanceof CustomError) {\n      const rt = JSON.parse(exception.message)\n      this.logger.error(`CustomError|${rt.code}|${rt.message}`)\n      response.status(HttpStatus.OK).json({\n        code: rt.code,\n        message: rt.message,\n      })\n    } else if (exception instanceof HttpException) {\n      const res = exception.getResponse()\n      if (typeof res === 'object') {\n        const extra = JSON.stringify(res)\n        this.logger.error(`HttpException|${exception.getStatus()}|${exception.message}|${extra}`)\n      } else {\n        this.logger.error(`HttpException|${exception.getStatus()}|${exception.message}`)\n      }\n      response.status(exception.getStatus()).json({\n        code: exception.getStatus(),\n        message: typeof res === 'object' ? res : exception.message,\n      })\n    } else {\n      this.logger.error((exception as Error).stack)\n\n      response.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n        code: HttpStatus.INTERNAL_SERVER_ERROR,\n        message: (exception as Error).message,\n      })\n    }\n  }\n}\n","import { ContainerModule, interfaces } from 'inversify'\nimport { Logger, LoggerService } from '@nestjs/common'\nimport { bindService } from '@flowda-projects/flowda-shared'\nimport { ServiceSymbol } from '@flowda-projects/flowda-shared-types'\n\nimport { TableFilterService } from './services/table-filter.service'\nimport { AuditService } from './services/audit.service'\n\nexport const flowdaSharedNodeModule = new ContainerModule((bind: interfaces.Bind) => {\n  bindService(bind, ServiceSymbol, TableFilterService)\n  bindService(bind, ServiceSymbol, AuditService)\n  bind<interfaces.Factory<LoggerService>>('Factory<Logger>').toFactory<LoggerService, [string]>(context => {\n    return name => {\n      return new Logger(name)\n    }\n  })\n})\n","export * from './flowdaSharedNode.module'\nexport * from './filters/appExceptionFilter'\nexport * from './services/table-filter.service'\nexport * from './services/audit.service'\nexport * from './trpc/trpc-utils'\n","import { inject, injectable } from 'inversify'\n// import * as db from '@prisma/client-wms'\nimport { createZodDto } from 'nestjs-zod'\nimport { PrismaClientSymbol } from '@flowda-projects/flowda-shared-types'\nimport { LoggerService } from '@nestjs/common'\nimport * as z from 'zod'\n\nconst QueryAuditSchema = z.object({\n  auditType: z.string(),\n  auditId: z.number(),\n  pageSize: z.number(),\n  current: z.number(),\n})\n\nexport class QueryAuditSchemaDto extends createZodDto(QueryAuditSchema) {}\n\n@injectable()\nexport class AuditService {\n  private readonly logger\n\n  constructor(\n    @inject(PrismaClientSymbol) private prisma: any,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(AuditService.name)\n  }\n\n  async queryAudit(dto: QueryAuditSchemaDto) {\n    const [data, count] = await this.prisma.$transaction([\n      this.prisma.audits.findMany({\n        skip: dto.pageSize * (dto.current - 1),\n        take: dto.pageSize,\n        where: {\n          auditType: dto.auditType,\n          auditId: dto.auditId,\n        },\n        orderBy: {\n          createdAt: 'desc',\n        },\n      }),\n      this.prisma.audits.count({\n        where: {\n          auditType: dto.auditType,\n          auditId: dto.auditId,\n        },\n      }),\n    ])\n    return {\n      total: count,\n      data,\n    }\n  }\n}\n","import { inject, injectable } from 'inversify'\n// import * as db from '@prisma/client-wms'\nimport { createZodDto } from 'nestjs-zod'\n// import { TableFilterSchema } from '@flowda-projects/prisma-wms'\nimport { PrismaClientSymbol } from '@flowda-projects/flowda-shared-types'\nimport { LoggerService } from '@nestjs/common'\nimport { z } from 'zod'\n\n// todo @flowda-projects/prisma-wms\n// 不能有关联关系，先手动 copy 出来\nexport const TableFilterSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  path: z.string(),\n  name: z.string(),\n  filterJSON: z.string(),\n})\n\nconst QueryTableFilterSchema = TableFilterSchema.pick({\n  path: true,\n})\n\nconst RemoveTableFilterSchema = TableFilterSchema.pick({\n  id: true,\n})\n\nexport interface SaveTableFilterDto {\n  path: string\n  filterJSON: string\n  name: string\n}\n\nexport class QueryTableFilterSchemaDto extends createZodDto(QueryTableFilterSchema) {}\n\nexport class RemoveTableFilterSchemaDto extends createZodDto(RemoveTableFilterSchema) {}\n\n@injectable()\nexport class TableFilterService {\n  private readonly logger\n\n  constructor(\n    // todo: 暂时先强类型，后续应该做成服务\n    @inject(PrismaClientSymbol) private prisma: any,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(TableFilterService.name)\n  }\n\n  save(dto: SaveTableFilterDto) {\n    return this.prisma.tableFilter.create({\n      data: dto,\n    })\n  }\n\n  remove(dto: RemoveTableFilterSchemaDto) {\n    return this.prisma.tableFilter.delete({\n      where: { id: dto.id },\n    })\n  }\n\n  query(dto: QueryTableFilterSchemaDto) {\n    return this.prisma.tableFilter.findMany({\n      where: {\n        isDeleted: false,\n        path: dto.path,\n      },\n      select: {\n        id: true,\n        path: true,\n        name: true,\n        filterJSON: true,\n      },\n    })\n  }\n}\n","/// <reference types=\"@types/express-serve-static-core\" />\n\nimport consola from 'consola'\nimport * as _ from 'radash'\nimport * as trpcExpress from '@trpc/server/adapters/express'\nimport { DefaultErrorShape, ProcedureType, TRPCError, Unwrap } from '@trpc/server'\nimport { HttpException } from '@nestjs/common'\nimport { repeat } from 'lodash'\nimport { ctxTenantSchemaDto, ctxUserSchemaDto, TCtx } from '@flowda-projects/flowda-shared-types'\nimport { createId } from '@paralleldrive/cuid2'\n\nexport const REQ_END =\n  '================================================ End ================================================\\n'\n\nexport const ERROR_END = '***************************************** ERROR END *****************************************'\n\nexport function logInputSerialize(object: any) {\n  consola.info('request args  :')\n  console.log(object)\n  console.log()\n}\n\nexport function logOutputSerialize(object: any) {\n  console.log()\n  if (object?.code < 0) {\n    consola.info('response error:')\n    console.log({\n      ...object,\n      message: '<...>',\n      data: {\n        ...object.data,\n        stack: '<...>',\n      },\n    })\n  } else {\n    consola.info('response data :')\n    console.log(object)\n  }\n\n  console.log(REQ_END + '\\n')\n}\n\nexport function logContext(opts: trpcExpress.CreateExpressContextOptions) {\n  const req = opts.req\n  console.log('=============================================== Start ===============================================')\n  consola.info('url           :', req.url.split('?')[0])\n  consola.info('from          :', req.headers['x-from'])\n}\n\nexport function getStatusKeyFromStatus(status: number) {\n  return JSONRPC2_TO_HTTP_STATUS[status] ?? 'INTERNAL_SERVER_ERROR'\n}\n\nexport function getErrorCodeFromKey(key: keyof typeof TRPC_ERROR_CODES_BY_KEY) {\n  return TRPC_ERROR_CODES_BY_KEY[key] ?? -32603\n}\n\nconst JSONRPC2_TO_HTTP_CODE: Record<keyof typeof TRPC_ERROR_CODES_BY_KEY, number> = {\n  PARSE_ERROR: 400,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  METHOD_NOT_SUPPORTED: 405,\n  TIMEOUT: 408,\n  CONFLICT: 409,\n  PRECONDITION_FAILED: 412,\n  PAYLOAD_TOO_LARGE: 413,\n  UNPROCESSABLE_CONTENT: 422,\n  TOO_MANY_REQUESTS: 429,\n  CLIENT_CLOSED_REQUEST: 499,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501,\n}\nconst JSONRPC2_TO_HTTP_STATUS = _.invert(JSONRPC2_TO_HTTP_CODE)\n\nconst TRPC_ERROR_CODES_BY_KEY = {\n  /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */\n  PARSE_ERROR: -32700,\n  /**\n   * The JSON sent is not a valid Request object.\n   */\n  BAD_REQUEST: -32600, // 400\n\n  // Internal JSON-RPC error\n  INTERNAL_SERVER_ERROR: -32603,\n  NOT_IMPLEMENTED: -32603,\n\n  // Implementation specific errors\n  UNAUTHORIZED: -32001, // 401\n  FORBIDDEN: -32003, // 403\n  NOT_FOUND: -32004, // 404\n  METHOD_NOT_SUPPORTED: -32005, // 405\n  TIMEOUT: -32008, // 408\n  CONFLICT: -32009, // 409\n  PRECONDITION_FAILED: -32012, // 412\n  PAYLOAD_TOO_LARGE: -32013, // 413\n  UNPROCESSABLE_CONTENT: -32022, // 422\n  TOO_MANY_REQUESTS: -32029, // 429\n  CLIENT_CLOSED_REQUEST: -32099, // 499\n} as const\n\nexport function logErrorStart(opts: { type: ProcedureType | 'unknown'; path: string | undefined; input: unknown }) {\n  consola.error('**************************************** ERROR START ****************************************')\n  consola.info(`procedure    :`, `${opts.path}.${opts.type}`)\n  consola.info(`input        :`)\n  console.log(opts.input)\n}\n\nexport function logErrorEnd(opts: { error: TRPCError }) {\n  consola.info(`message      :`, opts.error.message)\n  consola.info(`stack        :`, opts.error.stack)\n  consola.error(ERROR_END)\n}\n\nexport function transformHttpException(\n  opts: {\n    type: ProcedureType | 'unknown'\n    path: string | undefined\n    input: unknown\n    ctx: Unwrap<any> | undefined\n    shape: DefaultErrorShape\n  },\n  json: {\n    status: number\n    message: string\n    error: string\n    stack?: string\n  },\n) {\n  const shape = opts.shape\n  const key = getStatusKeyFromStatus(json.status)\n  const code = getErrorCodeFromKey(key)\n  consola.info(`cause`)\n  console.log(`    status     :`, json.status)\n  console.log(`    message    :`, json.message)\n  console.log(`    error      :`, json.error)\n  consola.info(`stack        :`, json.stack)\n  consola.error(ERROR_END)\n  return {\n    ...shape,\n    code, // 替换成 nestjs HttpException 对应的 trpc error code\n    // message // message 无需替代 throw new ConflictException('<message>') 第一个参数已经替代了 https://docs.nestjs.com/exception-filters#built-in-http-exceptions\n    data: {\n      ...shape.data,\n      ...{\n        code: key, // 替换成 HttpException 对应的 短字符\n        httpStatus: json.status, // 替换成 http status code\n        description: {\n          // 详情\n          procedure: `${opts.path}.${opts.type}`,\n          input: opts.input,\n          error: json.error,\n        },\n      },\n    },\n  }\n}\n\nexport function errorFormatter(\n  opts: {\n    type: ProcedureType | 'unknown'\n    path: string | undefined\n    input: unknown\n    ctx: Unwrap<any> | undefined\n    shape: DefaultErrorShape\n    error: TRPCError\n  },\n  handlers: {\n    log?: (input: { requestId: string; tenantId: number; userId: number; log: any }) => Promise<void>\n  },\n) {\n  let json = {\n    procedure: `${opts.path}.${opts.type}`,\n    input: opts.input,\n    diagnosis: opts.ctx._diagnosis,\n  }\n  const requestId = opts.ctx.requestId\n  const tenantId = opts.ctx.user?.tenantId || opts.ctx.tenant?.id\n  const userId = opts.ctx.user?.id\n  logErrorStart(opts)\n  consola.info(`tenantId     :`, tenantId)\n  consola.info(`userId       :`, userId)\n  if (Array.isArray(opts.ctx._diagnosis) && opts.ctx._diagnosis.length > 0) {\n    consola.info(`trace:`)\n    const msg = opts.ctx._diagnosis\n      .map((m: any[]) => {\n        const indent = repeat(' ', 4)\n        const msg = m.map(i => (typeof i === 'string' ? i : JSON.stringify(i))).join(', ')\n        return indent + msg\n      })\n      .join('\\n')\n    console.log(msg)\n    console.log()\n  }\n  // 如果是 nestjs HttpException\n  if (opts.error.cause instanceof HttpException) {\n    const json2 = {\n      status: opts.error.cause.getStatus(),\n      message: (<any>opts.error.cause.getResponse())['message'],\n      error: (<any>opts.error.cause.getResponse())['error'],\n      stack: opts.error.stack,\n    }\n    json = Object.assign(json, json2)\n    const ret = transformHttpException(opts, json2)\n    if (typeof handlers.log === 'function') {\n      handlers.log({\n        requestId,\n        tenantId,\n        userId,\n        log: json,\n      })\n    }\n    return ret\n  } else {\n    logErrorEnd(opts)\n    json = Object.assign(json, {\n      message: opts.error.message,\n      stack: opts.error.stack,\n    })\n    if (typeof handlers.log === 'function') {\n      handlers.log({\n        requestId,\n        tenantId,\n        userId,\n        log: json,\n      })\n    }\n    return opts.shape\n  }\n}\n\n// object => object 是默认值\n// https://github.com/trpc/trpc/blob/next/packages/client/src/internals/transformer.ts#L57\nexport const transformer = {\n  input: {\n    // on client\n    serialize: (object: any) => object,\n    // on server -> resolver\n    deserialize: (object: any) => {\n      logInputSerialize(object)\n      return object\n    },\n  },\n  output: {\n    // on server -> client\n    serialize: (object: any) => {\n      logOutputSerialize(object)\n      return object\n    },\n    // on client\n    deserialize: (object: any) => object,\n  },\n}\n\nexport function createContext(opts: trpcExpress.CreateExpressContextOptions) {\n  logContext(opts)\n  const requestId = createId()\n  opts.res.setHeader('x-request-id', requestId)\n  consola.info('x-request-id  :', requestId)\n  return {\n    req: opts.req,\n    res: opts.res,\n    requestId,\n    _diagnosis: [] as any[],\n    user: undefined as ctxUserSchemaDto | undefined,\n    tenant: undefined as ctxTenantSchemaDto | undefined,\n  }\n}\n\n/**\n * 一个简单的基于 trpc ctx 的 诊断工具 报错之后会记录手动埋的路径，方便排查错误\n */\nexport function diag(ctx: TCtx | undefined, ...message: any[]) {\n  ctx?._diagnosis != null && ctx._diagnosis.push(message)\n}\n","export * from './symbols'\nexport * from './types'\nexport * from './zods'\n","export const PrismaSchemaServiceSymbol = Symbol.for('PrismaSchemaService')\nexport const SchemaTransformerSymbol = Symbol.for('SchemaTransformer')\nexport const PrismaUtilsSymbol = Symbol.for('PrismaUtils')\nexport const DataServiceSymbol = Symbol.for('DataService')\nexport const SchemaServiceSymbol = Symbol.for('SchemaService')\nexport const DynamicTableSchemaTransformerSymbol = Symbol.for('DynamicTableSchemaTransformer')\nexport const FlowdaTrpcClientSymbol = Symbol.for('FlowdaTrpcClient')\nexport const FlowdaGatewayTrpcClientSymbol = Symbol.for('FlowdaGatewayTrpcClient')\nexport const PrismaClientSymbol = Symbol('PrismaClient')\n/**\n * getServices 方法会将 inversify module 转换成 nestjs module，这样 nestjs controller 就可以使用了\n * 所以，注意：如果不需要给 controller 使用，则不需要 bind\n */\nexport const ServiceSymbol = Symbol('Service')\nexport const APISymbol = Symbol('API')\nexport const URLSymbol = Symbol.for('URL')\nexport const ENVSymbol = Symbol.for('ENV')\nexport const PrismaZodSchemaSymbol = Symbol.for('PrismaZodSchema')\nexport const CustomZodSchemaSymbol = Symbol.for('CustomZodSchema')\nexport const K3CloudIdentifyInfoSymbol = Symbol.for('K3CloudIdentifyInfo')\nexport const COSSymbol = Symbol('COS')\nexport const SmsClientSymbol = Symbol.for('SmsClient')\nexport const WechatOAuthSymbol = Symbol.for('WechatOAuth')\nexport const DynamicTableDataServiceSymbol = Symbol.for('DynamicTableDataService')\nexport const DynamicTableDefServiceSymbol = Symbol.for('DynamicTableDefService')\nexport const MenuServiceSymbol = Symbol.for('MenuService')\nexport const WechatpayNodeV3Symbol = Symbol.for('WechatpayNodeV3Symbol')\nexport const WechatpayNodeV3FactorySymbol = Symbol.for('WechatpayNodeV3FactorySymbol')\n","export type TFilterFormValue =\n  | string\n  | {\n      column: string | undefined\n      condition: string | undefined\n      value: string | undefined\n    }\n\nexport enum EPlan {\n  Free = 1,\n  VIP = 2,\n}\n\nexport const Serial_Min = 10001\nexport const Serial_Max = 99999\n\nexport type TCtx = { _diagnosis: any[] }\n","// 从 https://github.com/risen228/nestjs-zod 提取\n// 提取的原因是去掉 nestjs 等 node 依赖\nimport { ZodSchema, ZodTypeDef } from 'zod'\n\nexport interface ZodDto<TOutput = any, TDef extends ZodTypeDef = ZodTypeDef, TInput = TOutput> {\n  new (): TOutput\n\n  isZodDto: true\n  schema: ZodSchema<TOutput, TDef, TInput>\n\n  create(input: unknown): TOutput\n}\n\nexport function createZodDto<TOutput = any, TDef extends ZodTypeDef = ZodTypeDef, TInput = TOutput>(\n  schema: ZodSchema<TOutput, TDef, TInput>,\n) {\n  class AugmentedZodDto {\n    public static isZodDto = true\n    public static schema = schema\n\n    public static create(input: unknown) {\n      return this.schema.parse(input)\n    }\n  }\n\n  return AugmentedZodDto as unknown as ZodDto<TOutput, TDef, TInput>\n}\n","import { z } from 'zod'\nimport { createZodDto } from './zod-utils'\n\nexport const selectOptionSchema = z.object({\n  value: z.union([z.string(), z.number()]),\n  label: z.string(),\n})\n\nexport const resourceAssociationSchema = z.object({\n  foreign_key: z.string(),\n  model_name: z.string(),\n  primary_key: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  display_name: z.string(),\n  schema_name: z.string(),\n})\n\nexport const resourceColumnSchema = z.object({\n  name: z.string(),\n  access_type: z.enum(['read_only']).optional(),\n  column_type: z.enum(['reference', 'string', 'tag', 'integer', 'datetime', 'textarea', 'boolean']),\n  prisma: z.boolean().optional(),\n  format: z\n    .object({\n      select_options: selectOptionSchema.array(),\n    })\n    .optional(),\n  reference: z.object({\n    model_name: z.string(),\n    primary_key: z.string(),\n    display_name: z.string(),\n    display_column: z.union([z.string(), z.array(z.string()), z.undefined()]),\n    'x-relationField': z.string(),\n    'x-onSoftDelete': z.string(),\n    'x-unique': z.boolean().optional(),\n  }),\n  display_name: z.string().optional(),\n  validators: z.array(\n    z.union([\n      z.object({\n        required: z.boolean(),\n      }),\n      z.object({\n        format: z.string(),\n        message: z.string(),\n      }),\n    ]),\n  ),\n})\n\nexport const resourceSchema = z.object({\n  namespace: z.string().optional(),\n  prisma: z.boolean().optional(),\n  is_dynamic: z.boolean().optional(),\n  schema_name: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  primary_key: z.string(),\n  custom: z.any(),\n  display_column: z.union([z.string(), z.array(z.string()), z.undefined()]),\n  display_name: z.string().nullable(),\n  display_primary_key: z.boolean(),\n  searchable_columns: z.array(z.string()).optional(),\n  columns: resourceColumnSchema.array(),\n  associations: resourceAssociationSchema.array(),\n  __jsonschema: z.any(),\n})\n\nexport const agFilterInnerSchema = z.object({\n  filterType: z.enum(['text', 'number']),\n  // filterType: z.string(),\n  type: z.enum(['contains', 'equals']),\n  // type: z.string(),\n  filter: z.union([z.string(), z.number()]),\n})\n\nexport const agFilterInner2Schema = z.object({\n  filterType: z.enum(['text']),\n  // filterType: z.string(),\n  operator: z.enum(['OR', 'AND']),\n  // operator: z.string(),\n  conditions: z.array(agFilterInnerSchema),\n})\n\nexport const agFilter1Schema = z.record(agFilterInnerSchema)\nexport type TAgFilter1Schema = z.infer<typeof agFilter1Schema>\nexport const agFilter2Schema = z.record(agFilterInner2Schema)\n\nexport const agFilterSchema = z\n  .record(agFilterInnerSchema.or(agFilterInner2Schema))\n  .or(z.object({ _ref: z.string().optional() }))\nexport type TAgFilterSchema = z.infer<typeof agFilterSchema>\n\nexport const agSortSchema = z.array(\n  z.object({\n    colId: z.string(),\n    sort: z.enum(['asc', 'desc']),\n  }),\n)\nexport type TAgSortSchema = z.infer<typeof agSortSchema>\n\nexport const prismaFilterSchema = z.object({\n  OR: z.array(z.record(z.record(z.enum(['contains']), z.string()))),\n})\nexport type IPrismaFilterSchema = z.infer<typeof prismaFilterSchema>\n\nexport type IResourceSchema = z.infer<typeof resourceSchema>\nexport type IResourceAssociationSchema = z.infer<typeof resourceAssociationSchema>\nexport type ISchemaSelectOption = z.infer<typeof selectOptionSchema>\nexport type IResourceColumnSchema = z.infer<typeof resourceColumnSchema>\n\nexport const registerSchema = z.object({\n  username: z.string(),\n  password: z.string(),\n  tenantId: z.number(),\n})\n\nexport class RegisterDto extends createZodDto(registerSchema) {}\n\nexport const accountExistsSchema = z.object({\n  username: z.string(),\n  tenantName: z.string(),\n})\n\nexport class AccountExistsSchemaDto extends createZodDto(accountExistsSchema) {}\n\nexport const validateSchema = z.object({\n  username: z.string(),\n  password: z.string(),\n})\n\nexport class validateSchemaDto extends createZodDto(validateSchema) {}\n\nexport const getTenantByNameSchema = z.object({\n  tenantName: z.string(),\n})\n\nexport class GetTenantByNameSchemaDto extends createZodDto(getTenantByNameSchema) {}\n\nexport const findByUnionIdAndTenantIdSchema = z.object({\n  unionid: z.string(),\n  tenantId: z.number(),\n})\n\nexport class FindByUnionIdAndTenantIdSchemaDto extends createZodDto(findByUnionIdAndTenantIdSchema) {}\n\nexport const registerByUnionIdSchema = z.object({\n  unionid: z.string(),\n  tenantId: z.number(),\n})\n\nexport class RegisterByUnionIdSchemaDto extends createZodDto(registerByUnionIdSchema) {}\n\nexport const resetPasswordSchema = z.object({\n  userId: z.number(),\n  tenantId: z.number(),\n  password: z.string(),\n})\n\nexport class resetPasswordSchemaDto extends createZodDto(resetPasswordSchema) {}\n\nexport const verifyMobileSchema = z.object({\n  uid: z.number(),\n  tid: z.number(),\n  mobile: z.string(),\n  code: z.string(),\n  slug: z.string(),\n})\n\nexport class verifyMobileSchemaDto extends createZodDto(verifyMobileSchema) {}\n\nexport const tenantJwtPayloadSchema = z.object({\n  tid: z.number(),\n})\n\nexport const userJwtPayloadSchema = z.object({\n  uid: z.number(),\n  tid: z.number(),\n})\n\nexport class userJwtPayloadSchemaDto extends createZodDto(userJwtPayloadSchema) {}\n\nexport const customerPreSignupSchema = z.object({\n  email: z.string(),\n})\n\nexport class customerPreSignupSchemaDto extends createZodDto(customerPreSignupSchema) {}\n\nexport class customerPreSignupTenantJwtPayloadSchemaDto extends createZodDto(\n  customerPreSignupSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const customerSignupSchema = z.object({\n  email: z.string(),\n  verifyCode: z.string(),\n  password: z.string(),\n})\n\nexport class customerSignupSchemaDto extends createZodDto(customerSignupSchema) {}\n\nexport class customerSignupTenantJwtPayloadSchemaDto extends createZodDto(\n  customerSignupSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const wxGetAccessTokenRes = z.object({\n  access_token: z.string(),\n  expires_in: z.string(),\n  refresh_token: z.string(),\n  openid: z.string(),\n  scope: z.string(),\n  unionid: z.string(),\n  create_at: z.string(),\n})\nexport type TWxGetAccessTokenRes = z.infer<typeof wxGetAccessTokenRes>\n\nexport const wxGetUserRes = z.object({\n  openid: z.string(),\n  nickname: z.string(),\n  sex: z.number(),\n  headimgurl: z.string(),\n  unionid: z.string(),\n  language: z.string(),\n  city: z.string(),\n  province: z.string(),\n  country: z.string(),\n  privilege: z.array(z.string()),\n})\nexport type TWxGetUser = z.infer<typeof wxGetUserRes>\n\nexport const wxValidateUserSchema = z.object({\n  code: z.string(),\n})\n\nexport class wxValidateUserTenantJwtPayloadSchemaDto extends createZodDto(\n  wxValidateUserSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const generateRecoveryCodeSchema = z.object({\n  email: z.string(),\n})\n\nexport class generateRecoveryCodeSchemaDto extends createZodDto(generateRecoveryCodeSchema) {}\n\nexport class generateRecoveryCodeTenantJwtSchemaDto extends createZodDto(\n  generateRecoveryCodeSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport class GenerateRecoveryCodeDto extends createZodDto(\n  generateRecoveryCodeSchema.merge(\n    z.object({\n      appId: z.string(),\n    }),\n  ),\n) {}\n\nexport const resetPasswordWithRecoveryCodeSchema = z.object({\n  recoveryCode: z.string(),\n  password: z.string(),\n})\n\nexport class resetPasswordWithRecoveryCodeSchemaDto extends createZodDto(resetPasswordWithRecoveryCodeSchema) {}\n\nexport class resetPasswordWithRecoveryCodeTenantJwtSchemaDto extends createZodDto(\n  resetPasswordWithRecoveryCodeSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport class ResetPasswordDto extends createZodDto(\n  resetPasswordWithRecoveryCodeSchema.merge(\n    z.object({\n      appId: z.string(),\n    }),\n  ),\n) {}\n\nexport const productCreateManyItemSchema = z.object({\n  name: z.string(),\n  price: z.number(),\n  productType: z.string(),\n  amount: z.number().optional(),\n  plan: z.number().nullable().optional(),\n  extendedDescriptionData: z.any().optional(),\n  restricted: z.number().nullable().optional(),\n  fileSize: z.string().nullable().optional(),\n  storeDuration: z.number().nullable().optional(),\n  hasAds: z.string().nullable().optional(),\n  tecSupport: z.string().nullable().optional(),\n})\n\nexport class SdkProductCreateManyItemDto extends createZodDto(productCreateManyItemSchema) {}\n\nexport const updatePaidProfileSchema = z.object({\n  product: z.object({\n    productType: z.any(),\n    plan: z.number().nullable(),\n    amount: z.number().nullable(),\n    validityPeriod: z.number().nullable(),\n  }),\n})\n\nexport const updateFreeProfileSchema = z.object({\n  product: z.object({\n    productType: z.any(),\n    plan: z.number().nullable(),\n    amount: z.number().nullable(),\n    validityPeriod: z.number().nullable(),\n  }),\n})\n\nexport const wxPayQuerySchema = z.object({\n  status: z.number(),\n  trade_state: z.string(),\n  transaction_id: z.string(),\n  payer: z.object({\n    openid: z.string(),\n  }),\n})\n\nexport type TWxPayQuery = z.infer<typeof wxPayQuerySchema>\n\nexport const fwhLoginSchema = z.object({\n  code: z.string(),\n})\n\nexport class fwhLoginTenantJwtPayloadSchemaDto extends createZodDto(fwhLoginSchema.merge(tenantJwtPayloadSchema)) {}\n\nexport const amountUpdateSchema = z.object({\n  action: z.enum(['decrement']).optional(),\n  count: z.number().optional(),\n})\n\nexport class amountUpdateSchemaDto extends createZodDto(amountUpdateSchema) {}\n\nexport class amountUpdateUserJwtPayloadSchemaDto extends createZodDto(amountUpdateSchema.merge(userJwtPayloadSchema)) {}\n\nexport const createOrderSchema = z.object({\n  productId: z.number(),\n  openid: z.string().optional(),\n})\n\nexport class SdkCreateOrderDto extends createZodDto(createOrderSchema) {}\n\nexport class createOrderUserJwtPayloadSchemaDto extends createZodDto(createOrderSchema.merge(userJwtPayloadSchema)) {}\n\nexport const transactionsNativeSchema = z.object({\n  orderId: z.string(),\n  desc: z.string(),\n  total: z.number(),\n  openid: z.string().optional(),\n})\n\nexport class transactionsNativeSchemaDto extends createZodDto(transactionsNativeSchema) {}\n\nexport const createOrderJSAPISchema = createOrderSchema.extend({ openid: z.string() })\n\nexport class SdkCreateOrderInJSAPIDto extends createZodDto(createOrderJSAPISchema) {}\n\nexport const createQuickOrderSchema = createOrderSchema.extend({\n  // 快捷创建需要客户端提供一个匿名 Token\n  anonymousCustomerToken: z.string(),\n})\n\nexport class SdkCreateQuickOrderDto extends createZodDto(createQuickOrderSchema) {}\n\nexport class createQuickOrderTenantJWTPayloadSchemaDto extends createZodDto(\n  createQuickOrderSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const appCreateV4Schema = z.object({\n  displayName: z.string(),\n})\n\nexport class appCreateV4SchemaDto extends createZodDto(appCreateV4Schema) {}\n\nexport const validateTenantSchema = z.object({\n  name: z.string(),\n  password: z.string(),\n})\n\nexport class validateTenantSchemaDto extends createZodDto(validateTenantSchema) {}\n\nexport const validateByEmailSchema = z.object({\n  email: z.string(),\n  tenantId: z.number(),\n  password: z.string(),\n})\n\nexport class validateByEmailSchemaDto extends createZodDto(validateByEmailSchema) {}\n\nexport const _resetTenantPasswordSchema = z.object({\n  id: z.number(),\n})\n\nexport class _resetTenantPasswordSchemaDto extends createZodDto(_resetTenantPasswordSchema) {}\n\nexport const customerExtendDataSchema = z\n  .object({\n    biz: z.string(),\n    icp: z.string().nullable(),\n    contact: z\n      .object({\n        email: z.string(),\n        phone: z.string(),\n        address: z.string(),\n      })\n      .partial(),\n    companyName: z.string(),\n    description: z.string(),\n  })\n  .partial()\n\nexport class customerExtendDataSchemaDto extends createZodDto(customerExtendDataSchema) {}\n\nexport const kanzhunDetailSchema = z\n  .object({\n    公司全称: z.string(),\n    联系方式: z.array(z.string()),\n    地址: z.string(),\n    简介: z.string(),\n  })\n  .partial()\n\nexport class kanzhunDetailSchemaDto extends createZodDto(kanzhunDetailSchema) {}\n\nexport const kanzhunItemSchema = z\n  .object({\n    id: z.number(),\n    name: z.string(),\n    detail: kanzhunDetailSchema,\n  })\n  .partial()\n\nexport class kanzhunItemSchemaDto extends createZodDto(kanzhunItemSchema) {}\n\nexport const kanzhunDataSchema = z\n  .object({\n    date: z.string(),\n    data: z.array(kanzhunItemSchema),\n  })\n  .partial()\n\nexport const sendSmsVerifyCodeSchema = z.object({ mobile: z.string() })\n\nexport class sendSmsVerifyCodeSchemaDto extends createZodDto(sendSmsVerifyCodeSchema) {}\n\nexport const refreshTokenSchema = z.object({ rt: z.string() })\n\nexport class refreshTokenSchemaDto extends createZodDto(refreshTokenSchema) {}\n\nexport const ctxTenantSchema = z.object({\n  id: z.number(),\n  name: z.string(),\n})\n\nexport class ctxTenantSchemaDto extends createZodDto(ctxTenantSchema) {}\n\nexport const ctxUserSchema = z.object({\n  id: z.number(),\n  tenantId: z.number(),\n  username: z.string(),\n})\n\nexport class ctxUserSchemaDto extends createZodDto(ctxUserSchema) {}\n","import { ContainerModule, interfaces } from 'inversify'\nimport { z } from 'zod'\n\nimport {\n  DataServiceSymbol,\n  DynamicTableSchemaTransformerSymbol,\n  PrismaSchemaServiceSymbol,\n  PrismaUtilsSymbol,\n  SchemaServiceSymbol,\n  SchemaTransformerSymbol,\n  ServiceSymbol,\n} from '@flowda-projects/flowda-shared-types'\nimport { PrismaSchemaService } from './services/schema/prismaSchema.service'\nimport { DataService } from './services/data/data.service'\nimport { SchemaService } from './services/schema/schema.service'\nimport { SchemaTransformer } from './services/schema/schemaTransformer'\nimport { PrismaUtils } from './services/schema/prismaUtils'\nimport { bindServiceSymbol } from './utils/bindService'\nimport { DynamicTableSchemaTransformer } from './services/schema/dynamicTableSchemaTransformer'\n\nexport const flowdaSharedModule = new ContainerModule((bind: interfaces.Bind) => {\n  bindServiceSymbol(bind, ServiceSymbol, DataServiceSymbol, DataService)\n  bindServiceSymbol(bind, ServiceSymbol, SchemaServiceSymbol, SchemaService)\n\n  bind<PrismaSchemaService>(PrismaSchemaServiceSymbol).to(PrismaSchemaService).inSingletonScope()\n  bind<PrismaUtils>(PrismaUtilsSymbol).to(PrismaUtils).inSingletonScope()\n\n  bind<SchemaTransformer>(SchemaTransformerSymbol).to(SchemaTransformer).inTransientScope()\n  bind<interfaces.Factory<SchemaTransformer>>('Factory<SchemaTransformer>').toFactory<SchemaTransformer, [any]>(\n    context => {\n      return (z: z.AnyZodObject) => {\n        const transformer = context.container.get<SchemaTransformer>(SchemaTransformerSymbol)\n        transformer.setZodType(z)\n        return transformer\n      }\n    },\n  )\n  bind<DynamicTableSchemaTransformer>(DynamicTableSchemaTransformerSymbol)\n    .to(DynamicTableSchemaTransformer)\n    .inTransientScope()\n})\n","export * from './flowdaShared.module'\n\nexport * from './utils/bindService'\nexport * from './utils/matchPath'\nexport * from './utils/getServices'\nexport * from './utils/browser-log-utils'\nexport * from './utils/ag-grid-utils'\nexport * from './utils/schema-utils'\nexport * from './utils/custom-error'\nexport * from './utils/dayjs-utils'\n\nexport * from './services/schema/meta'\nexport * from './services/schema/schemaTransformer'\nexport * from './services/schema/dynamicTableSchemaTransformer'\nexport * from './services/schema/schema.service'\nexport * from './services/data/data.service'\n\nexport * from '@flowda-projects/flowda-shared-types'\n","import { inject, injectable } from 'inversify'\nimport * as _ from 'radash'\nimport { lowerFirst } from 'lodash'\nimport type { LoggerService } from '@nestjs/common'\nimport type { PrismaSchemaService } from '../schema/prismaSchema.service'\nimport { PrismaClientSymbol, PrismaSchemaServiceSymbol } from '@flowda-projects/flowda-shared-types'\n// import * as db from '@prisma/client-cms_admin'\n\n/*\ntodo: 增加 reference_type 区分是如何做 nest\ne.g. Customer#weixinProfile 和 Order#customerId 的 nest 查询有区别\n */\n@injectable()\nexport class DataService {\n  private readonly logger\n\n  constructor(\n    // todo: prisma 要不要强类型\n    // @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject(PrismaClientSymbol) private prisma: any,\n    @inject(PrismaSchemaServiceSymbol) private prismaSchemaService: PrismaSchemaService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(DataService.name)\n  }\n\n  async get(reqUser: any, pathname: string, query: Record<string, any>) {\n    this.logger.log(`get(reqUser ${JSON.stringify(reqUser)}, path: ${pathname}, query: ${JSON.stringify(query)})`)\n    const findParamRet = await this.prismaSchemaService.toFindParam(pathname, query)\n    if (_.isEmpty(findParamRet)) {\n      return {}\n    }\n    const { resource, action, param } = findParamRet\n    if (action === 'findUnique') {\n      const ret = await this.prisma[resource][action](param)\n      if (!ret || ret.isDeleted) return {}\n      return _.omit(ret, ['isDeleted']) as any\n    }\n    if (action === 'findMany') {\n      const [data, count] = await this.prisma.$transaction([\n        this.prisma[resource][action](param),\n        this.prisma[resource].count({ where: param.where }),\n      ])\n      return {\n        pagination: {\n          total: count,\n        },\n        data,\n      }\n    }\n  }\n\n  async put(reqUser: any, path: string, values: any) {\n    this.logger.log(`put(reqUser ${JSON.stringify(reqUser)}), path: ${path}, values: ${JSON.stringify(values)}`)\n    const updateParamRet = await this.prismaSchemaService.toUpdateParam(path, values)\n    const { resource, param } = updateParamRet\n    const prevRet = await this.prisma[resource].findUnique({\n      where: {\n        id: param.where.id,\n      },\n      select: _.mapValues(param.data, item => true),\n    })\n    const auditChanges = Object.keys(param.data).reduce<Record<string, [string, string]>>((acc, k) => {\n      acc[k] = [prevRet[k], param.data[k]]\n      return acc\n    }, {})\n    const ret = await this.prisma[resource].update(param)\n    const auditInfo = {\n      auditId: param.where.id as number,\n      auditType: resource,\n      userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n      username: reqUser['user_name'],\n      action: 'update',\n      auditChanges: JSON.stringify(auditChanges),\n      version: 0,\n    }\n    this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n    try {\n      await this.prisma.audits.create({\n        data: auditInfo,\n      })\n    } catch (e) {\n      this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n    }\n    return ret\n  }\n\n  async post(reqUser: any, path: string, values: any) {\n    this.logger.log(`[post] reqUser ${JSON.stringify(reqUser)}, path: ${path}, query: ${JSON.stringify(values)})`)\n    const createParamRet = await this.prismaSchemaService.toCreateParam(path, values)\n    const { resource, param } = createParamRet\n\n    if (createParamRet['x-unique']) {\n      const ref = createParamRet['x-unique']\n      const refId = values[ref.name!]\n      const refModelName = ref.reference!.model_name\n      const refData = await this.prisma[lowerFirst(refModelName)].findUnique({\n        where: {\n          id: refId,\n        },\n        include: {\n          [resource]: true,\n        },\n      })\n      const id = refData[resource].id\n      const ret = await this.prisma[resource].update({\n        where: {\n          id: id,\n        },\n        data: {\n          ...param.data,\n          ...{\n            isDeleted: false,\n          },\n        },\n      })\n\n      const auditInfo = {\n        auditId: id,\n        auditType: resource,\n        userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n        username: reqUser['user_name'],\n        action: 'soft_delete_revert',\n        auditChanges: JSON.stringify(param.data),\n        version: 0,\n      }\n      this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n      try {\n        await this.prisma.audits.create({\n          data: auditInfo,\n        })\n      } catch (e) {\n        this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n      }\n      return ret\n    } else {\n      const ret = await this.prisma[resource].create(param)\n      const auditInfo = {\n        auditId: ret.id,\n        auditType: resource,\n        userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n        username: reqUser['user_name'],\n        action: 'create',\n        auditChanges: JSON.stringify(param.data),\n        version: 0,\n      }\n      this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n      try {\n        await this.prisma.audits.create({\n          data: auditInfo,\n        })\n      } catch (e) {\n        this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n      }\n\n      return ret\n    }\n  }\n\n  async remove(reqUser: any, pathname: string) {\n    this.logger.log(`[remove] reqUser ${JSON.stringify(reqUser)}, path: ${pathname}`)\n    const assDelStrategy = await this.prismaSchemaService.getAssociationDeleteStrategy(pathname)\n    const { resource, param } = await this.prismaSchemaService.toRemoveParam(pathname)\n    for (const k of Object.keys(assDelStrategy)) {\n      const ass = assDelStrategy[k]\n      if (ass['x-onSoftDelete'] === 'Restrict') {\n        const ret = await this.prisma[lowerFirst(k)].findMany({\n          where: {\n            isDeleted: false,\n            [ass.name]: param.where.id,\n          },\n        })\n        if (ret.length > 0) {\n          throw new Error(`删除失败, 关联的<${ass.relatedDisplayName}>不为空`)\n        }\n      }\n    }\n\n    const prevRet = await this.prisma[resource].findUnique({\n      where: {\n        id: param.where.id,\n      },\n    })\n    const ret = await this.prisma[resource].update(param)\n\n    const auditInfo = {\n      auditId: param.where.id,\n      auditType: resource,\n      userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n      username: reqUser['user_name'],\n      action: 'soft_delete',\n      auditChanges: JSON.stringify(prevRet),\n      version: 0,\n    }\n    this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n    try {\n      await this.prisma.audits.create({\n        data: auditInfo,\n      })\n    } catch (e) {\n      this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n    }\n    return ret\n  }\n}\n","import type { LoggerService } from '@nestjs/common'\nimport { inject, injectable } from 'inversify'\nimport { toModelName, toPath, toSchemaName } from '../../utils/matchPath'\n\n@injectable()\nexport class DynamicTableSchemaTransformer {\n  private readonly logger: LoggerService\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(DynamicTableSchemaTransformer.name)\n  }\n\n  transform(input: any) {\n    const cols = input.dynamicTableDefColumns.map((c: any) => {\n      return Object.assign(\n        {\n          name: c.name,\n          column_type: c.type,\n        },\n        c.extendedSchema,\n      )\n    })\n    return Object.assign(\n      {\n        name: toModelName(input.name),\n        slug: toPath(input.name),\n        schema_name: toSchemaName(input.name),\n        primary_key: 'id',\n        columns: cols,\n        prisma: false,\n        is_dynamic: true,\n      },\n      input.extendedSchema,\n    )\n  }\n}\n","import { z } from 'zod'\n// motor-admin JSON.parse(document.getElementById('app').dataset.schema)\n// todo: 目前尽量在后端定义，后续可以再开辟一条链路来储存 schema，并进行 merge\n// 当然如果后端定义链路保留，应该做成 decorator\n\nexport function meta(values: any) {\n  return z.unknown().optional().describe(JSON.stringify(values))\n}\n","import { LoggerService } from '@nestjs/common'\nimport { inject, injectable } from 'inversify'\nimport * as qs from 'qs'\nimport { isLikeNumber, matchPath, toModelName } from '../../utils/matchPath'\nimport type { SchemaService } from './schema.service'\nimport { forEach, isUndefined, omitBy, set } from 'lodash'\nimport * as _ from 'radash'\nimport type {\n  IPrismaFilterSchema,\n  IResourceSchema,\n  TAgFilterSchema,\n  TFilterFormValue,\n} from '@flowda-projects/flowda-shared-types'\nimport {\n  agFilter1Schema,\n  agFilter2Schema,\n  PrismaUtilsSymbol,\n  SchemaServiceSymbol,\n} from '@flowda-projects/flowda-shared-types'\nimport type { PrismaUtils } from './prismaUtils'\n\n@injectable()\nexport class PrismaSchemaService {\n  private readonly logger\n\n  constructor(\n    @inject(PrismaUtilsSymbol) private prismaUtils: PrismaUtils,\n    @inject(SchemaServiceSymbol) private schemaService: SchemaService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(PrismaSchemaService.name)\n  }\n\n  toPrismaSelect(fields: string | undefined, theResourceSchema: IResourceSchema) {\n    let fieldsArr: string[] = []\n    if (fields == null) {\n      fieldsArr = theResourceSchema.columns!.filter(c => c.prisma !== false).map(c => c.name!)\n    } else {\n      fieldsArr = fields.split(',')\n    }\n    return fieldsArr.reduce((acc: Record<string, boolean>, cur: string) => {\n      acc[cur] = true\n      return acc\n    }, {})\n  }\n\n  async toFindParam(\n    pathname: string,\n    query: qs.ParsedQs,\n  ): Promise<\n    | {\n        action: 'findUnique' | 'findMany'\n        resource: string\n        param: any\n      }\n    | Record<string, never>\n  > {\n    // if (!query['fields']) {\n    //   throw new Error('No query fields')\n    // }\n\n    this.logger.debug!(`[toFindParam] pathname: ${pathname}, query: ${JSON.stringify(query)}`)\n\n    const parsedPath = matchPath(pathname)\n    if (parsedPath.length === 0) return Promise.resolve({})\n\n    const { resource, id, resourceSchema } = parsedPath[parsedPath.length - 1]\n\n    const schemaCache = await this.schemaService.getSchemaCache()\n    const theResourceSchema = schemaCache[resourceSchema]\n\n    let action: 'findUnique' | 'findMany'\n    let param = {}\n\n    const queryFields = query['fields'] as qs.ParsedQs\n    const fields = this.toPrismaSelect(queryFields && (queryFields[resource] as string | undefined), theResourceSchema)\n\n    const include: Record<string, any> = {}\n\n    if (typeof query['include'] === 'string' && query['include'] !== '') {\n      query['include'].split(',').forEach((inc: string) => {\n        // this.logger.log(`[toFindParam] parse include ${inc}`)\n        const refSelect: any = this.getRefSelect(schemaCache, theResourceSchema, inc)\n        const selectRet = this.toPrismaSelect(queryFields[inc] as string, theResourceSchema)\n        include[inc] = {\n          // todo: 似乎 prisma nest select 不支持 order by 只有 include 支持，但是 include 不支持 nest select fields\n          // orderBy: [{ createdAt: 'desc' }],\n          select: { ...selectRet, ...refSelect },\n        }\n      })\n    }\n\n    if (id != null) {\n      action = 'findUnique'\n      const id2 = await this.prismaUtils.parseId(resource, id)\n      param = {\n        where: {\n          id: id2,\n        },\n        select: { ...fields, ...include, ...{ isDeleted: true } },\n      }\n    } else {\n      const filter = this.convertQueryToPrismaFilter(schemaCache, theResourceSchema, query)\n\n      const orderBy = this.convertToOrderBy(query)\n\n      action = 'findMany'\n      const skip = query['current'] ? (Number(query['current']) - 1) * Number(query['pageSize']) : undefined\n      const take = query['pageSize'] ? Number(query['pageSize']) : undefined\n      if (parsedPath.length > 1) {\n        // 情况1：根据前一个 resource id 搜索 list\n        const pResource = parsedPath[parsedPath.length - 2]\n        // this.logger.log(`${resource}.findMany`)\n        param = omitBy(\n          {\n            where: {\n              ...{\n                [`${pResource.resource}Id`]: pResource.id,\n                isDeleted: false,\n              },\n              ...filter,\n            },\n            orderBy,\n            skip,\n            take,\n            select: { ...fields, ...include },\n          },\n          isUndefined,\n        )\n      } else {\n        param = omitBy(\n          {\n            where: {\n              ...{\n                isDeleted: false,\n              },\n              ...filter,\n            },\n            orderBy,\n            skip,\n            take,\n            select: { ...fields, ...include },\n          },\n          isUndefined,\n        )\n      }\n    }\n    const ret = {\n      action,\n      param,\n      resource,\n    }\n    this.logger.debug!(`[toFindParam] ret ${JSON.stringify(ret)}`)\n    return ret\n  }\n\n  convertToOrderBy(query: any) {\n    let sort: string\n    if (query.sort != null) {\n      sort = query.sort\n    } else {\n      return [{ createdAt: 'desc' }]\n    }\n\n    if (sort[0] === '-') {\n      return [{ [sort.slice(1)]: 'desc' }]\n    } else {\n      return [{ [sort]: 'asc' }]\n    }\n  }\n\n  /**\n   * 根据 resource 的 schema 中 columns 是 ref， e.g. resource(Receipt) 收货单关联的 ref(partVersion)\n   * 找到对应 refSchema 的 display_column 中的又 include e.g. display_column(partId)，得到 nest select\n   * { [include: partVersion]: { select { partId: true, [partId x-relationField: part]: { select: { id: true, [display_column*]: true} }}} }\n   *\n   * todo: 现在是根据 display_column 里如果有 ref 来计算的，后续可以改成所有 ref 都默认向下搜索一层\n   */\n  getRefSelect(schemaCache: Record<string, IResourceSchema>, resourceSchema: IResourceSchema, includeRef: string) {\n    const refSelect: any = {}\n    if (resourceSchema && resourceSchema.columns) {\n      // e.g. inc partVersion\n      const refColumn = resourceSchema.columns.find(\n        col => col.column_type === 'reference' && col.reference!['x-relationField'] === includeRef,\n      )\n      if (refColumn) {\n        // e.g. model_name PartVersion\n        // e.g. display_column partId,version\n        const { model_name, display_column } = refColumn.reference!\n        // e.g. PartVersionResourceSchema\n        const refSchema = schemaCache[model_name + 'ResourceSchema']\n        let displayCols: string[] = []\n        if (typeof display_column === 'string') {\n          displayCols = [display_column]\n        } else {\n          displayCols = (display_column as string[]) || []\n        }\n        displayCols.forEach(item => {\n          // e.g. item partId\n          const disCol = refSchema.columns!.find(col => col.name === item)\n          if (disCol == null) {\n            throw new Error(`schema '${model_name}', wrong display column '${item}'`)\n          } else if (disCol.column_type === 'reference') {\n            // e.g. name\n            const display_column = disCol!.reference!.display_column!\n            const relationField = disCol!.reference!['x-relationField']\n\n            let display_column2: string[]\n            if (Array.isArray(display_column)) {\n              display_column2 = display_column\n            } else {\n              display_column2 = [display_column]\n            }\n            const select = display_column2.reduce((acc, cur) => {\n              acc[cur] = true\n              return acc\n            }, {} as Record<string, boolean>)\n\n            refSelect[relationField] = {\n              select: Object.assign(\n                {\n                  id: true,\n                },\n                select,\n              ),\n            }\n          }\n        })\n      }\n    }\n    return refSelect\n  }\n\n  /*\n    [\n      {\n        type: { eq: 'UNSCHEDULE' },\n        status: { eq: 'DONE' },\n      },\n    ]\n   */\n  convertQueryToPrismaFilter(\n    schemaCache: Record<string, IResourceSchema>,\n    resourceSchema: IResourceSchema,\n    query: any,\n  ) {\n    if (query.filterModel) {\n      return this.convertAgFilterModelToPrismaFilter(query.filterModel)\n    } else if (query.filter && Array.isArray(query.filter) && query.filter.length > 0) {\n      // console.log(query.filter)\n      const filter = query.filter as TFilterFormValue[]\n      const andIdx = filter.findIndex(item => typeof item === 'string' && item === 'AND')\n      const orIdx = filter.findIndex(item => typeof item === 'string' && item === 'OR')\n      const ret: any = {}\n\n      if (andIdx === 0) {\n        ret['AND'] = []\n        if (orIdx === -1) {\n          const andFilter = filter.slice(1)\n          andFilter.forEach(item => ret['AND'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        } else {\n          const andFilter = filter.slice(1, orIdx)\n          andFilter.forEach(item => ret['AND'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n          ret['OR'] = []\n          const orFilter = filter.slice(orIdx + 1)\n          orFilter.forEach(item => ret['OR'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        }\n      } else if (orIdx === 0) {\n        ret['OR'] = []\n        if (andIdx === -1) {\n          const orFilter = filter.slice(1)\n          orFilter.forEach(item => ret['OR'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        } else {\n          const orFilter = filter.slice(1, andIdx)\n          orFilter.forEach(item => ret['OR'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n          ret['AND'] = []\n          const andFilter = filter.slice(andIdx + 1)\n          andFilter.forEach(item => ret['AND'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        }\n      } else {\n        throw new Error('Wrong filter')\n      }\n      return ret\n    } else if (\n      query.q != null &&\n      Array.isArray(resourceSchema.searchable_columns) &&\n      resourceSchema.searchable_columns.length > 0\n    ) {\n      return {\n        OR: resourceSchema.searchable_columns.reduce((acc, cur) => {\n          acc.push({ [cur]: { contains: query.q } })\n          return acc\n        }, [] as any[]),\n      }\n    } else {\n      return {}\n    }\n  }\n\n  convertAgFilterModelToPrismaFilter(agFilter: TAgFilterSchema) {\n    const parsedRet = agFilter1Schema.safeParse(agFilter)\n    if (parsedRet.success) {\n      return _.mapValues(parsedRet.data, (v, k) => {\n        return {\n          [v.type]: v.filter,\n        }\n      })\n    } else {\n      const parsedRet = agFilter2Schema.safeParse(agFilter)\n      if (parsedRet.success) {\n        const ret: IPrismaFilterSchema = {} as IPrismaFilterSchema\n        for (const k of Object.keys(parsedRet.data)) {\n          const item = parsedRet.data[k]\n          if (item.operator === 'OR') {\n            if (ret.OR == null) {\n              ret.OR = []\n            }\n            for (const cond of item.conditions) {\n              ret.OR.push({\n                [k]: {\n                  [cond.type]: cond.filter,\n                },\n              })\n            }\n          }\n        }\n        return ret\n      } else {\n        return {}\n      }\n    }\n  }\n\n  async toUpdateParam(pathname: string, values: any) {\n    this.logger.debug!(`pathname: ${pathname}, body: ${JSON.stringify(values)}`)\n\n    const matchRet = matchPath(pathname)\n    const { resource, id, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n\n    this.removeRelationFields(schemaCache, resourceSchema, values)\n    const ret = {\n      resource,\n      param: {\n        where: { id: id },\n        data: values,\n      },\n    }\n    this.logger.debug!(JSON.stringify(ret))\n    return ret\n  }\n\n  // todo: 需要增加 relation name\n  async getAssociationDeleteStrategy(pathname: string) {\n    const matchRet = matchPath(pathname)\n    const { origin, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n    const theResourceSchema = schemaCache[resourceSchema]\n    if (theResourceSchema.associations == null) {\n      return {}\n    }\n    const ret = theResourceSchema.associations.reduce((acc, cur) => {\n      const assSchema = schemaCache[cur.model_name + 'ResourceSchema']\n      if (assSchema == null) {\n        throw new Error(`${resourceSchema} associated schema ${cur.model_name} is null`)\n      }\n      const relCol = assSchema.columns!.find(\n        ac => ac.column_type === 'reference' && ac.reference!.model_name === toModelName(origin),\n      )\n      if (relCol == null) {\n        throw new Error('Cannot found related column')\n      }\n      if (relCol.reference!['x-onSoftDelete'] === 'Restrict') {\n        acc[cur.model_name] = {\n          'x-onSoftDelete': relCol.reference!['x-onSoftDelete'],\n          name: relCol.name,\n          relatedDisplayName: assSchema.display_name,\n        }\n        return acc\n      }\n      return acc\n    }, {} as any)\n    return ret\n  }\n\n  async toRemoveParam(pathname: string) {\n    const matchRet = matchPath(pathname)\n    const { resource, origin, id, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n    const theResourceSchema = schemaCache[resourceSchema]\n    let assDisconnect: any = {}\n    let include: any\n    if (theResourceSchema.associations != null) {\n      assDisconnect = theResourceSchema.associations.reduce((acc, cur) => {\n        const assSchema = schemaCache[cur.model_name + 'ResourceSchema']\n        const relCol = assSchema.columns!.find(\n          ac => ac.column_type === 'reference' && ac.reference!.model_name === toModelName(origin),\n        )\n        if (relCol == null) {\n          throw new Error('Cannot found related column')\n        }\n        if (relCol.reference!['x-onSoftDelete'] !== 'Restrict' /* Restrict 已经确保 is_deleted 不需要解除关联 */) {\n          acc[cur.name] = {\n            set: [] /* disconnectAll 模拟 setNull */,\n          }\n          if (include == null) include = {}\n          include[cur.name] = true\n        }\n        return acc\n      }, {} as any)\n    }\n\n    let id2: string | number\n    if (id == null) {\n      throw new Error(`remove ${resource}, id null`)\n    } else {\n      id2 = await this.prismaUtils.parseId(resource, id)\n    }\n    const ret = {\n      resource,\n      param: {\n        where: {\n          id: id2,\n        },\n        data: Object.assign(\n          {\n            isDeleted: true,\n          },\n          assDisconnect,\n        ),\n        include,\n      },\n    }\n    this.logger.debug!(JSON.stringify(ret))\n    return ret\n  }\n\n  mapItemToPrismaFilter(\n    schemaCache: Record<string, Partial<IResourceSchema>>,\n    resourceSchema: Partial<IResourceSchema>,\n    item: any,\n  ) {\n    // 先初步转换\n    const k = Object.keys(item)[0]\n    // https://javascript.plainenglish.io/how-to-rename-object-keys-in-react-javascript-using-lodash-b73fb92ea24d\n    item[k] = _.mapKeys<string, string, string>(item[k], (k, v) => {\n      switch (k) {\n        case 'eq':\n          return 'equals'\n        case 'neq':\n          return 'not'\n        default:\n          return k\n      }\n    })\n\n    item[k] = _.mapValues<string, string, string | number>(item[k], v => {\n      // 得用 schema 判断下，主要就是 string 的 LIKE\n      const kk = k.split('.')\n      let col\n      if (kk.length === 2) {\n        const refCol = resourceSchema.columns!.find(col => {\n          return col.column_type === 'reference' && col.reference!['x-relationField'] === kk[0]\n        })\n        const refSchema = schemaCache[refCol!.reference!.model_name + 'ResourceSchema']\n        col = refSchema.columns!.find(item => item.name === kk[1])\n      } else {\n        col = resourceSchema.columns!.find(item => item.name === k)\n      }\n      if (col && ['string', 'textarea'].indexOf(col.column_type!) > -1) {\n        return v\n      } else if (isLikeNumber(v)) {\n        return Number(v)\n      } else {\n        return v\n      }\n    })\n\n    // 再将 . 改成嵌套（chatGPT 给出的方式）\n    const ret = {}\n    forEach(item, (value, key) => {\n      set(ret, key.replace(/\\./g, '.'), value)\n    })\n    return ret\n  }\n\n  async toCreateParam(pathname: string, values: any) {\n    const matchRet = matchPath(pathname)\n    // console.log(matchRet)\n    const { resource, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n    this.removeRelationFields(schemaCache, resourceSchema, values)\n    const theResourceSchema = schemaCache[resourceSchema]\n    // console.log(theResourceSchema)\n\n    const uniqueCols = theResourceSchema.columns!.filter(col => {\n      return col.column_type === 'reference' && col.reference!['x-unique']\n    })\n\n    if (uniqueCols.length === 0) {\n      return {\n        action: 'create',\n        resource: resource,\n        param: {\n          data: values,\n        },\n      }\n    } else if (uniqueCols.length > 1) {\n      throw new Error('Not support multiple unique key')\n    } else {\n      const uniqueCol = uniqueCols[0]\n      // console.log(uniqueCol)\n      return {\n        action: 'update',\n        resource: resource,\n        param: {\n          data: values,\n        },\n        'x-unique': uniqueCol,\n      }\n    }\n  }\n\n  removeRelationFields(schemaCache: Record<string, Partial<IResourceSchema>>, resourceSchema: string, values: any) {\n    // todo: 目前是通过显式声明 x-relationField 来删除 put 时候的 reference 值\n    const relationFields: string[] = []\n    const theResourceSchema = schemaCache[resourceSchema]\n    // console.log(theResourceSchema)\n    if (theResourceSchema) {\n      Object.keys(values).forEach((k: string) => {\n        const kProp = theResourceSchema.columns && theResourceSchema.columns.find(col => col.name === k)\n        if (kProp && kProp.column_type === 'reference') {\n          const relationField = kProp.reference?.['x-relationField']\n          if (relationField) {\n            relationFields.push(relationField)\n          }\n        }\n      })\n    }\n    relationFields.forEach(k => {\n      delete values[k]\n    })\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { toModelName } from '../../utils/matchPath'\nimport { PrismaClientSymbol } from '@flowda-projects/flowda-shared-types'\nimport type { LoggerService } from '@nestjs/common'\n\n@injectable()\nexport class PrismaUtils {\n  private readonly logger\n\n  constructor(\n    // todo: prisma 要不要强类型\n    // @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject(PrismaClientSymbol) private prisma: any,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(PrismaUtils.name)\n  }\n\n  async parseId(resource: string, id: string | number) {\n    const modelName = toModelName(resource)\n    const dmmf = await this.prisma._getDmmf()\n    const idField = dmmf.modelMap[modelName].fields.find((item: any) => item.name === 'id')\n    // this.logger.log(`id: ${id}, type: ${idField.type}`)\n    return idField.type === 'Int' && typeof id !== 'number' ? parseInt(id) : id\n  }\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport type { LoggerService } from '@nestjs/common'\nimport type { SchemaTransformer } from './schemaTransformer'\nimport { CustomZodSchemaSymbol, PrismaZodSchemaSymbol } from '@flowda-projects/flowda-shared-types'\nimport type { IResourceSchema } from '@flowda-projects/flowda-shared-types'\n\n@injectable()\nexport class SchemaService {\n  private readonly logger\n  private schemaCache?: Record<string, IResourceSchema>\n\n  constructor(\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n    @inject('Factory<SchemaTransformer>') private modelSchemaFactory: (z: z.AnyZodObject) => SchemaTransformer,\n    @inject(PrismaZodSchemaSymbol) private zt: any,\n    @inject(CustomZodSchemaSymbol) private czt: any,\n  ) {\n    this.logger = loggerFactory(SchemaService.name)\n  }\n\n  getSchema(): Record<string, IResourceSchema> {\n    console.time('generate schema')\n    const schema = Object.keys(this.czt).reduce((acc: any, k) => {\n      const e = this.czt[k]\n      if (['ZodObject'].indexOf(e.constructor.name) > -1) {\n        const transformer = this.modelSchemaFactory(e)\n        acc[k] = transformer.buildSchema(k).toSchema()\n      } else {\n        this.logger.error('Wrong type', k)\n      }\n      return acc\n    }, {})\n    this.schemaCache = schema\n    console.timeEnd('generate schema')\n    return schema\n  }\n\n  async getSchemaCache(): Promise<Record<string, IResourceSchema>> {\n    if (!this.schemaCache) {\n      // 重启的话内存里就没有了，可以手动重新获取下\n      this.logger.log(`schemaCache is empty, getSchema again.`)\n      return this.getSchema()\n    } else {\n      return this.schemaCache\n    }\n  }\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport type { LoggerService } from '@nestjs/common'\nimport { generateSchema as zodToOpenAPI } from '@anatine/zod-openapi'\nimport * as _ from 'radash'\nimport { isUndefined, lowerFirst, omitBy } from 'lodash'\nimport type { IResourceAssociationSchema, IResourceColumnSchema } from '@flowda-projects/flowda-shared-types'\nimport { PrismaZodSchemaSymbol } from '@flowda-projects/flowda-shared-types'\nimport { toPath } from '../../utils/matchPath'\n\nexport const SUFFIX = 'ResourceSchema'\n\n@injectable()\nexport class SchemaTransformer {\n  private readonly logger\n  private zodType?: z.AnyZodObject\n  private jsonSchema: any\n  private extendSchema: any\n  private modelLevelSchema: any = {}\n  private associations: IResourceAssociationSchema[] = []\n  private columns: Partial<IResourceColumnSchema>[] = []\n  private schemaName!: string\n\n  constructor(\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n    @inject(PrismaZodSchemaSymbol) private prismaZod: any,\n  ) {\n    this.logger = loggerFactory(SchemaTransformer.name)\n  }\n\n  setZodType(z: z.AnyZodObject) {\n    this.zodType = z\n  }\n\n  buildSchema(schemaName: string): SchemaTransformer {\n    if (!this.zodType) {\n      const errMsg = 'zodType is not initialized'\n      this.logger.error(errMsg)\n      throw new Error(errMsg)\n    }\n    this.schemaName = schemaName\n\n    this.jsonSchema = zodToOpenAPI(this.zodType)\n    this.modelLevelSchema = this.getModelSchema()\n\n    const props = this.getProperties()\n    this.columns = props.reduce<Partial<IResourceColumnSchema>[]>((acc, k) => {\n      const jsProp = this.jsonSchema.properties[k]\n\n      if (jsProp.virtual === 'true') {\n        return acc // 不处理 virtual，目前只有 1..1 用到\n      }\n\n      if (jsProp.type === 'array') {\n        if (!jsProp.model_name) {\n          throw new Error(`${this.schemaName} 1..n model_name is not set`)\n        }\n        this.associations.push({\n          foreign_key: this.getForeignKey(jsProp.foreign_key),\n          model_name: jsProp.model_name,\n          primary_key: jsProp.primary_key || 'id',\n          name: k,\n          slug: toPath(k),\n          display_name: jsProp.title,\n          schema_name: jsProp.model_name + SUFFIX,\n        })\n        return acc // 不处理 array\n      }\n\n      const c = _.assign(\n        { name: k },\n        {\n          name: k,\n          column_type: this.doColumnType(k),\n          format: this.doFormat(k),\n          display_name: this.doDisplayName(k),\n          access_type: this.doAccessType(k),\n          reference: jsProp.reference ? this.doRef(k) : undefined,\n          validators: this.doValidators(k),\n          prisma: jsProp.prisma,\n        },\n      )\n      acc.push(omitBy(c, isUndefined))\n      return acc\n    }, [])\n\n    if (Array.isArray(this.extendSchema.columns)) {\n      // 合并 __meta.columns 和 cols\n      this.columns.forEach((c: any) => {\n        const f = this.extendSchema.columns.find((c1: any) => c1.name === c.name)\n        Object.assign(c, f || {})\n      })\n    }\n\n    return this\n  }\n\n  toSchema() {\n    const name = this.schemaName.split(SUFFIX)[0]\n    const ret = {\n      name: name,\n      slug: toPath(name),\n      prisma: this.modelLevelSchema.prisma != null ? this.modelLevelSchema.prisma : undefined,\n      schema_name: this.schemaName,\n      primary_key: this.modelLevelSchema.primary_key || 'id',\n      custom: this.jsonSchema.custom,\n      display_column: this.doDisplayColumn(this.modelLevelSchema.display_column),\n      display_name: this.modelLevelSchema.display_name,\n      display_primary_key:\n        this.modelLevelSchema.display_primary_key == null ? true : this.modelLevelSchema.display_primary_key === 'true',\n      searchable_columns: this.modelLevelSchema.searchable_columns\n        ? this.modelLevelSchema.searchable_columns.split(',')\n        : undefined,\n      columns: this.columns,\n      associations: this.associations,\n      // __jsonschema: this.jsonSchema,\n    }\n    return omitBy(ret, isUndefined)\n  }\n\n  protected doDisplayColumn(display_column: string) {\n    if (!display_column) return undefined // 默认 id\n    const cols = display_column.split(',')\n    if (cols.length > 1) return cols\n    else return display_column\n  }\n\n  protected doRef(k: string): IResourceColumnSchema['reference'] {\n    const jsProp = this.jsonSchema.properties[k]\n    // console.log(jsProp)\n    const t = jsProp.reference + 'Schema'\n    const ref = zodToOpenAPI(this.prismaZod[t])\n    const { primary_key, display_name, display_column } = ref\n    const ret = {\n      model_name: jsProp.reference,\n      'x-relationField': jsProp['x-relationField'] || k.replace('Id', ''),\n      'x-onSoftDelete': !jsProp.nullable && this.jsonSchema.required.indexOf(k) > -1 ? 'Restrict' : 'SetNull',\n      primary_key,\n      display_name: jsProp.display_name || display_name,\n      display_column: this.doDisplayColumn(display_column),\n      // foreign_key: jsProp.foreign_key,\n    }\n    if (jsProp['x-unique']) {\n      return { ...ret, ...{ 'x-unique': true } }\n    } else {\n      return ret\n    }\n  }\n\n  protected getProperties() {\n    // 拿到最大的 columns\n    const keys = Object.keys((this.zodType as z.AnyZodObject).shape)\n    const properties = keys.filter(key => {\n      const item = (this.zodType as z.AnyZodObject).shape[key]\n      return (\n        key !== '__meta' &&\n        !(item instanceof z.ZodDefault || item._def.typeName === 'ZodDefault') &&\n        !(item instanceof z.ZodNever || item._def.typeName === 'ZodDefault') &&\n        keys.indexOf(key + 'Id') === -1 && // 忽略 product (product + 'Id' === productId)\n        key !== 'isDeleted'\n      )\n    })\n    return properties\n  }\n\n  protected getModelSchema() {\n    this.checkValid()\n    const _extends = this.extendSchema.extends\n    const { prisma } = this.extendSchema\n    if (prisma !== false && !this.prismaZod[_extends]) {\n      throw new Error('no _extends')\n    } else {\n      if (prisma !== false) {\n        return zodToOpenAPI(this.prismaZod[_extends])\n      } else {\n        const ret = Object.assign({ prisma: false }, _.omit(this.jsonSchema, ['type', 'properties', 'required']))\n        // this.logger.debug!(ret)\n        return ret\n      }\n    }\n  }\n\n  protected checkValid() {\n    // 暂时认为必须有 __meta，简化下逻辑\n    // 现在 __meta 里必须定义 extends\n    // todo: support no prisma schema\n    if (!this.jsonSchema.properties.__meta) {\n      throw new Error('no __meta')\n    }\n    this.extendSchema = JSON.parse(this.jsonSchema.properties.__meta.description)\n  }\n\n  protected doDisplayName(k: string): string | undefined {\n    const jsProp = this.jsonSchema.properties[k]\n    if (typeof jsProp.title === 'string') {\n      return jsProp.title\n    } else {\n      if (k === 'createdAt') {\n        return '创建时间'\n      }\n      if (k === 'updatedAt') {\n        return '更新时间'\n      }\n      return\n    }\n  }\n\n  protected doAccessType(k: string): IResourceColumnSchema['access_type'] | undefined {\n    const jsProp = this.jsonSchema.properties[k]\n    if (typeof jsProp.access_type === 'string') {\n      return jsProp.access_type\n    } else {\n      if (k === 'createdAt' || k === 'updatedAt' || k === this.modelLevelSchema.primary_key) {\n        return 'read_only'\n      } else {\n        return\n      }\n    }\n  }\n\n  protected doColumnType(k: string): IResourceColumnSchema['column_type'] {\n    const jsProp = this.jsonSchema.properties[k]\n    if (Array.isArray(jsProp.enum)) {\n      return 'tag'\n    } else if (jsProp.override_type) {\n      jsProp.type = jsProp.override_type\n    } else if (jsProp.format === 'date-time') {\n      return 'datetime'\n    }\n\n    if (jsProp.column_type) {\n      return jsProp.column_type\n    }\n\n    return jsProp.reference ? 'reference' : jsProp.type\n  }\n\n  private doValidators(k: string): IResourceColumnSchema['validators'] | undefined {\n    const jsProp = this.jsonSchema.properties[k]\n    if (!jsProp) {\n      this.logger.warn('undef key: ' + k)\n      return\n    }\n    const validators: IResourceColumnSchema['validators'] = []\n    if (['createdAt', 'updatedAt'].indexOf(k) === -1 && !jsProp.nullable && this.jsonSchema.required.indexOf(k) > -1) {\n      validators.push({ required: true })\n    }\n    return validators.length === 0 ? undefined : validators\n  }\n\n  private doFormat(k: string): IResourceColumnSchema['format'] | undefined {\n    const jsProp = this.jsonSchema.properties[k]\n    if (Array.isArray(jsProp.enum)) {\n      if (jsProp['x-enumNames']) {\n        const enumNames = jsProp['x-enumNames'].split(',')\n        return {\n          select_options: jsProp.enum.map((opt: string, idx: number) => ({\n            value: opt,\n            label: enumNames[idx],\n          })),\n        }\n      }\n      return {\n        select_options: jsProp.enum.map((opt: string) => ({\n          value: opt,\n          label: opt,\n        })),\n      }\n    } else {\n      return\n    }\n  }\n\n  private getForeignKey(fk: string) {\n    if (fk) return fk\n    const schema = this.extendSchema.extends\n    return lowerFirst(schema.split('Schema')[0]) + 'Id'\n  }\n}\n","import type { TAgSortSchema } from '@flowda-projects/flowda-shared-types'\n\nexport function convertSortAgToMotor(sort: TAgSortSchema) {\n  return sort[0] != null ? (sort[0].sort === 'asc' ? sort[0].colId : '-' + sort[0].colId) : undefined\n}\n","import { interfaces } from 'inversify'\n\nexport function bindService<T>(\n  bind: interfaces.Bind,\n  serviceIdentifier: interfaces.ServiceIdentifier<T>,\n  constructor: new (...args: never[]) => T,\n) {\n  bind<T>(constructor).toSelf().inSingletonScope()\n  bind<T>(serviceIdentifier).toFactory<T>((context: interfaces.Context) => {\n    return context.container.get<T>(constructor) as interfaces.SimpleFactory<T>\n  })\n}\n\nexport function bindServiceSymbol<T>(\n  bind: interfaces.Bind,\n  serviceIdentifier: interfaces.ServiceIdentifier<T>,\n  implementIdentifier: interfaces.ServiceIdentifier<T>,\n  constructor: interfaces.Newable<T>,\n) {\n  bind<T>(implementIdentifier).to(constructor).inSingletonScope()\n  bind<T>(serviceIdentifier).toFactory<T>((context: interfaces.Context) => {\n    return context.container.get<T>(implementIdentifier) as interfaces.SimpleFactory<T>\n  })\n}\n","const levelColorMap: Record<string, string> = {\n  0: '#c0392b', // Red\n  1: '#f39c12', // Yellow\n  3: '#00BCD4', // Cyan\n  4: '#ccc',\n}\n\nfunction style(level: number) {\n  return `\n  background: ${levelColorMap[level]};\n  border-radius: 0.5em;\n  color: white;\n  font-weight: bold;\n  padding: 2px 0.5em;\n`\n}\n\nexport function debug(msg: string) {\n  return [`%c debug `, style(4), '', msg]\n}\n\nexport function info(msg: string) {\n  return [`%c info `, style(3), '', msg]\n}\n\nexport function warn(msg: string) {\n  return [`%c warn `, style(1), '', msg]\n}\n\nexport function error(msg: string) {\n  return [`%c error `, style(0), '', msg]\n}\n","export class CustomError extends Error {\n  public override message\n\n  constructor(code: number, message: string, extra?: any) {\n    super(JSON.stringify({ code: code, message }))\n    this.message = JSON.stringify({ code, message, extra })\n  }\n}\n","import utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\n\nimport dayjs from 'dayjs'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\ndayjs.extend(advancedFormat)\n\nexport function getTimeExpire(min: number) {\n  const fmt = dayjs().tz('Asia/Shanghai').add(min, 'minute').format('YYYY-MM-DDTHH:mm:ss+z')\n  const ret = fmt.match(/.*(GMT\\+(\\d))/)\n  if (ret == null) {\n    return ''\n  } else {\n    return ret[0].replace(ret[1], ret[2].padStart(2, '0') + ':00')\n  }\n}\n\nexport function getTimeByDay(day: number): Date {\n  return dayjs().tz('Asia/Shanghai').add(day, 'day').toDate()\n}\n","import { ServiceSymbol } from '@flowda-projects/flowda-shared-types'\nimport { Container } from 'inversify'\n\nexport function getServices(servicesContainer: Container) {\n  return servicesContainer.getAll(ServiceSymbol).map((service: any) => {\n    return {\n      provide: service.constructor,\n      useValue: service,\n    }\n  })\n}\n","import * as plur from 'pluralize'\nimport * as _ from 'lodash'\n\nplur.addSingularRule(/data/i, 'data')\nplur.addSingularRule(/defs/i, 'def')\n\n// s* equipment 不可数\nconst REG = /(([a-z_]+s*)\\/?([A-Za-z0-9-_:]+)?)+/g\n\nconst NUM_REG = /^-?\\d+(\\.\\d+)?$/\n\nexport type TMatchPath = {\n  origin: string\n  resource: string\n  resourceSchema: string\n  id?: string | number\n}\n\n// todo: 暂时没想到更精确的方法，这个应该能覆盖 100%\nexport function isLikeNumber(value: string) {\n  return NUM_REG.test(value)\n}\n\nexport function toModelName(slug: string) {\n  return _.startCase(_.camelCase(plur.singular(slug))).replace(/ /g, '')\n}\n\nexport function toPath(modelName: string) {\n  return plur.plural(_.snakeCase(modelName))\n}\n\nexport function toSchemaName(slug: string) {\n  const p = plur.singular(slug)\n  return toModelName(p) + 'ResourceSchema'\n}\n\nexport function matchPath(path: string): TMatchPath[] {\n  const ret1 = path.match(REG)\n  // console.log(ret1)\n  if (ret1 != null) {\n    const ret2 = ret1.map(item => {\n      const [resource, id] = item.split('/')\n\n      const p = plur.singular(resource)\n      return {\n        resource: _.camelCase(p),\n        resourceSchema: toSchemaName(resource),\n        origin: resource,\n        id: isLikeNumber(id) ? _.toNumber(id) : id,\n      }\n    })\n    return ret2\n  } else {\n    return []\n  }\n}\n","import { IResourceSchema } from '@flowda-projects/flowda-shared-types'\n\nexport function getSchemaByDisplayName(schemaCache: Record<string, IResourceSchema>, displayName: string) {\n  const k = Object.keys(schemaCache).find(k => {\n    return schemaCache[k].display_name === displayName\n  })\n  if (k) {\n    return schemaCache[k]\n  } else {\n    return null\n  }\n}\n","import { extendZodWithOpenApi } from '@anatine/zod-openapi'\nimport { z } from 'zod'\n\nextendZodWithOpenApi(z)\n\nexport * from './zod/index'\nexport * as zt from './zod/index'\n","import { z } from 'zod';\nimport { Prisma } from '@prisma/client-flowda';\nimport { extendZodWithOpenApi } from '@anatine/zod-openapi';\nextendZodWithOpenApi(z)\n\n/////////////////////////////////////////\n// HELPER FUNCTIONS\n/////////////////////////////////////////\n\n// JSON\n//------------------------------------------------------\n\nexport type NullableJsonInput = Prisma.JsonValue | null | 'JsonNull' | 'DbNull' | Prisma.NullTypes.DbNull | Prisma.NullTypes.JsonNull;\n\nexport const transformJsonNull = (v?: NullableJsonInput) => {\n  if (!v || v === 'DbNull') return Prisma.DbNull;\n  if (v === 'JsonNull') return Prisma.JsonNull;\n  return v;\n};\n\nexport const JsonValue: z.ZodType<Prisma.JsonValue> = z.union([\n  z.string(),\n  z.number(),\n  z.boolean(),\n  z.lazy(() => z.array(JsonValue)),\n  z.lazy(() => z.record(JsonValue)),\n]);\n\nexport type JsonValueType = z.infer<typeof JsonValue>;\n\nexport const NullableJsonValue = z\n  .union([JsonValue, z.literal('DbNull'), z.literal('JsonNull')])\n  .nullable()\n  .transform((v) => transformJsonNull(v));\n\nexport type NullableJsonValueType = z.infer<typeof NullableJsonValue>;\n\nexport const InputJsonValue: z.ZodType<Prisma.InputJsonValue> = z.union([\n  z.string(),\n  z.number(),\n  z.boolean(),\n  z.lazy(() => z.array(InputJsonValue.nullable())),\n  z.lazy(() => z.record(InputJsonValue.nullable())),\n]);\n\nexport type InputJsonValueType = z.infer<typeof InputJsonValue>;\n\n// DECIMAL\n//------------------------------------------------------\n\nexport const DecimalJSLikeSchema: z.ZodType<Prisma.DecimalJsLike> = z.object({ d: z.array(z.number()), e: z.number(), s: z.number(), toFixed: z.function().args().returns(z.string()), });\n\nexport const DecimalJSLikeListSchema: z.ZodType<Prisma.DecimalJsLike[]> = z.object({ d: z.array(z.number()), e: z.number(), s: z.number(), toFixed: z.function().args().returns(z.string()), }).array();\n\nexport const DECIMAL_STRING_REGEX = /^[0-9.,e+-bxffo_cp]+$|Infinity|NaN/;\n\nexport const isValidDecimalInput =\n  (v?: null | string | number | Prisma.DecimalJsLike): v is string | number | Prisma.DecimalJsLike => {\n    if (v === undefined || v === null) return false;\n    return (\n      (typeof v === 'object' && 'd' in v && 'e' in v && 's' in v && 'toFixed' in v) ||\n      (typeof v === 'string' && DECIMAL_STRING_REGEX.test(v)) ||\n      typeof v === 'number'\n    )\n  };\n\n/////////////////////////////////////////\n// ENUMS\n/////////////////////////////////////////\n\nexport const TransactionIsolationLevelSchema = z.enum(['ReadUncommitted','ReadCommitted','RepeatableRead','Serializable']);\n\nexport const TenantScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','name','hashedPassword','hashedRefreshToken','displayName']);\n\nexport const TaskFormRelationScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','taskDefinitionKey','formKey']);\n\nexport const TableFilterScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','path','name','filterJSON']);\n\nexport const UserScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','username','hashedPassword','hashedRefreshToken','recoveryCode','recoveryToken','email','mobile','anonymousCustomerToken','image','tenantId','weixinProfileId']);\n\nexport const UserPreSignupScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','email','verifyCode','tenantId']);\n\nexport const UserProfileScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','userId','fullName','tenantId']);\n\nexport const AuditsScalarFieldEnumSchema = z.enum(['id','createdAt','auditId','auditType','userId','username','action','auditChanges','version']);\n\nexport const DynamicTableDefScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','name','extendedSchema','tenantId']);\n\nexport const DynamicTableDefColumnScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','dynamicTableDefId','name','type','extendedSchema','tenantId']);\n\nexport const DynamicTableDataScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','dynamicTableDefId','data','tenantId']);\n\nexport const MenuScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','treeData','tenantId']);\n\nexport const SentSmsScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','mobile','code']);\n\nexport const WeixinProfileScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','unionOrOpenid','unionid','loginOpenid','headimgurl','nickname','sex']);\n\nexport const OrderProfileScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','tenantId','userId','productType','plan','amount','expireAt']);\n\nexport const ProductScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','tenantId','name','price','productType','plan','amount','extendedDescriptionData','fileSize','storeDuration','hasAds','tecSupport','validityPeriod','restricted']);\n\nexport const ProductSnapshotScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','userId','tenantId','snapshotPrice','orderId','productId']);\n\nexport const OrderScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','userId','tenantId','serial','status']);\n\nexport const PayScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','userId','tenantId','status','orderId','transactionId']);\n\nexport const RequestErrorLogScalarFieldEnumSchema = z.enum(['id','createdAt','requestId','tenantId','userId','log']);\n\nexport const SortOrderSchema = z.enum(['asc','desc']);\n\nexport const NullableJsonNullValueInputSchema = z.enum(['DbNull','JsonNull',]).transform((v) => transformJsonNull(v));\n\nexport const JsonNullValueInputSchema = z.enum(['JsonNull',]);\n\nexport const NullsOrderSchema = z.enum(['first','last']);\n\nexport const JsonNullValueFilterSchema = z.enum(['DbNull','JsonNull','AnyNull',]);\n\nexport const DynamicColumnTypeSchema = z.enum(['string','textarea','integer','boolean','datetime','tag','reference'])\n\nexport type DynamicColumnTypeType = `${z.infer<typeof DynamicColumnTypeSchema>}`\n\nexport const ProductTypeSchema = z.enum(['AMOUNT','PLAN'])\n\nexport type ProductTypeType = `${z.infer<typeof ProductTypeSchema>}`\n\nexport const OrderStatusSchema = z.enum(['INITIALIZED','PAY_ASSOCIATED','FREE_DEAL','CANCELED'])\n\nexport type OrderStatusType = `${z.infer<typeof OrderStatusSchema>}`\n\nexport const PayStatusSchema = z.enum(['UNPAIED','PAIED','REFUND'])\n\nexport type PayStatusType = `${z.infer<typeof PayStatusSchema>}`\n\n/////////////////////////////////////////\n// MODELS\n/////////////////////////////////////////\n\n/////////////////////////////////////////\n// TENANT SCHEMA\n/////////////////////////////////////////\n\nexport const TenantSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  name: z.string().openapi({\"title\":\"租户唯一名称\"}),\n  hashedPassword: z.string().nullable(),\n  hashedRefreshToken: z.string().nullable(),\n  displayName: z.string().nullable().openapi({\"title\":\"租户显示名称\"}),\n}).openapi({\"display_name\":\"租户信息\",\"display_column\":\"name\"})\n\nexport type Tenant = z.infer<typeof TenantSchema>\n\n// TENANT RELATION SCHEMA\n//------------------------------------------------------\n\nexport type TenantRelations = {\n  menu?: MenuWithRelations | null;\n  users: UserWithRelations[];\n  dynamicTableDefs: DynamicTableDefWithRelations[];\n  dynamicTableDefColumns: DynamicTableDefColumnWithRelations[];\n  dynamicTableData: DynamicTableDataWithRelations[];\n  userPreSignup: UserPreSignupWithRelations[];\n  orderProfile: OrderProfileWithRelations[];\n  userProfile: UserProfileWithRelations[];\n  productSnapshots: ProductSnapshotWithRelations[];\n  orders: OrderWithRelations[];\n  pays: PayWithRelations[];\n  products: ProductWithRelations[];\n};\n\nexport type TenantWithRelations = z.infer<typeof TenantSchema> & TenantRelations\n\nexport const TenantWithRelationsSchema: z.ZodObject<any> = TenantSchema.merge(z.object({\n  menu: z.lazy(() => MenuWithRelationsSchema).nullable(),\n  users: z.lazy(() => UserWithRelationsSchema).array().openapi({\"model_name\":\"User\"}),\n  dynamicTableDefs: z.lazy(() => DynamicTableDefWithRelationsSchema).array().openapi({\"model_name\":\"DynamicTableDef\"}),\n  dynamicTableDefColumns: z.lazy(() => DynamicTableDefColumnWithRelationsSchema).array().openapi({\"model_name\":\"DynamicTableDefColumn\"}),\n  dynamicTableData: z.lazy(() => DynamicTableDataWithRelationsSchema).array().openapi({\"model_name\":\"DynamicTableData\"}),\n  userPreSignup: z.lazy(() => UserPreSignupWithRelationsSchema).array().openapi({\"model_name\":\"UserPreSignup\"}),\n  orderProfile: z.lazy(() => OrderProfileWithRelationsSchema).array().openapi({\"model_name\":\"OrderProfile\"}),\n  userProfile: z.lazy(() => UserProfileWithRelationsSchema).array().openapi({\"model_name\":\"UserProfile\"}),\n  productSnapshots: z.lazy(() => ProductSnapshotWithRelationsSchema).array().openapi({\"model_name\":\"ProductSnapshot\"}),\n  orders: z.lazy(() => OrderWithRelationsSchema).array().openapi({\"model_name\":\"Order\"}),\n  pays: z.lazy(() => PayWithRelationsSchema).array().openapi({\"model_name\":\"Pay\"}),\n  products: z.lazy(() => ProductWithRelationsSchema).array().openapi({\"model_name\":\"Product\"}),\n}))\n\n/////////////////////////////////////////\n// TASK FORM RELATION SCHEMA\n/////////////////////////////////////////\n\nexport const TaskFormRelationSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  taskDefinitionKey: z.string(),\n  formKey: z.string(),\n}).openapi({\"display_name\":\"节点和表单关联关系\"})\n\nexport type TaskFormRelation = z.infer<typeof TaskFormRelationSchema>\n\n/////////////////////////////////////////\n// TABLE FILTER SCHEMA\n/////////////////////////////////////////\n\nexport const TableFilterSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  path: z.string(),\n  name: z.string(),\n  filterJSON: z.string(),\n}).openapi({\"display_name\":\"表和查询条件的关系\"})\n\nexport type TableFilter = z.infer<typeof TableFilterSchema>\n\n/////////////////////////////////////////\n// USER SCHEMA\n/////////////////////////////////////////\n\nexport const UserSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  username: z.string(),\n  hashedPassword: z.string().nullable(),\n  hashedRefreshToken: z.string().nullable(),\n  recoveryCode: z.string().nullable(),\n  recoveryToken: z.string().nullable(),\n  email: z.string().nullable().openapi({\"title\":\"邮箱\"}),\n  mobile: z.string().nullable().openapi({\"title\":\"手机号\"}),\n  anonymousCustomerToken: z.string().nullable().openapi({\"title\":\"快捷创建\"}),\n  image: z.string().nullable().openapi({\"title\":\"头像\"}),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n  weixinProfileId: z.number().int().nullable().openapi({\"reference\":\"WeixinProfile\"}),\n}).openapi({\"display_name\":\"员工\",\"display_column\":\"username\"})\n\nexport type User = z.infer<typeof UserSchema>\n\n// USER RELATION SCHEMA\n//------------------------------------------------------\n\nexport type UserRelations = {\n  tenant: TenantWithRelations;\n  profile?: UserProfileWithRelations | null;\n  weixinProfile?: WeixinProfileWithRelations | null;\n  orderProfile?: OrderProfileWithRelations | null;\n  productSnapshots: ProductSnapshotWithRelations[];\n  orders: OrderWithRelations[];\n  pays: PayWithRelations[];\n};\n\nexport type UserWithRelations = z.infer<typeof UserSchema> & UserRelations\n\nexport const UserWithRelationsSchema: z.ZodObject<any> = UserSchema.merge(z.object({\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n  profile: z.lazy(() => UserProfileWithRelationsSchema).nullable(),\n  weixinProfile: z.lazy(() => WeixinProfileWithRelationsSchema).nullable(),\n  orderProfile: z.lazy(() => OrderProfileWithRelationsSchema).nullable(),\n  productSnapshots: z.lazy(() => ProductSnapshotWithRelationsSchema).array(),\n  orders: z.lazy(() => OrderWithRelationsSchema).array(),\n  pays: z.lazy(() => PayWithRelationsSchema).array(),\n}))\n\n/////////////////////////////////////////\n// USER PRE SIGNUP SCHEMA\n/////////////////////////////////////////\n\nexport const UserPreSignupSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  email: z.string(),\n  verifyCode: z.string(),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n}).openapi({\"display_name\":\"用户预注册表\",\"display_column\":\"email\"})\n\nexport type UserPreSignup = z.infer<typeof UserPreSignupSchema>\n\n// USER PRE SIGNUP RELATION SCHEMA\n//------------------------------------------------------\n\nexport type UserPreSignupRelations = {\n  tenant: TenantWithRelations;\n};\n\nexport type UserPreSignupWithRelations = z.infer<typeof UserPreSignupSchema> & UserPreSignupRelations\n\nexport const UserPreSignupWithRelationsSchema: z.ZodObject<any> = UserPreSignupSchema.merge(z.object({\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n}))\n\n/////////////////////////////////////////\n// USER PROFILE SCHEMA\n/////////////////////////////////////////\n\nexport const UserProfileSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  userId: z.number().int(),\n  fullName: z.string(),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n})\n\nexport type UserProfile = z.infer<typeof UserProfileSchema>\n\n// USER PROFILE RELATION SCHEMA\n//------------------------------------------------------\n\nexport type UserProfileRelations = {\n  user: UserWithRelations;\n  tenant: TenantWithRelations;\n};\n\nexport type UserProfileWithRelations = z.infer<typeof UserProfileSchema> & UserProfileRelations\n\nexport const UserProfileWithRelationsSchema: z.ZodObject<any> = UserProfileSchema.merge(z.object({\n  user: z.lazy(() => UserWithRelationsSchema),\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n}))\n\n/////////////////////////////////////////\n// AUDITS SCHEMA\n/////////////////////////////////////////\n\nexport const AuditsSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  auditId: z.number().int().openapi({\"title\":\"关联\"}),\n  auditType: z.string().openapi({\"title\":\"审计类型(关联\"}),\n  userId: z.string().openapi({\"title\":\"用户\"}),\n  username: z.string().nullable().openapi({\"title\":\"用户名\"}),\n  action: z.string().openapi({\"title\":\"动作(e.g.\"}),\n  auditChanges: z.string().openapi({\"title\":\"变化\"}),\n  version: z.number().int().openapi({\"title\":\"版本\"}),\n}).openapi({\"display_name\":\"审计日志\"})\n\nexport type Audits = z.infer<typeof AuditsSchema>\n\n/////////////////////////////////////////\n// DYNAMIC TABLE DEF SCHEMA\n/////////////////////////////////////////\n\nexport const DynamicTableDefSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  name: z.string().openapi({\"title\":\"表英文名\"}),\n  extendedSchema: NullableJsonValue.optional(),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n}).openapi({\"display_name\":\"动态表定义\",\"display_column\":\"name\"})\n\nexport type DynamicTableDef = z.infer<typeof DynamicTableDefSchema>\n\n// DYNAMIC TABLE DEF RELATION SCHEMA\n//------------------------------------------------------\n\nexport type DynamicTableDefRelations = {\n  dynamicTableDefColumns: DynamicTableDefColumnWithRelations[];\n  dynamicTableData: DynamicTableDataWithRelations[];\n  tenant: TenantWithRelations;\n};\n\nexport type DynamicTableDefWithRelations = Omit<z.infer<typeof DynamicTableDefSchema>, \"extendedSchema\"> & {\n  extendedSchema?: NullableJsonInput;\n} & DynamicTableDefRelations\n\nexport const DynamicTableDefWithRelationsSchema: z.ZodObject<any> = DynamicTableDefSchema.merge(z.object({\n  dynamicTableDefColumns: z.lazy(() => DynamicTableDefColumnWithRelationsSchema).array().openapi({\"model_name\":\"DynamicTableDefColumn\"}),\n  dynamicTableData: z.lazy(() => DynamicTableDataWithRelationsSchema).array().openapi({\"model_name\":\"DynamicTableData\"}),\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n}))\n\n/////////////////////////////////////////\n// DYNAMIC TABLE DEF COLUMN SCHEMA\n/////////////////////////////////////////\n\nexport const DynamicTableDefColumnSchema = z.object({\n  type: DynamicColumnTypeSchema.openapi({\"title\":\"类型\"}),\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  dynamicTableDefId: z.number().int().openapi({\"reference\":\"DynamicTableDef\"}),\n  name: z.string().openapi({\"title\":\"列名\"}),\n  extendedSchema: NullableJsonValue.optional(),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n}).openapi({\"display_name\":\"动态表列定义\",\"display_column\":\"name\"})\n\nexport type DynamicTableDefColumn = z.infer<typeof DynamicTableDefColumnSchema>\n\n// DYNAMIC TABLE DEF COLUMN RELATION SCHEMA\n//------------------------------------------------------\n\nexport type DynamicTableDefColumnRelations = {\n  dynamicTableDef: DynamicTableDefWithRelations;\n  tenant: TenantWithRelations;\n};\n\nexport type DynamicTableDefColumnWithRelations = Omit<z.infer<typeof DynamicTableDefColumnSchema>, \"extendedSchema\"> & {\n  extendedSchema?: NullableJsonInput;\n} & DynamicTableDefColumnRelations\n\nexport const DynamicTableDefColumnWithRelationsSchema: z.ZodObject<any> = DynamicTableDefColumnSchema.merge(z.object({\n  dynamicTableDef: z.lazy(() => DynamicTableDefWithRelationsSchema),\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n}))\n\n/////////////////////////////////////////\n// DYNAMIC TABLE DATA SCHEMA\n/////////////////////////////////////////\n\nexport const DynamicTableDataSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  dynamicTableDefId: z.number().int().openapi({\"reference\":\"DynamicTableDef\"}),\n  data: InputJsonValue,\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n}).openapi({\"display_name\":\"动态表数据\"})\n\nexport type DynamicTableData = z.infer<typeof DynamicTableDataSchema>\n\n// DYNAMIC TABLE DATA RELATION SCHEMA\n//------------------------------------------------------\n\nexport type DynamicTableDataRelations = {\n  dynamicTableDef: DynamicTableDefWithRelations;\n  tenant: TenantWithRelations;\n};\n\nexport type DynamicTableDataWithRelations = z.infer<typeof DynamicTableDataSchema> & DynamicTableDataRelations\n\nexport const DynamicTableDataWithRelationsSchema: z.ZodObject<any> = DynamicTableDataSchema.merge(z.object({\n  dynamicTableDef: z.lazy(() => DynamicTableDefWithRelationsSchema),\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n}))\n\n/////////////////////////////////////////\n// MENU SCHEMA\n/////////////////////////////////////////\n\nexport const MenuSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  treeData: InputJsonValue,\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n}).openapi({\"display_name\":\"菜单\",\"display_column\":\"name\"})\n\nexport type Menu = z.infer<typeof MenuSchema>\n\n// MENU RELATION SCHEMA\n//------------------------------------------------------\n\nexport type MenuRelations = {\n  tenant: TenantWithRelations;\n};\n\nexport type MenuWithRelations = z.infer<typeof MenuSchema> & MenuRelations\n\nexport const MenuWithRelationsSchema: z.ZodObject<any> = MenuSchema.merge(z.object({\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n}))\n\n/////////////////////////////////////////\n// SENT SMS SCHEMA\n/////////////////////////////////////////\n\nexport const SentSmsSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  mobile: z.string(),\n  code: z.string(),\n}).openapi({\"display_name\":\"已发送短信\",\"display_column\":\"name\"})\n\nexport type SentSms = z.infer<typeof SentSmsSchema>\n\n/////////////////////////////////////////\n// WEIXIN PROFILE SCHEMA\n/////////////////////////////////////////\n\nexport const WeixinProfileSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  unionOrOpenid: z.string(),\n  unionid: z.string().nullable().openapi({\"title\":\"微信\"}),\n  loginOpenid: z.string().nullable().openapi({\"title\":\"微信\"}),\n  headimgurl: z.string().nullable(),\n  nickname: z.string().nullable(),\n  sex: z.number().int().nullable(),\n}).openapi({\"primary_key\":\"id\",\"display_name\":\"微信用户信息\",\"display_column\":\"nickname\"})\n\nexport type WeixinProfile = z.infer<typeof WeixinProfileSchema>\n\n// WEIXIN PROFILE RELATION SCHEMA\n//------------------------------------------------------\n\nexport type WeixinProfileRelations = {\n  users: UserWithRelations[];\n};\n\nexport type WeixinProfileWithRelations = z.infer<typeof WeixinProfileSchema> & WeixinProfileRelations\n\nexport const WeixinProfileWithRelationsSchema: z.ZodObject<any> = WeixinProfileSchema.merge(z.object({\n  users: z.lazy(() => UserWithRelationsSchema).array(),\n}))\n\n/////////////////////////////////////////\n// ORDER PROFILE SCHEMA\n/////////////////////////////////////////\n\nexport const OrderProfileSchema = z.object({\n  productType: ProductTypeSchema,\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n  userId: z.number().int(),\n  plan: z.number().int().nullable(),\n  amount: z.number().int().nullable().openapi({\"title\":\"额度\"}),\n  expireAt: z.date().nullable(),\n}).openapi({\"primary_key\":\"id\",\"display_name\":\"用户订单信息\",\"display_column\":\"productType\"})\n\nexport type OrderProfile = z.infer<typeof OrderProfileSchema>\n\n// ORDER PROFILE RELATION SCHEMA\n//------------------------------------------------------\n\nexport type OrderProfileRelations = {\n  tenant: TenantWithRelations;\n  user: UserWithRelations;\n};\n\nexport type OrderProfileWithRelations = z.infer<typeof OrderProfileSchema> & OrderProfileRelations\n\nexport const OrderProfileWithRelationsSchema: z.ZodObject<any> = OrderProfileSchema.merge(z.object({\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n  user: z.lazy(() => UserWithRelationsSchema),\n}))\n\n/////////////////////////////////////////\n// PRODUCT SCHEMA\n/////////////////////////////////////////\n\nexport const ProductSchema = z.object({\n  productType: ProductTypeSchema,\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n  name: z.string().openapi({\"title\":\"产品名\"}),\n  /**\n   * @schema.override_type integer\n   */\n  price: z.union([z.number(),z.string(),DecimalJSLikeSchema,]).refine((v) => isValidDecimalInput(v), { message: \"Field 'price' must be a Decimal. Location: ['Models', 'Product']\",  }).openapi({\"title\":\"价格\",\"override_type\":\"integer\"}),\n  plan: z.number().int().nullable(),\n  amount: z.number().int().openapi({\"title\":\"额度\"}),\n  extendedDescriptionData: NullableJsonValue.optional(),\n  fileSize: z.string().nullable(),\n  storeDuration: z.number().int().nullable(),\n  hasAds: z.string().nullable().openapi({\"title\":\"广告\"}),\n  tecSupport: z.string().nullable().openapi({\"title\":\"技术支持\"}),\n  validityPeriod: z.number().int().nullable().openapi({\"title\":\"有效期/天\"}),\n  restricted: z.number().int(),\n}).openapi({\"primary_key\":\"id\",\"searchable_columns\":\"id,name\",\"display_name\":\"产品\",\"display_column\":\"name\"})\n\nexport type Product = z.infer<typeof ProductSchema>\n\n// PRODUCT RELATION SCHEMA\n//------------------------------------------------------\n\nexport type ProductRelations = {\n  tenant: TenantWithRelations;\n  productSnapshots: ProductSnapshotWithRelations[];\n};\n\nexport type ProductWithRelations = Omit<z.infer<typeof ProductSchema>, \"extendedDescriptionData\"> & {\n  extendedDescriptionData?: NullableJsonInput;\n} & ProductRelations\n\nexport const ProductWithRelationsSchema: z.ZodObject<any> = ProductSchema.merge(z.object({\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n  productSnapshots: z.lazy(() => ProductSnapshotWithRelationsSchema).array().openapi({\"model_name\":\"ProductSnapshot\",\"foreign_key\":\"productId\",\"primary_key\":\"id\"}),\n}))\n\n/////////////////////////////////////////\n// PRODUCT SNAPSHOT SCHEMA\n/////////////////////////////////////////\n\nexport const ProductSnapshotSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  userId: z.number().int().openapi({\"reference\":\"User\"}),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n  snapshotPrice: z.union([z.number(),z.string(),DecimalJSLikeSchema,]).refine((v) => isValidDecimalInput(v), { message: \"Field 'snapshotPrice' must be a Decimal. Location: ['Models', 'ProductSnapshot']\",  }),\n  orderId: z.number().int(),\n  productId: z.number().int(),\n})\n\nexport type ProductSnapshot = z.infer<typeof ProductSnapshotSchema>\n\n// PRODUCT SNAPSHOT RELATION SCHEMA\n//------------------------------------------------------\n\nexport type ProductSnapshotRelations = {\n  user: UserWithRelations;\n  tenant: TenantWithRelations;\n  order: OrderWithRelations;\n  product: ProductWithRelations;\n};\n\nexport type ProductSnapshotWithRelations = z.infer<typeof ProductSnapshotSchema> & ProductSnapshotRelations\n\nexport const ProductSnapshotWithRelationsSchema: z.ZodObject<any> = ProductSnapshotSchema.merge(z.object({\n  user: z.lazy(() => UserWithRelationsSchema),\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n  order: z.lazy(() => OrderWithRelationsSchema),\n  product: z.lazy(() => ProductWithRelationsSchema),\n}))\n\n/////////////////////////////////////////\n// ORDER SCHEMA\n/////////////////////////////////////////\n\nexport const OrderSchema = z.object({\n  status: OrderStatusSchema,\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  userId: z.number().int().openapi({\"reference\":\"User\"}),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n  serial: z.number().int(),\n}).openapi({\"primary_key\":\"id\",\"display_name\":\"订单\",\"display_primary_key\":\"true\"})\n\nexport type Order = z.infer<typeof OrderSchema>\n\n// ORDER RELATION SCHEMA\n//------------------------------------------------------\n\nexport type OrderRelations = {\n  user: UserWithRelations;\n  tenant: TenantWithRelations;\n  pay?: PayWithRelations | null;\n  productSnapshots: ProductSnapshotWithRelations[];\n};\n\nexport type OrderWithRelations = z.infer<typeof OrderSchema> & OrderRelations\n\nexport const OrderWithRelationsSchema: z.ZodObject<any> = OrderSchema.merge(z.object({\n  user: z.lazy(() => UserWithRelationsSchema),\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n  pay: z.lazy(() => PayWithRelationsSchema).nullable(),\n  productSnapshots: z.lazy(() => ProductSnapshotWithRelationsSchema).array(),\n}))\n\n/////////////////////////////////////////\n// PAY SCHEMA\n/////////////////////////////////////////\n\nexport const PaySchema = z.object({\n  status: PayStatusSchema,\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  userId: z.number().int().openapi({\"reference\":\"User\"}),\n  tenantId: z.number().int().openapi({\"reference\":\"Tenant\"}),\n  orderId: z.number().int(),\n  transactionId: z.string(),\n})\n\nexport type Pay = z.infer<typeof PaySchema>\n\n// PAY RELATION SCHEMA\n//------------------------------------------------------\n\nexport type PayRelations = {\n  user: UserWithRelations;\n  tenant: TenantWithRelations;\n  Order: OrderWithRelations;\n};\n\nexport type PayWithRelations = z.infer<typeof PaySchema> & PayRelations\n\nexport const PayWithRelationsSchema: z.ZodObject<any> = PaySchema.merge(z.object({\n  user: z.lazy(() => UserWithRelationsSchema),\n  tenant: z.lazy(() => TenantWithRelationsSchema),\n  Order: z.lazy(() => OrderWithRelationsSchema),\n}))\n\n/////////////////////////////////////////\n// REQUEST ERROR LOG SCHEMA\n/////////////////////////////////////////\n\nexport const RequestErrorLogSchema = z.object({\n  id: z.string().cuid(),\n  createdAt: z.date(),\n  requestId: z.string(),\n  tenantId: z.number().int().nullable(),\n  userId: z.number().int().nullable(),\n  log: InputJsonValue,\n})\n\nexport type RequestErrorLog = z.infer<typeof RequestErrorLogSchema>\n","module.exports = require(\"@anatine/zod-openapi\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/schedule\");","module.exports = require(\"@paralleldrive/cuid2\");","module.exports = require(\"@prisma/client-flowda\");","module.exports = require(\"@trpc/server\");","module.exports = require(\"@trpc/server/adapters/express\");","module.exports = require(\"axios\");","module.exports = require(\"bcrypt\");","module.exports = require(\"consola\");","module.exports = require(\"dayjs\");","module.exports = require(\"dayjs/plugin/advancedFormat\");","module.exports = require(\"dayjs/plugin/timezone\");","module.exports = require(\"dayjs/plugin/utc\");","module.exports = require(\"express\");","module.exports = require(\"http-proxy-middleware\");","module.exports = require(\"inversify\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lodash\");","module.exports = require(\"nestjs-zod\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"pluralize\");","module.exports = require(\"radash\");","module.exports = require(\"tencentcloud-sdk-nodejs\");","module.exports = require(\"tslib\");","module.exports = require(\"wechat-oauth\");","module.exports = require(\"wechatpay-node-v3\");","module.exports = require(\"znv\");","module.exports = require(\"zod\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\n\nimport { AppModule } from './app/app.module'\nimport { globalPrefix, setupNestApp } from './setup'\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule)\n  setupNestApp(app)\n  const port = process.env.PORT || 3350\n  await app.listen(port)\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${globalPrefix}`)\n}\n\nbootstrap()\n"],"names":[],"sourceRoot":""}